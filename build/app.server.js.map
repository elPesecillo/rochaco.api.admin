{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app.js","webpack:///./src/constants/menusConfig.js","webpack:///./src/constants/userType.js","webpack:///./src/controllers/handleFile.js","webpack:///./src/controllers/menus.js","webpack:///./src/controllers/postalCodes.js","webpack:///./src/controllers/signup.js","webpack:///./src/controllers/siteAuth.js","webpack:///./src/controllers/suburbInfo.js","webpack:///./src/controllers/userAdmin.js","webpack:///./src/logic/auth.js","webpack:///./src/logic/menuService.js","webpack:///./src/logic/postalCodeService.js","webpack:///./src/logic/suburbService.js","webpack:///./src/logic/userService.js","webpack:///./src/logic/viewPermissions.js","webpack:///./src/middleware/auth.js","webpack:///./src/models/index.js","webpack:///./src/models/menu.js","webpack:///./src/models/postalCode.js","webpack:///./src/models/role.js","webpack:///./src/models/schemas/suburbFileSchema.js","webpack:///./src/models/schemas/suburbStatusSchema.js","webpack:///./src/models/suburb.js","webpack:///./src/models/user.js","webpack:///./src/routes/apiRoutes.js","webpack:///./src/routes/router.js","webpack:///./src/server.js","webpack:///external \"@sendgrid/mail\"","webpack:///external \"base-64\"","webpack:///external \"bcryptjs\"","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"debug\"","webpack:///external \"dotenv\"","webpack:///external \"dropbox-v2-api\"","webpack:///external \"express\"","webpack:///external \"fs\"","webpack:///external \"http\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"moment\"","webpack:///external \"mongoose\"","webpack:///external \"morgan\"","webpack:///external \"multer\"","webpack:///external \"request\""],"names":["dotenv","require","express","logger","bodyParser","cors","config","connectDb","router","app","use","urlencoded","extended","json","module","exports","userType","userTypes","menus","name","path","icon","visible","validUserTypes","guard","admin","guest","neighbor","order","userServices","suburbService","fs","dropboxV2Api","sgMail","getFileName","nodeFileName","originalName","idx","lastIndexOf","substring","uploadFileDropbox","file","dropbox","authenticate","token","process","env","DROPBOX_TOKEN","Promise","resolve","reject","resource","parameters","filename","originalname","readStream","createReadStream","destination","err","result","response","base64_encode","file_path","bitmap","readFileSync","Buffer","from","toString","getEmailAttachments","files","attachments","forEach","push","content","sendEmail","user","suburb","setApiKey","SENDGRID_API_KEY","msg","to","OWNER_EMAILS","split","subject","text","html","send","ex","deleteTemporaryFiles","unlink","console","log","processFileUpload","data","userId","lastName","cellphone","email","postalCode","section","suburbName","recaptchaToken","validCaptcha","validateRecaptcha","proms","uploadedFiles","all","updateUser","_id","active","saveSuburb","location","userAdmins","status","description","map","fil","fileName","actionType","mimetype","uploadFile","req","res","next","body","processFiles","message","menuService","getMenusByUser","headers","postalCodeService","getPostalCodeInfo","getCPInfo","query","signUp","undefined","success","facebookId","googleId","password","loginName","saveFacebookUser","saveGoogleUser","saveEmailUser","User","viewPermissions","validateUser","userLogin","getLogin","then","login","validPass","validatePassword","generateUserToken","succes","checkAuth","getTokenByFacebookId","getUserByFacebookId","usr","getTokenByGoogleId","getUserByGoogleId","isValidToken","isValid","valid","validateTokenPath","permissionValid","logOff","session","destroy","getSuburbByAdminId","id","getSuburbByAdminUser","userService","resV","saveUser","userConfirmed","resSave","saveUserWithPassword","createUserByType","params","getUserByType","getUserInfo","getUserByToken","openApi","Auth","validateToken","def","isOpenApi","apiPath","indexOf","validateApiRequest","userToken","getPayload","getTokenPayload","payload","userMenus","filter","menu","types","g","toLowerCase","length","item","errP","PostalCode","getInfo","cp","Suburb","suburbObj","SaveSuburb","sub","suburbAddStatus","UpdateStatus","suburbAddStatusByName","UpdateStatusByName","GetSuburbByUserId","request","userObj","secretKey","RECAPTCHA_SECRET","verificationURL","post","error","resG","JSON","parse","score","encryptPassword","resEncrypt","encryptedPassword","hash","find","findById","permissions","validateWithPayload","validPath","p","toLocaleLowerCase","jwt","validApiRequest","auth","stringify","checkApiAuth","baseUrl","mongoose","Menu","Role","models","mConn","connect","DB_CONNECTION","useNewUrlParser","connection","on","bind","moment","MenuSchema","Schema","type","String","required","link","parentId","Types","ObjectId","ref","position","Number","default","Boolean","transtime","Date","utc","statics","getMenuById","menuId","findOne","updateMenu","objMenu","update","$set","deleteMenu","deleteMany","getChildMenus","getChildMenusRecursively","parents","_this","getThisLevelChilds","elements","childs","child","getInnerChilds","concat","getParentMenusRecursively","getThisLevel","getMoreParents","getMenus","model","PostalCodeSchema","d_codigo","d_asenta","d_tipo_asenta","D_mnpio","d_estado","d_ciudad","d_CP","c_estado","c_oficina","c_CP","c_tipo_asenta","c_mnpio","id_asenta_cpcons","d_zona","c_cve_ciudad","regCp","RegExp","limit","RoleSchema","siteAdministration","sysAdministrator","deleteRole","roleId","setRoleMenu","Array","isArray","$addToSet","$each","multi","deleteRoleMenu","roles","$in","$pullAll","getRoleMenus","populate","exec","SuburbFileSchema","SuburbStatusSchema","SuburbSchema","save","updateOne","GetSuburb","GetSuburbByName","bcrypt","base64","UserSchema","unique","loginAttempts","temporaryDisabled","disabledSince","lastAccess","_secretKey","JWT_SECRET","_getExpDate","expTimeByMin","exptoken","add","valueOf","_getValidApis","_getValidMenus","_validateExpDate","expDate","currentTime","methods","_password","pass","decode","wait","getDisabledSince","increaseLoginAttempts","compare","start","end","diff","reset","_suburb","exp","validApis","sign","setUserRole","deleteUserRole","users","getUserRoles","getCleanResult","_loginName","_facebookId","_googleId","objUser","_token","verify","decoded","saltRounds","genSalt","salt","Router","siteAuth","postalCodes","signup","handleFiles","multer","upload","dest","get","userAdmin","any","apiRoutes","debug","http","port","normalizePort","PORT","set","server","createServer","listen","onError","onListening","val","parseInt","isNaN","syscall","code","exit","addr","address"],"mappings":"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","file":"app.server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server.js\");\n","const dotenv = require(\"dotenv\");\r\nconst express = require('express');\r\nconst logger = require('morgan');\r\nconst bodyParser = require('body-parser');\r\nconst cors = require(\"cors\");\r\n\r\ndotenv.config();\r\n\r\nconst connectDb = require(\"./models\").connectDb;\r\nvar router = require(\"./routes/router\");\r\n\r\n\r\nvar app = express();\r\n\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(bodyParser.json());\r\napp.use(express.json());\r\napp.use(cors());\r\napp.use(logger('dev'));\r\napp.use('/', router);\r\n\r\nconnectDb();\r\n\r\nmodule.exports = app;\r\n\r\n","const userType = require(\"./userType\").userTypes;\r\n\r\n/**\r\n * Get menus list\r\n */\r\nexports.menus =\r\n    [\r\n        {\r\n            name: \"Inicio\",\r\n            path: \"/\",\r\n            icon: \"icon icon-home2\",\r\n            visible: true,\r\n            validUserTypes: [userType.guard, userType.admin, userType.guest, userType.neighbor],\r\n            order: 1\r\n        },\r\n        {\r\n            name: \"Guardias\",\r\n            path: \"/admin/guardias\",\r\n            icon: \"icon icon-shield\",\r\n            visible: true,\r\n            validUserTypes: [userType.guest, userType.guard, userType.admin],\r\n            order: 2\r\n        },\r\n        {\r\n            name: \"GuardiasForm\",\r\n            icon: \"icon icon-shield\",\r\n            path: \"/admin/guardias-form\",\r\n            visible: false,\r\n            validUserTypes: [userType.guest, userType.guard, userType.admin],\r\n            order: 6\r\n        },\r\n        {\r\n            name: \"Vecinos\",\r\n            path: \"/admin/vecinos\",\r\n            icon: \"icon icon-users\",\r\n            visible: true,\r\n            validUserTypes: [userType.guard, userType.admin],\r\n            order: 3\r\n        },\r\n        {\r\n            name: \"Colonia\",\r\n            path: \"/admin/colonias\",\r\n            icon: \"icon icon-building\",\r\n            visible: true,\r\n            validUserTypes: [userType.admin, userType.guest],\r\n            order: 4\r\n        },\r\n        {\r\n            name: \"Colonia Status\",\r\n            path: \"/admin/coloniaStatus\",\r\n            icon: \"icon icon-building\",\r\n            visible: false,\r\n            validUserTypes: [userType.admin, userType.guest],\r\n            order: 4\r\n        },\r\n        {\r\n            name: \"Mi Cuenta\",\r\n            path: \"/admin/cuenta\",\r\n            icon: \"icon icon-account_circle\",\r\n            visible: true,\r\n            validUserTypes: [userType.guard, userType.admin, userType.guest, userType.neighbor],\r\n            order: 5\r\n        }\r\n    ];","exports.userTypes = {\r\n    guest: \"guest\",\r\n    admin: \"admin\",\r\n    guard: \"guard\",\r\n    neighbor: \"neighbor\"\r\n};","const userServices = require(\"../logic/userService\");\r\nconst suburbService = require(\"../logic/suburbService\");\r\n//const fetchDbx = require('isomorphic-fetch');\r\nconst fs = require(\"fs\");\r\n// const Dropbox = require(\"dropbox\").Dropbox;\r\nconst dropboxV2Api = require('dropbox-v2-api');\r\nconst sgMail = require('@sendgrid/mail');\r\n\r\nconst getFileName = (nodeFileName, originalName) => {\r\n    let idx = originalName.lastIndexOf('.');\r\n    return `${nodeFileName}.${originalName.substring(idx + 1)}`;\r\n}\r\n\r\nconst uploadFileDropbox = (file) => {\r\n    const dropbox = dropboxV2Api.authenticate({\r\n        token: process.env.DROPBOX_TOKEN\r\n    });\r\n\r\n    return new Promise((resolve, reject) => {\r\n        dropbox({\r\n            resource: 'files/upload',\r\n            parameters: {\r\n                path: `/neighby/${getFileName(file.filename, file.originalname)}`\r\n            },\r\n            readStream: fs.createReadStream(`${file.destination}/${file.filename}`)\r\n        }, (err, result, response) => {\r\n            if (!err)\r\n                resolve(result);\r\n            else\r\n                reject(err);\r\n        });\r\n    });\r\n}\r\n\r\nconst base64_encode = (file_path) => {\r\n    // read binary data\r\n    var bitmap = fs.readFileSync(file_path);\r\n    // convert binary data to base64 encoded string\r\n    return new Buffer.from(bitmap, 'base64').toString('base64');//.toString('base64');\r\n}\r\n\r\nconst getEmailAttachments = (files) => {\r\n    let attachments = [];\r\n    files.forEach(file => {\r\n        attachments.push({\r\n            filename: `${file.originalname}`,\r\n            content: base64_encode(`${file.destination}/${file.filename}`)\r\n        });\r\n    });\r\n    return attachments;\r\n};\r\n\r\nconst sendEmail = async (files, user, suburb) => {\r\n    try {\r\n        sgMail.setApiKey(process.env.SENDGRID_API_KEY);\r\n\r\n        const msg = {\r\n            to: process.env.OWNER_EMAILS.split(','),\r\n            from: 'support@neighby.com',\r\n            subject: 'Nuevo requerimiento de registro de colonia.',\r\n            text: `solicitud de registro.`,\r\n            html: `<strong>El usuario ${user} desea registrar la colonia ${suburb} y envia estos documentos para revisión.</strong>`,\r\n            attachments: getEmailAttachments(files)\r\n        };\r\n        await sgMail.send(msg);\r\n    }\r\n    catch (ex) {\r\n        throw ex;\r\n    }\r\n}\r\n\r\nconst deleteTemporaryFiles = (files) => {\r\n    files.forEach(file => {\r\n        fs.unlink(`${file.destination}/${file.filename}`, (err) => {\r\n            if (err) throw err;\r\n            console.log(`path file ${file.destination}/${file.filename} has been deleted.`);\r\n        });\r\n    });\r\n};\r\n\r\nconst processFileUpload = async (files, data) => {\r\n    try {\r\n        let { userId, name, lastName, cellphone, email, postalCode, section, suburbName, recaptchaToken } = data;\r\n        let validCaptcha = await userServices.validateRecaptcha(recaptchaToken);\r\n        let proms = [];\r\n        files.forEach(file => {\r\n            proms.push(uploadFileDropbox(file));\r\n        });\r\n        let uploadedFiles = await Promise.all(proms);\r\n\r\n        await sendEmail(files, `${name} ${lastName}`, suburbName)\r\n\r\n        let updateUser = await userServices.updateUser({ _id: userId, name, lastName, cellphone, email, active: true });\r\n\r\n        let saveSuburb = await suburbService.saveSuburb({\r\n            name: suburbName,\r\n            location: section,\r\n            postalCode: postalCode,\r\n            active: true,\r\n            userAdmins: [userId],\r\n            status: [{\r\n                status: 'activacionPendiente',\r\n                description: 'Tu solicitud para registrar la colonia ha sido enviada, por favor espera de 2 a 3 dias habiles o contactanos por medio de nuestras redes sociales para mayor informacion.'\r\n            }],\r\n            files: files.map(fil=>({\r\n                fileName: fil.filename,\r\n                originalName: fil.originalname,\r\n                actionType: \"solicitudRegistro\",\r\n                mimetype: fil.mimetype\r\n            }))\r\n        })\r\n        deleteTemporaryFiles(files);\r\n        return saveSuburb;\r\n    }\r\n    catch (ex) {\r\n        throw ex;\r\n    }\r\n};\r\n\r\n\r\nexports.uploadFile = async (req, res, next) => {\r\n    try {\r\n        let { userId, name, lastName, cellphone, email, postalCode, section, suburbName, recaptchaToken } = req.body;\r\n        let processFiles = await processFileUpload(req.files, {\r\n            userId,\r\n            name,\r\n            lastName,\r\n            cellphone,\r\n            email,\r\n            postalCode,\r\n            section,\r\n            suburbName,\r\n            recaptchaToken\r\n        });\r\n        res.status(202).json({ message: 'ok' });\r\n    } catch (ex) {\r\n        res.status(400).json({ message: ex.message || 'No se pudo completar el registro.' });\r\n    }\r\n}","const menuService = require(\"../logic/menuService\");\r\n\r\n\r\n\r\n/**\r\n * [GET] method to get the menus by user types\r\n */\r\nexports.getMenusByUser = async (req, res, next) => {\r\n    let token = req.headers[\"authorization\"];\r\n    try {\r\n        const result = await menuService.getMenusByUser(token);\r\n        res.status('200').json(result);\r\n    } catch (err) {\r\n        res.status('401').json(err);\r\n    }\r\n}","const postalCodeService = require(\"../logic/postalCodeService\");\r\n\r\nexports.getPostalCodeInfo = async (req, res, next) => {\r\n    try {\r\n        let result = await postalCodeService.getCPInfo(req.query.postalCode);\r\n        res.status(200).json(result);\r\n    }\r\n    catch (err) {\r\n        res.status(400).json(err);\r\n    }\r\n}","const user = require(\"./userAdmin\");\r\n\r\nexports.signUp = (req, res, next) => {\r\n    if (req.body.token === undefined || req.body.token === '' || req.body.token === null) {\r\n        res.send({ success: false, message: 'Por favor intenta de nuevo (codigo recaptcha no encontrado).' });\r\n        return;\r\n    }\r\n    let { email, name, lastName, cellphone, facebookId, googleId, password, token } = req.body;\r\n    if (facebookId) {\r\n        req.body ={ email, name, lastName, loginName: facebookId, cellphone, facebookId, googleId, password, token };\r\n        user.saveFacebookUser(req, res, next);\r\n    }\r\n    else if (googleId) {        \r\n        req.body ={ email, name, lastName, loginName: googleId, cellphone, facebookId, googleId, password, token };\r\n        user.saveGoogleUser(req, res, next);\r\n    }\r\n    else {        \r\n        req.body ={ email, name, lastName, loginName: email, cellphone, facebookId, googleId, password, token };\r\n        user.saveEmailUser(req, res, next);\r\n    }\r\n    //mandar llamar registro aqui\r\n    // if (googleId || facebookId)\r\n    //     axios({\r\n    //         method: 'post',\r\n    //         url: googleId ? `${process.env.ADMIN_API_HOST}/api/saveGoogleUser` : `${process.env.ADMIN_API_HOST}/api/saveFacebookUser`,\r\n    //         data: {\r\n    //             name,\r\n    //             lastName,\r\n    //             loginName: googleId ? googleId : facebookId,\r\n    //             email,\r\n    //             cellphone,\r\n    //             googleId,\r\n    //             facebookId,\r\n    //             token\r\n    //         }\r\n    //     }).then(resS => {\r\n    //         res.send({ success: true, message: resS.data.message || \"Ok\" });\r\n    //     })\r\n    //         .catch(err => {\r\n    //             let errMsg = err && err.response && err.response.data && err.response.data.message ? err.response.data.message : err.message || \"No se pudo guardar el usuario.\";\r\n    //             res.send({ success: false, message: errMsg });\r\n    //         });\r\n    // else {\r\n    //     axios({\r\n    //         method: 'post',\r\n    //         url: `${process.env.ADMIN_API_HOST}/api/saveEmailUser`,\r\n    //         data: {\r\n    //             name,\r\n    //             lastName,\r\n    //             loginName: email,\r\n    //             email,\r\n    //             cellphone,\r\n    //             password,\r\n    //             token\r\n    //         }\r\n    //     }).then(resS => {\r\n    //         res.send({ success: true, message: resS.data.message || \"Ok\" });\r\n    //     })\r\n    //         .catch(err => {\r\n    //             let errMsg = err && err.response && err.response.data && err.response.data.message ? err.response.data.message : err.message || \"No se pudo guardar el usuario.\";\r\n    //             res.send({ success: false, message: errMsg });\r\n    //         });\r\n    // }\r\n}","const User = require(\"../models/user\");\r\nconst viewPermissions = require(\"../logic/viewPermissions\");\r\n\r\n\r\nconst validateUser = (userLogin, password) => {\r\n    return new Promise((resolve, reject) => {\r\n        User.getLogin(userLogin).then((login, err) => {\r\n            if (login) {\r\n                let validPass = login.validatePassword(password);\r\n                validPass.then(result => {\r\n                    //generate jwt token\r\n                    let token = login.generateUserToken();\r\n                    resolve({ success: true, message: token });\r\n                }, err => {\r\n                    reject({ success: false, message: err.message || 'La contraseña no es valida.' });\r\n                });\r\n            }\r\n            else reject({ succes: false, message: 'El usuario no existe.' });\r\n        });\r\n    });\r\n}\r\n\r\nexports.checkAuth = (req, res, next) => {\r\n    //over here check the db to know if the auth is valid\r\n    let user = req.body.user;\r\n    let password = req.body.password;\r\n    validateUser(user, password).then(result => {\r\n        if (result.success) {\r\n            // var session = req.session;\r\n            // session.token = result.message;\r\n            // session.user = user;\r\n            res.status('200').json(result);\r\n        }\r\n        else\r\n            res.status('401').json({ success: false, message: 'Unauthorized' });\r\n    }, err => {\r\n        res.status('401').json({ success: false, message: err.message || 'Unauthorized' });\r\n    });\r\n}\r\n\r\nexports.getTokenByFacebookId = (req, res) => {\r\n    let facebookId = req.query['id'];\r\n    User.getUserByFacebookId(facebookId).then(usr => {\r\n        if (usr) {\r\n            let token = usr.generateUserToken();\r\n            res.status('200').json({ token });\r\n        }\r\n        else {\r\n            res.status('404').json({ token: null });\r\n        }\r\n    })\r\n}\r\n\r\nexports.getTokenByGoogleId = (req, res) => {\r\n    let googleId = req.query['id'];\r\n    User.getUserByGoogleId(googleId).then(usr => {\r\n        if (usr) {\r\n            let token = usr.generateUserToken();\r\n            res.status('200').json({ token });\r\n        }\r\n        else {\r\n            res.status('404').json({ token: null });\r\n        }\r\n    });\r\n}\r\n\r\nexports.isValidToken = (req, res, next) => {\r\n    let token = req.headers[\"authorization\"];\r\n    return new Promise((resolve, reject) => {\r\n        User.isValidToken(token).then((isValid) => {\r\n            if (isValid)\r\n                res.status('200').json({ valid: true, message: \"the token is valid\" })\r\n            else\r\n                res.status('401')({\r\n                    valid: false,\r\n                    message: \"the token is not valid\"\r\n                });\r\n\r\n        }, err => res.status('500')(err));\r\n    });\r\n\r\n}\r\n\r\nexports.validateTokenPath = (req, res, next) => {\r\n    let { token, user, path } = req.body;\r\n    //over here add logic to check if a path is valid for the given context (user-> userType and jwt token)\r\n    viewPermissions.permissionValid(path, token, user).then(result => {\r\n        res.status('200').json({ valid: true, message: \"ok :)\" });\r\n    }, err => {\r\n        res.status('401').json(err);\r\n    });\r\n}\r\n\r\nexports.logOff = (req, res, next) => {\r\n    if (req.session)\r\n        req.session.destroy(err => {\r\n            if (err)\r\n                res.status('500').json({ success: false, message: err.message || 'An unknow error occurs while trying to log off.' })\r\n            res.status('200').json({ success: true, message: 'session destroyed.' });\r\n        })\r\n}\r\n","const suburbService = require(\"../logic/suburbService\");\r\n\r\nexports.getSuburbByAdminId = (req, res, next) => {\r\n    let userId = req.query.id;\r\n    suburbService.getSuburbByAdminUser(userId).then(result => {\r\n        res.status('200').json(result);\r\n    }, err => {\r\n        res.status(400).json({ success: false, message: err.message || \"No se pudo obtener la informacion de la colonia.\" });\r\n    });\r\n}","const userService = require(\"../logic/userService\");\r\nconst userTypes = require(\"../constants/userType\").userTypes;\r\n\r\nexports.saveGoogleUser = (req, res, next) => {\r\n    //get user data here\r\n    let { name, lastName, loginName, email, password, cellphone, facebookId, googleId, token } = req.body;\r\n    //validate the captcha here\r\n    userService.validateRecaptcha(token).then(resV => {\r\n        //save the user here\r\n        userService.saveUser({ name, lastName, loginName, email, password, cellphone, facebookId, googleId, userConfirmed: true }).then(resSave => {\r\n            res.status('200').json({ success: true, message: res.message || \"Has sido registrado correctamente.\" })\r\n        }, err => {\r\n            res.status('400').json({ success: false, message: err.message || 'Bad request.' });\r\n\r\n        });\r\n    }, err => {\r\n        res.status('400').json({ success: false, message: err.message || 'Bad request.' });\r\n    });\r\n}\r\n\r\nexports.saveFacebookUser = (req, res, next) => {\r\n    let { name, lastName, loginName, email, password, cellphone, facebookId, googleId, token } = req.body;\r\n    //validate the captcha here\r\n    userService.validateRecaptcha(token).then(resV => {\r\n        //save the user here\r\n        userService.saveUser({ name, lastName, loginName, email, password, cellphone, facebookId, googleId, userConfirmed: true }).then(resSave => {\r\n            res.status('200').json({ success: true, message: res.message || \"Has sido registrado correctamente.\" })\r\n        }, err => {\r\n            res.status('400').json({ success: false, message: err.message || 'Bad request.' });\r\n        });\r\n    }, err => {\r\n        res.status('400').json({ success: false, message: err.message || 'Bad request.' });\r\n    });\r\n}\r\n\r\nexports.saveEmailUser = (req, res, next) => {\r\n    let { name, lastName, loginName, email, password, cellphone, facebookId, googleId, token } = req.body;\r\n    //validate the captcha here\r\n    userService.validateRecaptcha(token).then(resV => {\r\n        //if the user is registered through email credentials the user needs to be confirmed through an email\r\n        userService.saveUserWithPassword({ name, lastName, loginName, email, password: password, cellphone, facebookId, googleId, userConfirmed: false })\r\n            .then(resSave => {\r\n                res.status('200').json({ success: true, message: res.message || \"Has sido registrado correctamente.\" })\r\n            }, err => {\r\n                res.status('400').json({ success: false, message: err.message || 'Bad request.' });\r\n            });\r\n    }, err => {\r\n        res.status('400').json({ success: false, message: err.message || 'Bad request.' });\r\n    });\r\n};\r\n\r\nexports.createUserByType = async (req, res, next) => {\r\n    try {\r\n        const { name, lastName, loginName, email, cellphone } = req.body;\r\n        const userType = userTypes[req.params.userType];\r\n        if (!userType) {\r\n            res.status('400').json({ success: false, message: 'Bad request.' });\r\n            return;\r\n        }\r\n        const result = await userService.saveUser({ name, lastName, loginName, email, cellphone, userConfirmed: false, userType });\r\n        res.status('200').json({ success: true, message: result.message || \"Has sido registrado correctamente.\" });\r\n    } catch (err) {\r\n        res.status('400').json({ success: false, message: err.message || 'Bad request.' });\r\n    }\r\n};\r\n\r\nexports.getUserByType = async (req, res, next) => {\r\n    try {\r\n        const userType = userTypes[req.params.userType];\r\n        if (!userType) {\r\n            res.status('400').json({ success: false, message: 'Bad request.' });\r\n            return;\r\n        }\r\n        const result = await userService.getUserByType(userType);\r\n        res.status('200').json({ success: true, data: result });\r\n    } catch (err) {\r\n        res.status('400').json({ success: false, message: err.message || 'Bad request.' });\r\n    }\r\n};\r\n\r\nexports.getUserInfo = async (req, res, next) => {\r\n    try {\r\n        userService.getUserByToken(req.query.token).then(result => {\r\n            res.status('200').json(result);\r\n        }, err => {\r\n            res.status('400').json({ success: false, message: err.message || 'Bad request.' });\r\n        });\r\n    }\r\n    catch (err) {\r\n        res.status('400').json({ success: false, message: err.message || 'Bad request.' });\r\n    }\r\n}","const User = require(\"../models/user\");\r\n//const connectDb = require(\"../models/index\").connectDb;\r\n\r\nconst openApi = [\r\n    \"/api/checkAuth\",\r\n    \"/api/auth/fbtoken\",\r\n    \"/api/auth/googletoken\",\r\n    \"/api/saveGoogleUser\",\r\n    \"/api/saveFacebookUser\",\r\n    \"/api/saveEmailUser\",\r\n    \"/api/signUp\",\r\n    \"/api/validateTokenPath\",\r\n    \"/api/cp/getCPInfo\",\r\n    \"/api/file/upload\"\r\n];\r\n\r\nmodule.exports = class Auth {\r\n    validateToken(token) {\r\n        let user = User;\r\n\r\n        let def = user.isValidToken(token);\r\n        return new Promise((resolve, reject) => {\r\n            def.then(function (isValid) {\r\n                if (isValid)\r\n                    resolve({ valid: true, message: \"the token is valid\" })\r\n                else\r\n                    resolve({\r\n                        valid: false,\r\n                        message: \"the token is not valid\"\r\n                    });\r\n\r\n            });\r\n        }, err => reject({ valid: false, message: \"The token cannot be checked.\" }));\r\n    }\r\n\r\n    isOpenApi(apiPath) {\r\n        return openApi.indexOf(apiPath) !== -1 ? true : false;\r\n    }\r\n\r\n    validateApiRequest(apiPath, token) {\r\n        if (this.isOpenApi(apiPath)) return new Promise(resolve => resolve({ valid: true, message: \"the api is open.\" }));\r\n        else\r\n            return this.validateToken(token);\r\n    }\r\n}","const User = require(\"../models/user\");\r\nconst menus = require(\"../constants/menusConfig\").menus;\r\n\r\n/**\r\n * Get menus by logged user\r\n */\r\nexports.getMenusByUser = async (userToken) => {\r\n  return new Promise((resolve, reject) => {\r\n    let getPayload = User.getTokenPayload(userToken);\r\n    getPayload.then(payload => {\r\n      const { userType, loginName } = payload;\r\n\r\n      let userMenus = menus.filter(menu => {\r\n        let types = menu.validUserTypes.filter(g => g.toLowerCase() === userType.toLowerCase());\r\n        return types.length > 0;\r\n      }).map(item => ({ name: item.name, path: item.path, visible: item.visible, icon: item.icon, order: item.order }));\r\n\r\n\r\n      resolve(userMenus);\r\n    }, errP => {\r\n      reject({ valid: false, message: 'The token is not allowed' });\r\n    });\r\n  });\r\n};","const PostalCode = require(\"../models/postalCode\");\r\n\r\n\r\nexports.getCPInfo = async (postalCode) => {\r\n    return new Promise((resolve, reject) => {\r\n        if (postalCode.length > 2) {\r\n            getInfo = PostalCode.getCPInfo(postalCode);\r\n            getInfo.then(cp => {\r\n                resolve(cp);\r\n            }, err => {\r\n                reject({ valid: false, message: 'No se pudo obtener la informaion del codigo postal.' });\r\n            });\r\n        }\r\n        else {\r\n            reject({ valid: false, message: 'La longitud del codigo postal no es valida.' });\r\n        }\r\n    });\r\n}","const Suburb = require(\"../models/suburb\");\r\n\r\nconst saveSuburb = (suburbObj) => {\r\n    return new Promise((resolve, reject) => {\r\n        Suburb.SaveSuburb(suburbObj).then((sub, err) => {\r\n            if (!err)\r\n                resolve({ success: true, message: \"La colonia fue guardada correctamente.\" });\r\n            else\r\n                reject({ success: false, message: err.message || \"Ocurrio un error al intentar guardar la colonia.\" });\r\n        });\r\n    });\r\n};\r\n\r\nconst suburbAddStatus = (id, status) => {\r\n    return new Promise((resolve, reject) => {\r\n        Suburb.UpdateStatus(id, status).then((sub, err) => {\r\n            if (!err)\r\n                resolve({ success: true, message: \"El status de la colonia fue actualizado correctamente.\" });\r\n            else\r\n                reject({ success: false, message: err.message || \"Ocurrio un error al intentar actualizar el estatus de la colonia.\" });\r\n        })\r\n    });\r\n};\r\n\r\nconst suburbAddStatusByName = (name, postalCode, status) => {\r\n    return new Promise((resolve, reject) => {\r\n        Suburb.UpdateStatusByName(name, postalCode, status).then((sub, err) => {\r\n            if (!err)\r\n                resolve({ success: true, message: \"El status de la colonia fue actualizado correctamente.\" });\r\n            else\r\n                reject({ success: false, message: err.message || \"Ocurrio un error al intentar actualizar el estatus de la colonia.\" });\r\n        })\r\n    });\r\n}\r\n\r\nconst getSuburbByAdminUser = (userId) => {\r\n    return new Promise((resolve, reject) => {\r\n        Suburb.GetSuburbByUserId(userId).then((sub, err) => {\r\n            if (!err)\r\n                resolve(sub);\r\n            else\r\n                reject({ success: false, message: err.message || \"Ocurrio un error al intentar obtener la colonia por usuario administrador.\" });\r\n        });\r\n    });\r\n}\r\n\r\nmodule.exports = {\r\n    saveSuburb,\r\n    suburbAddStatus,\r\n    suburbAddStatusByName,\r\n    getSuburbByAdminUser\r\n}","const User = require(\"../models/user\");\r\nconst request = require(\"request\");\r\n\r\nconst saveUser = (userObj) => {\r\n    return new Promise((resolve, reject) => {\r\n        User.getLogin(userObj.loginName).then((login) => {\r\n            if (login) {\r\n                reject({ success: false, message: \"El usuario existe actualmente en la base de datos.\" });\r\n            }\r\n            else {\r\n                //create the user\r\n                User.saveUser(userObj).then((usr, err) => {\r\n                    //check if there is an error\r\n                    if (!err)\r\n                        resolve({ success: true, message: \"Has sido registrado correctamente.\" });\r\n                    else\r\n                        reject({ success: false, message: err.message || \"No se pudo registrar el usuario.\" });\r\n                }, err => {\r\n                    reject({ success: false, message: err.message })\r\n                });\r\n            }\r\n        }, err => {\r\n            reject({ success: false, message: err.message || \"Ocurrio un error al tratar de guardar el usuario.\" })\r\n        });\r\n    });\r\n};\r\n\r\n\r\nconst updateUser = async (userObj) => {\r\n    return new Promise((resolve, reject) => {\r\n        User.updateUser(userObj).then((usr, err) => {\r\n            if (!err)\r\n                resolve({ success: true, message: \"Ha sido actualizado correctamente.\" });\r\n            else\r\n                reject({ success: false, message: err.message || \"No se pudo actualizar el usuario.\" })\r\n        }, err => {\r\n            reject({ success: false, message: err.message })\r\n        });\r\n    });\r\n};\r\n\r\nconst validateRecaptcha = async (token) => {\r\n    const secretKey = process.env.RECAPTCHA_SECRET;\r\n    const verificationURL = `https://www.google.com/recaptcha/api/siteverify?secret=${secretKey}&response=${token}`;\r\n\r\n    return new Promise((resolve, reject) => {\r\n        request.post(verificationURL,\r\n            (error, resG, body) => {\r\n                if (error)\r\n                    reject({ success: false, message: 'Por favor intenta de nuevo (no es posible validar recaptcha).' });\r\n                let status = JSON.parse(body);\r\n                if (!status.success)\r\n                    reject({ success: false, message: 'Por favor intenta de nuevo.' });\r\n                else if (status.score <= 0.5)\r\n                    reject({ success: false, message: 'Por favor intenta de nuevo (score demasiado bajo).' });\r\n                else\r\n                    resolve({ success: true, message: 'recaptcha valido.' });\r\n            }\r\n        );\r\n    });\r\n};\r\n\r\nconst saveUserWithPassword = async (userObj) => {\r\n    const { password } = userObj;\r\n    return new Promise((resolve, reject) => {\r\n        User.encryptPassword(password).then(resEncrypt => {\r\n            let encryptedPassword = resEncrypt.hash;\r\n            userObj.password = encryptedPassword;\r\n            saveUser(userObj).then(result => {\r\n                resolve(result);\r\n            }, err => {\r\n                reject(err);\r\n            });\r\n        }, err => {\r\n            reject({ success: false, message: err.message || 'Bad request.' });\r\n        });\r\n    });\r\n};\r\n\r\nconst getUserByType = async (userType) => {\r\n    try {\r\n        return await User.find({\r\n            \"userType\": userType\r\n        });\r\n    } catch (ex) {\r\n        return ex;\r\n    }\r\n};\r\n\r\nconst getUserByToken = async (token) => {\r\n    try {\r\n        let payload = await User.getTokenPayload(token);\r\n        return await User.findById(payload.userId);\r\n    }\r\n    catch (ex) {\r\n        return ex;\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    saveUser,\r\n    validateRecaptcha,\r\n    saveUserWithPassword,\r\n    getUserByType,\r\n    getUserByToken,\r\n    updateUser\r\n};\r\n","const User = require(\"../models/user\");\r\nconst permissions = require(\"../constants/menusConfig\").menus;\r\n\r\n\r\n\r\nconst validateWithPayload = (path, payload) => {\r\n    let valid =  { valid: false, message: 'la pantalla no es valida para tu usuario.' };\r\n    if(!payload || !payload.userType)\r\n        return valid;\r\n\r\n    const { userType } = payload;\r\n    let validPath = permissions.filter(p => {\r\n        let types = p.validUserTypes.filter(g => g.toLowerCase() === userType.toLowerCase());\r\n        return types.length > 0 && p.path.toLowerCase() === path.toLocaleLowerCase();\r\n\r\n    });\r\n\r\n    if (validPath.length > 0)\r\n        valid = { valid: true, message: 'ok' };\r\n    return valid;\r\n};\r\n\r\n\r\nexports.permissionValid = (path, jwt) => {\r\n    return new Promise((resolve, reject) => {\r\n        let user = User;\r\n        let isValid = user.isValidToken(jwt);\r\n        isValid.then(res => {\r\n            let getPayload = user.getTokenPayload(jwt);\r\n            getPayload.then(payload => {\r\n                let valid = validateWithPayload(path, payload);\r\n                if (valid.valid)\r\n                    resolve(valid);\r\n                else\r\n                    reject(valid);\r\n            }, errP => {\r\n                reject({ valid: false, message: 'los datos de la sesión no son validos.' });\r\n            });\r\n        }, err => {\r\n            reject({ valid: false, message: 'el token de la sesión no es valido.' });\r\n        });\r\n    });\r\n}","const Auth = require(\"../logic/auth\");\r\n\r\nconst validApiRequest = (apiPath, token) => {\r\n    return new Promise((resolve, reject) => {\r\n        let auth = new Auth();\r\n        auth.validateApiRequest(apiPath, token).then(res => {\r\n            resolve(res);\r\n        }, err => reject({ valid: false, message: `Error: ${JSON.stringify(err)}` }));\r\n    });\r\n}\r\n\r\n\r\nexports.checkApiAuth = (req, res, next) => {\r\n    console.log(`validando si el request esta autenticado...`);\r\n    //check request headers over here to know if the request is authenticated\r\n    let apiPath = req.baseUrl, token = req.headers[\"authorization\"];\r\n\r\n    validApiRequest(apiPath, token).then(result => {\r\n        if (result.valid)\r\n            next();\r\n        else\r\n            res.status('401').json({ success: false, error: 'Unauthorized request.' });\r\n    }, err => res.status('500').json({ success: false, error: 'An error occurs while validating the request.' }));\r\n}","const mongoose = require(\"mongoose\");\r\nconst Menu = require(\"./menu\");\r\nconst Role = require(\"./role\");\r\nconst User = require(\"./user\");\r\nconst PostalCode = require(\"./postalCode\");\r\n\r\n\r\nconst models = { Menu, Role, User, PostalCode };\r\n\r\nconst connectDb = () => {\r\n    //setup the mongo connection\r\n    let mConn = mongoose.connect(process.env.DB_CONNECTION, {\r\n        useNewUrlParser: true\r\n    });\r\n\r\n    mongoose.connection.on(\"error\", console.error.bind(console, \"Mongo db connection error: \"));\r\n    return mConn;\r\n};\r\n\r\n\r\nmodule.exports = { connectDb, models };","const moment = require('moment');\r\nconst mongoose = require('mongoose');\r\n//const Base = require('./baseModel');\r\n\r\nconst MenuSchema = new mongoose.Schema({\r\n    name: {\r\n        type: String,\r\n        required: 'Enter the menu name'\r\n    },\r\n    link: {\r\n        type: String,\r\n        required: 'Enter the menu link'\r\n    },\r\n    parentId: {\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'Menu'\r\n    },\r\n    position: {\r\n        type: Number,\r\n        default: 1\r\n    },\r\n    icon: {\r\n        type: String\r\n    },\r\n    visible: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    active: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    type: {\r\n        type: String\r\n    },\r\n    transtime: {\r\n        type: Date,\r\n        default: moment.utc()\r\n    }\r\n});\r\n\r\n\r\nMenuSchema.statics = {\r\n    getMenuById: function (menuId) { //, projectId){\r\n        return this.findOne({\r\n            _id: menuId //, \r\n            //project: projectId\r\n        });\r\n    },\r\n    updateMenu: function (objMenu) {\r\n        return this.update({\r\n            _id: objMenu._id\r\n        }, {\r\n                $set: {\r\n                    'name': objMenu.name,\r\n                    'link': objMenu.link,\r\n                    'parentId': objMenu.parentId,\r\n                    'position': objMenu.position,\r\n                    'icon': objMenu.position,\r\n                    'visible': objMenu.visible,\r\n                    'active': objMenu.active,\r\n                    'type': objMenu.active,\r\n                    'transtime': moment.utc()\r\n                }\r\n            });\r\n    },\r\n    deleteMenu: function (menuId) {\r\n        return this.deleteMany({\r\n            _id: menuId\r\n        });\r\n    },\r\n    getChildMenus: function (menuId) {\r\n        return this.find({\r\n            parentId: menuId\r\n        });\r\n    },\r\n    getChildMenusRecursively: function (parents) {\r\n        let _this = this;\r\n        let getThisLevelChilds = this.getChildMenus(parents);\r\n        let elements = [];\r\n        return new Promise((resolve, reject) => {\r\n            getThisLevelChilds.then((childs) => {\r\n                if (childs.length > 0) {\r\n                    elements = JSON.parse(JSON.stringify(childs)).map((child) => {\r\n                        return child._id;\r\n                    });\r\n                    let getInnerChilds = _this.getChildMenusRecursively(elements);\r\n                    getInnerChilds.then((result) => {\r\n                        resolve(elements.concat(result));\r\n                    });\r\n                } else\r\n                    resolve(elements);\r\n            }, (err) => {\r\n                reject(err);\r\n            })\r\n        });\r\n    },\r\n    getParentMenusRecursively: function (menuId) {\r\n        let _this = this;\r\n        let getThisLevel = this.getMenuById(menuId);\r\n        let elements = [];\r\n        return new Promise((resolve, reject) => {\r\n            getThisLevel.then((menu) => {\r\n                menu = JSON.parse(JSON.stringify(menu))\r\n                if (menu && menu.parentId) {\r\n                    elements.push(menu.parentId);\r\n                    let getMoreParents = _this.getParentMenusRecursively(menu.parentId);\r\n                    getMoreParents.then((result) =>\r\n                        resolve(elements.concat(result)));\r\n                } else\r\n                    resolve(elements);\r\n            }, err => reject(err));\r\n        });\r\n    },\r\n    getMenus: function (menus) {\r\n        return this.find({ _id: menus });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst Menu = mongoose.model(\"Menu\", MenuSchema);\r\n\r\nmodule.exports = Menu;","const mongoose = require('mongoose');\r\n\r\nconst PostalCodeSchema = new mongoose.Schema({\r\n    d_codigo: {\r\n        type: String\r\n    },\r\n    d_asenta: {\r\n        type: String\r\n    },\r\n    d_tipo_asenta: {\r\n        type: String\r\n    },\r\n    D_mnpio: {\r\n        type: String\r\n    },\r\n    d_estado: {\r\n        type: String\r\n    },\r\n    d_ciudad: {\r\n        type: String\r\n    },\r\n    d_CP: {\r\n        type: String\r\n    },\r\n    c_estado: {\r\n        type: String\r\n    },\r\n    c_oficina: {\r\n        type: String\r\n    },\r\n    c_CP: {\r\n        type: String\r\n    },\r\n    c_tipo_asenta: {\r\n        type: String\r\n    },\r\n    c_mnpio: {\r\n        type: String\r\n    },\r\n    id_asenta_cpcons: {\r\n        type: String\r\n    },\r\n    d_zona: {\r\n        type: String\r\n    },\r\n    c_cve_ciudad: {\r\n        type: String\r\n    }\r\n});\r\n\r\nPostalCodeSchema.statics = {\r\n    getCPInfo: function (cp) {\r\n        let regCp = new RegExp(cp)\r\n        return this.find({ d_codigo: regCp }).limit(100);\r\n    }\r\n};\r\n\r\nconst PostalCode = mongoose.model(\"PostalCode\", PostalCodeSchema);\r\n\r\nmodule.exports = PostalCode;","const moment = require('moment');\r\nconst mongoose = require(\"mongoose\");\r\n\r\nconst RoleSchema = new mongoose.Schema({\r\n    name: {\r\n        type: String,\r\n        required: 'Enter the name of the role'\r\n    },\r\n    description: {\r\n        type: String,\r\n        required: 'Enter the description of the role'\r\n    },\r\n    siteAdministration: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    sysAdministrator: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    active: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    menus: [{\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'Menu'\r\n    }],\r\n    transtime: {\r\n        type: Date,\r\n        default: moment.utc()\r\n    }\r\n});\r\n\r\nRoleSchema.statics = {\r\n    deleteRole: function (roleId) {\r\n        return this.deleteMany({\r\n            _id: roleId\r\n        });\r\n    },\r\n    setRoleMenu: function (roleId, menus) {\r\n        if (!Array.isArray(menus)) menus = [menus];\r\n        return this.update({\r\n            _id: roleId\r\n        }, {\r\n                $addToSet: {\r\n                    menus: {\r\n                        $each: menus\r\n                    }\r\n                }\r\n            }, {\r\n                multi: true\r\n            });\r\n    },\r\n    deleteRoleMenu: function (roles, menus) {\r\n        if (!Array.isArray(menus)) menus = [menus];\r\n        if (!Array.isArray(roles)) roles = [roles];\r\n\r\n        return this.update({\r\n            _id: {\r\n                $in: roles\r\n            }\r\n        }, {\r\n                $pullAll: {\r\n                    menus: menus\r\n                }\r\n            }, {\r\n                multi: true\r\n            });\r\n    },\r\n    getRoleMenus: function (roleId) {\r\n        return new Promise((resolve, reject) => {\r\n            this.find({\r\n                _id: roleId\r\n            }).populate('menus').exec((err, result) => {\r\n                if (err) reject(err);\r\n                resolve(result);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nconst Role = mongoose.model(\"Role\", RoleSchema);\r\n\r\nmodule.exports = Role;","const mongoose = require(\"mongoose\");\r\nconst moment = require(\"moment\");\r\n\r\nconst SuburbFileSchema = new mongoose.Schema({\r\n    fileName: {\r\n        type: String\r\n    },\r\n    originalName: {\r\n        type: String\r\n    },\r\n    actionType: {\r\n        type: String\r\n    },\r\n    mimetype: {\r\n        type: String\r\n    },\r\n    transtime: {\r\n        type: Date,\r\n        default: moment.utc()\r\n    }\r\n});\r\n\r\nmodule.exports = SuburbFileSchema;","const mongoose = require(\"mongoose\");\r\nconst moment = require('moment');\r\n\r\nconst SuburbStatusSchema = new mongoose.Schema({\r\n    status: {\r\n        type: String\r\n    },\r\n    description: {\r\n        type: String\r\n    },\r\n    transtime: {\r\n        type: Date,\r\n        default: moment.utc()\r\n    }\r\n});\r\n\r\n//const SuburbStatus = mongoose.model(\"SuburbStatus\", SuburbStatusSchema);\r\n\r\nmodule.exports = SuburbStatusSchema;","const mongoose = require(\"mongoose\");\r\nconst moment = require('moment');\r\nconst SuburbStatusSchema = require('./schemas/suburbStatusSchema');\r\nconst SuburbFileSchema = require('./schemas/suburbFileSchema');\r\n\r\nconst SuburbSchema = new mongoose.Schema({\r\n    name: {\r\n        type: String\r\n    },\r\n    location: {\r\n        type: String\r\n    },\r\n    postalCode: {\r\n        type: Number\r\n    },\r\n    active: {\r\n        type: Boolean\r\n    },\r\n    transtime: {\r\n        type: Date,\r\n        default: moment.utc()\r\n    },\r\n    userAdmins: [{\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'User'\r\n    }],\r\n    /*\r\n        estatus validos:\r\n        activacionPendiente,\r\n        activacionRechazada\r\n        activadoBasico,\r\n        activadoPlus\r\n    */\r\n    status: [SuburbStatusSchema],\r\n    files: [SuburbFileSchema]\r\n});\r\n\r\nSuburbSchema.statics = {\r\n    SaveSuburb: function (suburbObj) {\r\n        let suburb = new this(suburbObj);\r\n        return suburb.save();\r\n    },\r\n    UpdateStatus: function (id, status) {\r\n        if (!Array.isArray(status)) status = [status];\r\n        return this.updateOne({ _id: id }, {\r\n            $addToSet: {\r\n                status: {\r\n                    $each: status\r\n                }\r\n            }\r\n        }, {\r\n            multi: true\r\n        })\r\n    },\r\n    UpdateStatusByName: function (name, postalCode) {\r\n        if (!Array.isArray(status)) status = [status];\r\n        return this.updateOne({ name: name, postalCode: postalCode }, {\r\n            $addToSet: {\r\n                status: {\r\n                    $each: status\r\n                }\r\n            }\r\n        }, {\r\n            multi: true\r\n        })\r\n    },\r\n    GetSuburb: function (id) {\r\n        return new Promise((resolve, reject) => {\r\n            this.findOne({\r\n                _id: id\r\n            }).exec((err, result) => {\r\n                if (err) reject(err);\r\n                resolve(result);\r\n            })\r\n        })\r\n    },\r\n    GetSuburbByName: function (postalCode, name) {\r\n        return new Promise((resolve, reject) => {\r\n            this.findOne({\r\n                postalCode: postalCode, name: name\r\n            }).exec((err, result) => {\r\n                if (err) reject(err);\r\n                resolve(result);\r\n            })\r\n        })\r\n    },\r\n    GetSuburbByUserId: function (userId) {\r\n        return new Promise((resolve, reject) => {\r\n            this.findOne({ userAdmins: mongoose.Types.ObjectId(userId) }).exec((err, result) => {\r\n                if (err) reject(err);\r\n                resolve(result);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nconst Suburb = mongoose.model(\"Suburb\", SuburbSchema);\r\n\r\nmodule.exports = Suburb;","const moment = require('moment');\r\nconst bcrypt = require(\"bcryptjs\");\r\nconst jwt = require('jsonwebtoken');\r\nconst mongoose = require(\"mongoose\");\r\nconst base64 = require(\"base-64\");\r\n\r\nconst UserSchema = new mongoose.Schema({\r\n    name: {\r\n        type: String,\r\n        required: 'Ingresa el nombre'\r\n    },\r\n    lastName: {\r\n        type: String\r\n    },\r\n    password: {\r\n        type: String\r\n    },\r\n    loginName: {\r\n        type: String,\r\n        unique: true\r\n    },\r\n    email: {\r\n        type: String\r\n    },\r\n    cellphone: {\r\n        type: String\r\n    },\r\n    suburb: {\r\n        type: String\r\n    },\r\n    loginAttempts: {\r\n        type: Number,\r\n        default: 0\r\n    },\r\n    temporaryDisabled: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    disabledSince: {\r\n        type: Date\r\n    },\r\n    lastAccess: {\r\n        type: Date,\r\n        default: moment.utc()\r\n    },\r\n    /**\r\n     * valid user types:\r\n     *  guest -> a guest user\r\n     *  guard -> a guard of the suburb\r\n     *  admin -> an administrator of the suburb\r\n     *  sudo  -> an administrator of the app\r\n     */\r\n    userType: {\r\n        type: String,\r\n        default: \"guest\"\r\n    },\r\n    userConfirmed: {\r\n        type: Boolean\r\n    },\r\n    facebookId: {\r\n        type: String\r\n    },\r\n    googleId: {\r\n        type: String\r\n    },\r\n    active: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    transtime: {\r\n        type: Date,\r\n        default: moment.utc()\r\n    },\r\n    roles: [{\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'Role'\r\n    }],\r\n    suburb: {\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'Suburb'\r\n    }\r\n});\r\n\r\n/**\r\n * Private attributes\r\n */\r\nconst _secretKey = process.env.JWT_SECRET;\r\n\r\nlet _getExpDate = () => {\r\n    var expTimeByMin = process.env.exptoken != null ? process.env.exptoken : \"180\";\r\n    return moment().add(expTimeByMin, 'minutes').valueOf();\r\n};\r\n\r\nlet _getValidApis = (id) => {\r\n    //return an array with the valid apis\r\n    return [];\r\n}\r\n\r\nlet _getValidMenus = (id) => {\r\n    //return an array with the valid menus for the user\r\n    return [];\r\n}\r\n\r\n/**\r\n * Method to validate exp from the user token.\r\n * @param {*} expDate \r\n */\r\nlet _validateExpDate = function (expDate) {\r\n    let currentTime = moment().valueOf();\r\n    return (expDate > currentTime);\r\n};\r\n\r\nUserSchema.methods = {\r\n    validatePassword: function (_password) {\r\n        var _this = this;\r\n        let pass = base64.decode(_password);\r\n        return new Promise((resolve, reject) => {\r\n            if (_this.temporaryDisabled) {\r\n                let wait = 10 - this.getDisabledSince();\r\n                if (wait > 0)\r\n                    reject({ success: false, message: `El usuario esta temporalmente desabilitado, por favor espere ${wait} minutos para volver a intentar.` })\r\n                else\r\n                    this.increaseLoginAttempts(true).then(res => {\r\n                        this.validatePassword(_password).then(result => resolve(result), err => reject(err));\r\n                    });\r\n            }\r\n            else\r\n                bcrypt.compare(pass, _this.password).then(valid => {\r\n                    if (valid) {\r\n                        //reset logint attempts\r\n                        this.increaseLoginAttempts(true).then(res => {\r\n                            resolve({ success: true, message: 'La contraseña coincide.' });\r\n                        }, err => reject({ success: false, message: 'Un error occurio.' }));\r\n                    }\r\n                    else {\r\n                        //increase login attempts\r\n                        this.increaseLoginAttempts().then(res => {\r\n                            reject({ success: false, message: 'La contraseña no es valida.' })\r\n                        }, err => reject({ success: false, message: 'Un error occurio, la contraseña no es valida.' }));\r\n                    }\r\n                });\r\n        }, err => reject({ success: false, message: 'Ocurrio un error al comparar la contraseña.' }))\r\n    },\r\n    getDisabledSince: function () {\r\n        let disabledSince = this.disabledSince ? this.disabledSince : moment.utc();\r\n        let start = moment(disabledSince);\r\n        let end = moment(moment.utc());\r\n        return end.diff(start, 'minutes');\r\n    },\r\n    increaseLoginAttempts: function (reset) {\r\n        if (reset) {\r\n            this.loginAttempts = 0;\r\n            this.temporaryDisabled = false;\r\n            this.disabledSince = null;\r\n        }\r\n        else {\r\n            let loginAttempts = this.loginAttempts + 1;\r\n            this.loginAttempts = loginAttempts;\r\n            this.temporaryDisabled = loginAttempts > 10;\r\n            this.disabledSince = loginAttempts > 10 ? moment.utc() : null;\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            return this.save().then(res => {\r\n                resolve(res);\r\n            }, err => {\r\n                reject(err);\r\n            });\r\n        });\r\n    },\r\n    generateUserToken: function (_suburb) {\r\n        let payload = {\r\n            userId: this._id != undefined ? JSON.parse(JSON.stringify(this._id)) : \"\",\r\n            loginName: this.loginName,\r\n            suburb: this.suburb || _suburb,\r\n            userType: this.userType,\r\n            exp: _getExpDate(),\r\n            validApis: _getValidApis(this._id),\r\n            //validMenus: _getValidMenus(this._id) //verify if is better put this in another schema i.e. suburb\r\n        };\r\n        let token = jwt.sign(payload, _secretKey);\r\n        return token;\r\n    },\r\n    setUserRole: function (userId, roles) {\r\n        if (!Array.isArray(roles)) roles = [roles];\r\n        return this.update({\r\n            _id: userId\r\n        }, {\r\n            $addToSet: {\r\n                roles: {\r\n                    $each: roles\r\n                }\r\n            }\r\n        }, {\r\n            multi: true\r\n        });\r\n    },\r\n    deleteUserRole: function (users, roles) {\r\n        if (!Array.isArray(users)) users = [users];\r\n        if (!Array.isArray(roles)) roles = [roles];\r\n\r\n        return this.update({\r\n            _id: {\r\n                $in: users\r\n            }\r\n        }, {\r\n            $pullAll: {\r\n                roles: roles\r\n            }\r\n        }, {\r\n            multi: true\r\n        });\r\n    },\r\n    getUserRoles: function (userId) {\r\n        return new Promise((resolve, reject) => {\r\n            this.find({\r\n                _id: userId\r\n            }).populate('roles').exec((err, result) => {\r\n                if (err) reject(err);\r\n                resolve(getCleanResult(result, 'roles'));\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nUserSchema.statics = {\r\n    /**\r\n     * Method to get a user by login name\r\n     */\r\n    getLogin: function (_loginName) {\r\n        return new Promise((resolve, reject) => {\r\n            this.findOne({\r\n                loginName: _loginName\r\n            })/*.populate({\r\n                path: 'roles',\r\n                populate: {\r\n                    path: 'menus',\r\n                    model: 'Menu'\r\n                }\r\n            })*/.exec((err, result) => {\r\n                if (err) reject(err);\r\n                resolve(result);\r\n            });\r\n        });\r\n    },\r\n    getUserByFacebookId: function (_facebookId) {\r\n        return new Promise((resolve, reject) => {\r\n            this.findOne({\r\n                facebookId: _facebookId\r\n            }).exec((err, result) => {\r\n                if (err) reject(err);\r\n                resolve(result);\r\n            })\r\n        })\r\n    },\r\n    getUserByGoogleId: function (_googleId) {\r\n        return new Promise((resolve, reject) => {\r\n            this.findOne({\r\n                googleId: _googleId\r\n            }).exec((err, result) => {\r\n                if (err) reject(err);\r\n                resolve(result);\r\n            })\r\n        })\r\n    },\r\n    updateUser: function (objUser) {\r\n        return this.updateOne({\r\n            _id: objUser._id\r\n        }, {\r\n            $set: {\r\n                'name': objUser.name,\r\n                'lastName': objUser.lastName,\r\n                'password': objUser.password,\r\n                'email': objUser.email,\r\n                'cellphone': objUser.cellphone,\r\n                'active': objUser.active,\r\n                'transtime': moment.utc()\r\n            }\r\n        })\r\n    },\r\n    saveUser: function (objUser) {\r\n        let user = new this(objUser);\r\n        return user.save();\r\n    },\r\n    /**\r\n     * Validate if the user token is active\r\n     */\r\n    isValidToken: function (_token) {\r\n        return new Promise(function (resolve, reject) {\r\n            var isValid = false;\r\n            try {\r\n                jwt.verify(_token, _secretKey, function (err, decoded) {\r\n                    if (decoded) {\r\n                        if (_validateExpDate(decoded.exp)) {\r\n                            isValid = true;\r\n                        }\r\n                    }\r\n                    resolve(isValid);\r\n                });\r\n            }\r\n            catch (err) {\r\n                console.log(err);\r\n                reject(false);\r\n            }\r\n        });\r\n    },\r\n    /**\r\n     * Get the payload of the jwt token\r\n     * @param {String} _token \r\n     */\r\n    getTokenPayload: function (_token) {\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                jwt.verify(_token, _secretKey, function (err, decoded) {\r\n                    resolve(decoded);\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    },\r\n    encryptPassword: function (_password) {\r\n        return new Promise((resolve, reject) => {\r\n            let pass = base64.decode(_password);\r\n            let saltRounds = 10;\r\n            bcrypt.genSalt(saltRounds, (err, salt) => {\r\n                bcrypt.hash(pass, salt, (err, hash) => {\r\n                    if (!err)\r\n                        resolve({ hash });\r\n                    else\r\n                        reject(err);\r\n                })\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nconst User = mongoose.model(\"User\", UserSchema);\r\n\r\nmodule.exports = User;","const router = require('express').Router();\r\n\r\nconst siteAuth = require(\"../controllers/siteAuth\");\r\n\r\nconst menus = require(\"../controllers/menus\");\r\n\r\nconst postalCodes = require(\"../controllers/postalCodes\");\r\n\r\nconst signup = require(\"../controllers/signup\");\r\n\r\nconst handleFiles = require(\"../controllers/handleFile\");\r\n\r\nconst multer = require(\"multer\");\r\n\r\nconst suburb = require(\"../controllers/suburbInfo\");\r\n\r\nlet upload = multer({ dest: \"./uploads/\" });\r\n\r\nrouter.post('/api/checkAuth', siteAuth.checkAuth);\r\n\r\nrouter.post('/api/isValidToken', siteAuth.isValidToken);\r\n\r\nrouter.post('/api/validateTokenPath', siteAuth.validateTokenPath);\r\n\r\nrouter.post('/api/logOff', siteAuth.logOff);\r\n\r\nrouter.get('/api/auth/fbtoken', siteAuth.getTokenByFacebookId);\r\n\r\nrouter.get('/api/auth/googletoken', siteAuth.getTokenByGoogleId);\r\n\r\n\r\n\r\nrouter.post('/api/signUp', signup.signUp);\r\n\r\n\r\n//user apis\r\nconst userAdmin = require(\"../controllers/userAdmin\");\r\n\r\nrouter.post('/api/user/:userType', userAdmin.createUserByType);\r\nrouter.get('/api/user/:userType', userAdmin.getUserByType);\r\nrouter.get('/api/user', userAdmin.getUserInfo);\r\n\r\nrouter.post('/api/saveGoogleUser', userAdmin.saveGoogleUser);\r\nrouter.post('/api/saveFacebookUser', userAdmin.saveFacebookUser);\r\nrouter.post('/api/saveEmailUser', userAdmin.saveEmailUser);\r\n\r\n//logged user APIs\r\nrouter.get('/api/me/menu', menus.getMenusByUser);\r\n\r\n//postal codes\r\nrouter.get('/api/cp/getCPInfo', postalCodes.getPostalCodeInfo);\r\n\r\n//handle files\r\nrouter.post('/api/file/upload', upload.any(), handleFiles.uploadFile);\r\n\r\nrouter.get('/api/suburb/info', suburb.getSuburbByAdminId);\r\n\r\nmodule.exports = router;","const express = require('express');\r\nconst router = express.Router();\r\n\r\nconst auth = require(\"../middleware/auth\");\r\n\r\n//routes\r\nconst apiRoutes = require(\"./apiRoutes\");\r\n\r\nrouter.use('/api/*', auth.checkApiAuth);\r\nrouter.all(\"/api/*\", apiRoutes);\r\n\r\nmodule.exports = router;","/**\r\n * Module dependencies.\r\n */\r\n\r\nvar app = require('./app');\r\nvar debug = require('debug')('rochacoapi:server');\r\nvar http = require('http');\r\n\r\n/**\r\n * Get port from environment and store in Express.\r\n */\r\n\r\nvar port = normalizePort(process.env.PORT || '4010');\r\napp.set('port', port);\r\n\r\n/**\r\n * Create HTTP server.\r\n */\r\n\r\nvar server = http.createServer(app);\r\n\r\n/**\r\n * Listen on provided port, on all network interfaces.\r\n */\r\n\r\nserver.listen(port);\r\nserver.on('error', onError);\r\nserver.on('listening', onListening);\r\n\r\n/**\r\n * Normalize a port into a number, string, or false.\r\n */\r\n\r\nfunction normalizePort(val) {\r\n  var port = parseInt(val, 10);\r\n\r\n  if (isNaN(port)) {\r\n    // named pipe\r\n    return val;\r\n  }\r\n\r\n  if (port >= 0) {\r\n    // port number\r\n    return port;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Event listener for HTTP server \"error\" event.\r\n */\r\n\r\nfunction onError(error) {\r\n  if (error.syscall !== 'listen') {\r\n    throw error;\r\n  }\r\n\r\n  var bind = typeof port === 'string'\r\n    ? 'Pipe ' + port\r\n    : 'Port ' + port;\r\n\r\n  // handle specific listen errors with friendly messages\r\n  switch (error.code) {\r\n    case 'EACCES':\r\n      console.error(bind + ' requires elevated privileges');\r\n      process.exit(1);\r\n      break;\r\n    case 'EADDRINUSE':\r\n      console.error(bind + ' is already in use');\r\n      process.exit(1);\r\n      break;\r\n    default:\r\n      throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Event listener for HTTP server \"listening\" event.\r\n */\r\n\r\nfunction onListening() {\r\n  var addr = server.address();\r\n  var bind = typeof addr === 'string'\r\n    ? 'pipe ' + addr\r\n    : 'port ' + addr.port;\r\n  debug('Listening on ' + bind);\r\n}\r\n","module.exports = require(\"@sendgrid/mail\");","module.exports = require(\"base-64\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"debug\");","module.exports = require(\"dotenv\");","module.exports = require(\"dropbox-v2-api\");","module.exports = require(\"express\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"moment\");","module.exports = require(\"mongoose\");","module.exports = require(\"morgan\");","module.exports = require(\"multer\");","module.exports = require(\"request\");"],"sourceRoot":""}