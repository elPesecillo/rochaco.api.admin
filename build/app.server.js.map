{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/api/ApiService.js","webpack:///./src/api/ApiUtils.js","webpack:///./src/app.js","webpack:///./src/constants/menusConfig.js","webpack:///./src/constants/types.js","webpack:///./src/controllers/analytics.js","webpack:///./src/controllers/handleFile.js","webpack:///./src/controllers/menus.js","webpack:///./src/controllers/postalCodes.js","webpack:///./src/controllers/pushNotification.js","webpack:///./src/controllers/signup.js","webpack:///./src/controllers/siteAuth.js","webpack:///./src/controllers/suburb.js","webpack:///./src/controllers/userAdmin.js","webpack:///./src/logic/auth.js","webpack:///./src/logic/menuService.js","webpack:///./src/logic/postalCodeService.js","webpack:///./src/logic/pushNotificationService.js","webpack:///./src/logic/suburbService.js","webpack:///./src/logic/userService.js","webpack:///./src/logic/viewPermissions.js","webpack:///./src/middleware/auth.js","webpack:///./src/models/globalConfig.js","webpack:///./src/models/index.js","webpack:///./src/models/menu.js","webpack:///./src/models/postalCode.js","webpack:///./src/models/role.js","webpack:///./src/models/schemas/config/dropdownSchema.js","webpack:///./src/models/schemas/config/fieldSchema.js","webpack:///./src/models/schemas/config/screenSchema.js","webpack:///./src/models/schemas/guestSchema.js","webpack:///./src/models/schemas/pushTokenSchema.js","webpack:///./src/models/schemas/suburbFileSchema.js","webpack:///./src/models/schemas/suburbStatusSchema.js","webpack:///./src/models/suburb.js","webpack:///./src/models/suburbConfig.js","webpack:///./src/models/suburbInvite.js","webpack:///./src/models/suburbStreet.js","webpack:///./src/models/user.js","webpack:///./src/routes/apiRoutes.js","webpack:///./src/routes/router.js","webpack:///./src/server.js","webpack:///external \"@sendgrid/mail\"","webpack:///external \"axios\"","webpack:///external \"base-64\"","webpack:///external \"bcryptjs\"","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"crypto-js\"","webpack:///external \"debug\"","webpack:///external \"dotenv\"","webpack:///external \"dropbox-v2-api\"","webpack:///external \"expo-server-sdk\"","webpack:///external \"express\"","webpack:///external \"fs\"","webpack:///external \"http\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"moment\"","webpack:///external \"mongoose\"","webpack:///external \"morgan\"","webpack:///external \"multer\"","webpack:///external \"request\""],"names":["axios","require","handleError","handleResponse","httpRequest","method","url","request","_headers","hdrs","data","headers","then","res","result","Promise","resolve","catch","err","reject","get","queryString","Object","keys","length","len","cnt","key","toString","deleteRequest","post","put","patch","module","exports","delete","response","status","statusText","error","Error","console","dotenv","express","logger","bodyParser","cors","config","connectDb","router","app","use","urlencoded","extended","json","userType","userTypes","menus","name","path","icon","visible","validUserTypes","guard","suburbAdmin","admin","guest","neighbor","order","suburbStatus","description","Api","apiAnalytics","process","env","API_ANALYTICS_URL","apiKey","API_ANALYTICS_KEY","getSuburbVisits","req","suburbId","startDate","query","code","success","message","userServices","suburbService","fs","dropboxV2Api","sgMail","getFileName","nodeFileName","originalName","idx","lastIndexOf","substring","uploadFileDropbox","file","dropbox","authenticate","token","DROPBOX_TOKEN","resource","parameters","filename","originalname","readStream","createReadStream","destination","base64_encode","file_path","bitmap","readFileSync","Buffer","from","getEmailAttachments","files","attachments","forEach","push","content","sendEmail","user","suburb","setApiKey","SENDGRID_API_KEY","msg","to","OWNER_EMAILS","split","subject","text","html","send","ex","deleteTemporaryFiles","unlink","log","processFileUpload","userId","lastName","cellphone","email","postalCode","section","suburbName","recaptchaToken","validCaptcha","validateRecaptcha","proms","uploadedFiles","all","saveSuburb","location","active","userAdmins","getSuburbStatus","map","fil","fileName","actionType","mimetype","updateUser","_id","id","uploadFile","next","body","processFiles","sendTempPassEmail","tempPassword","menuService","getMenusByUser","postalCodeService","getPostalCodeInfo","getCPInfo","pushNotificationService","getUserById","sendTestNotification","sendPushNotification","sound","withSome","title","subtitle","sendArriveNotification","pushTokens","t","_doc","isService","redirect","signUp","undefined","facebookId","googleId","appleId","password","loginName","saveFacebookUser","saveGoogleUser","saveAppleUser","saveEmailUser","User","viewPermissions","default","validateActiveUser","validateUser","userLogin","isTemporary","getLogin","login","validPass","validatePassword","generateUserToken","succes","checkAuth","captchaToken","usr","getTokenByFacebookId","getUserByFacebookId","getTokenByGoogleId","getUserByGoogleId","getTokenByAppleId","getUserByAppleId","isValidToken","isValid","valid","validateTokenPath","permissionValid","logOff","session","destroy","userService","moment","ObjectId","Types","approveReject","newStatus","details","getSuburbById","addStatus","suburbAddStatus","transtime","utc","getSuburbByAdminId","getSuburbByAdminUser","addSuburbInvite","street","streetNumber","getSuburbInvite","invite","getStreets","getUsersBySuburb","users","streets","distinctStreets","Set","filter","u","s","getStreetNumbers","getUsersBySuburbStreet","streetNumbers","distinctStreetNumbers","saveSuburbConfig","sub","getSuburbConfig","saveSuburbStreet","getSuburbStreets","SuburbInvite","handleFile","resV","saveUser","userConfirmed","resSave","updateUserPicture","photoUrl","updated","saveUserWithPassword","generateTempPassword","tempPass","updateTempPassword","sendMail","createUserByType","params","saveUserBySuburbId","getcode","GetInviteByCode","save","trim","updateCode","UpdateSuburbInviteUsed","userData","getUserByType","getUserInfo","getUserByToken","getUserFavs","userFavs","getUserFavorites","addUserFavs","favs","saveUserFavorites","removeUserFavs","removeUserFavorites","addUserPushToken","pushToken","getUsersByAddress","deleteUserInfo","removeUserInfo","getSignedUserTerms","signedUserTerms","isPasswordTemp","buff","decodedPassword","isPassTemp","updatePassword","buff2","decodedTempPassword","signUserTerms","termsVersion","update","openApi","protectedApi","Auth","validateToken","def","validateAdminUser","getPayload","getTokenPayload","payload","isOpenApi","apiPath","indexOf","isProtectedApi","validateApiRequest","secretKey","RECAPTCHA_SECRET","verificationURL","captchaResult","userToken","userMenus","menu","types","g","toLowerCase","item","errP","PostalCode","getInfo","cp","Expo","expo","getMessagesBatches","messages","isExpoPushToken","chunkPushNotifications","sendExpoNotification","chunks","tickets","chunk","ticketChunk","sendPushNotificationsAsync","checkTickets","receiptIds","ticket","receiptIdChunks","chunkPushNotificationReceiptIds","receipts","getPushNotificationReceiptsAsync","receiptId","Suburb","SuburbConfig","SuburbStreet","CryptoJS","pjson","Mongoose","statusName","st","encryption","AES","encrypt","cryptoKey","decryption","bytes","decrypt","enc","Utf8","suburbObj","SaveSuburb","UpdateStatus","suburbAddStatusByName","UpdateStatusByName","GetSuburbByUserId","GetSuburb","_code","Math","random","toUpperCase","SaveSuburbInvite","subInv","AddSuburbInvite","subInvite","GetSuburbBasicInfo","props","sucess","suburbData","saveConfig","SaveConfig","SaveSuburbConfig","updateConfig","UpdateConfig","GetSuburbConfig","GetSuburbStreets","selectedStreet","saveStreet","SaveStreet","SaveSuburbStreet","updateStreet","UpdateStreet","GlobalConfig","userObj","resG","JSON","parse","score","encryptPassword","resEncrypt","encryptedPassword","hash","find","findById","isPasTemp","updatePass","getUserLeanById","terms","GetTermsAndCons","userTerms","signedTerms","latestTerms","parseFloat","reduce","i","n","signed","updateTerms","updateUserTerms","permissions","validateWithPayload","validPath","p","toLocaleLowerCase","jwt","validApiRequest","auth","stringify","checkApiAuth","baseUrl","mongoose","GlobalConfigSchema","Schema","termsAndConditions","Decimal128","statics","SaveInitialConfig","findOne","lean","exec","model","Menu","Role","models","mConn","connect","DB_CONNECTION","useNewUrlParser","connection","on","bind","MenuSchema","type","String","required","link","parentId","ref","position","Number","Boolean","Date","getMenuById","menuId","updateMenu","objMenu","$set","deleteMenu","deleteMany","getChildMenus","getChildMenusRecursively","parents","_this","getThisLevelChilds","elements","childs","child","getInnerChilds","concat","getParentMenusRecursively","getThisLevel","getMoreParents","getMenus","PostalCodeSchema","d_codigo","d_asenta","d_tipo_asenta","D_mnpio","d_estado","d_ciudad","d_CP","c_estado","c_oficina","c_CP","c_tipo_asenta","c_mnpio","id_asenta_cpcons","d_zona","c_cve_ciudad","regCp","RegExp","limit","RoleSchema","siteAdministration","sysAdministrator","deleteRole","roleId","setRoleMenu","Array","isArray","$addToSet","$each","multi","deleteRoleMenu","roles","$in","$pullAll","getRoleMenus","populate","DropdownSchema","value","FieldSchema","field","label","mandatory","mandatoryMessage","ScreenSchema","fields","GuestSchema","vehicle","plates","additionalInformation","arriveOn","leaveOn","count","PushTokenSchema","SuburbFileSchema","SuburbStatusSchema","suburbConfig","suburbStreet","SuburbSchema","suburbInvites","updateOne","userInviteId","GetSuburbByName","configId","streetId","SuburbConfigSchema","imageUrl","screens","SuburbInviteSchema","usedBy","updatedTranstime","userInviteObj","userInvite","$and","suburbStreetSchema","numbers","bcrypt","base64","UserSchema","unique","loginAttempts","temporaryDisabled","disabledSince","lastAccess","favorites","_secretKey","JWT_SECRET","_getExpDate","expTimeByMin","EXP_TOKEN","add","unix","_getValidApis","_getValidMenus","_validateExpDate","expDate","currentTime","methods","_password","pass","decode","compareValue","wait","getDisabledSince","increaseLoginAttempts","compare","start","end","diff","reset","_suburb","userName","exp","validApis","sign","setUserRole","deleteUserRole","getUserRoles","getCleanResult","mergeArrayObjects","currentFavs","newFavs","firstMerge","assign","a2","fm","items","sort","a","b","slice","mergePushTokens","currentPushTokens","newPushToken","tokens","exists","extractUsersFromDoc","mUsers","_loginName","_facebookId","_googleId","_appleId","mergedFavs","findOneAndUpdate","new","filterFavs","f","mergedPushTokens","objUser","deleteOne","_token","verify","decoded","saltRounds","genSalt","salt","HashPassword","encode","tempHashPassword","Router","siteAuth","postalCodes","signup","handleFiles","multer","pushNotification","analytics","upload","dest","userAdmin","any","apiRoutes","debug","http","port","normalizePort","PORT","set","server","createServer","listen","onError","onListening","val","parseInt","isNaN","syscall","exit","addr","address"],"mappings":"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","file":"app.server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server.js\");\n","const axios = require(\"axios\");\nconst { handleError, handleResponse } = require(\"./ApiUtils\");\n\nconst httpRequest = (method, url, request, _headers) => {\n  let hdrs = { ..._headers };\n  return axios({\n    method,\n    url,\n    data: request,\n    headers: hdrs,\n  })\n    .then((res) => {\n      const result = handleResponse(res);\n      return Promise.resolve(result);\n    })\n    .catch((err) => {\n      //throw handleError(err);\n      return Promise.reject(handleError(err));\n    });\n};\n\nconst get = (url, request, headers) => {\n  let queryString = \"\";\n  if (request && Object.keys(request).length > 0) {\n    queryString += \"?\";\n    let len = Object.keys(request).length,\n      cnt = 0;\n    for (let key in request) {\n      cnt++;\n      queryString += `${key}=${request[key].toString()}`;\n      if (len > cnt) queryString += \"&\";\n    }\n  }\n  return httpRequest(\"get\", `${url}${queryString}`, null, headers);\n};\n\nconst deleteRequest = (url, request, headers) => {\n  return httpRequest(\"delete\", url, request, headers);\n};\n\nconst post = (url, request, headers) => {\n  return httpRequest(\"post\", url, request, headers);\n};\n\nconst put = (url, request, headers) => {\n  return httpRequest(\"put\", url, request, headers);\n};\n\nconst patch = (url, request, headers) => {\n  return httpRequest(\"patch\", url, request, headers);\n};\n\nmodule.exports = {\n  get,\n  delete: deleteRequest,\n  post,\n  put,\n  patch,\n};\n","exports.handleResponse = (response) => {\n  if (\n    response.status === 200 ||\n    response.status === 202 ||\n    response.statusText === \"OK\" ||\n    response.statusText === \"Created\"\n  )\n    return response.data;\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = response.statusText();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n};\n\n// In a real app, would likely call an error logging service.\nexports.handleError = (error) => {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  return error && error.response && error.response.data\n    ? error.response.data\n    : error;\n};\n","const dotenv = require(\"dotenv\");\nconst express = require('express');\nconst logger = require('morgan');\nconst bodyParser = require('body-parser');\nconst cors = require(\"cors\");\n\ndotenv.config();\n\nconst connectDb = require(\"./models\").connectDb;\nvar router = require(\"./routes/router\");\n\n\nvar app = express();\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(express.json());\napp.use(cors());\napp.use(logger('dev'));\napp.use('/', router);\n\nconnectDb();\n\nmodule.exports = app;\n\n","const userType = require(\"./types\").userTypes;\n\n/**\n * Get menus list\n */\nexports.menus = [\n  {\n    name: \"Mi Cuenta\",\n    path: \"/admin/cuenta\",\n    icon: \"icon icon-account_circle\",\n    visible: true,\n    validUserTypes: [\n      userType.guard,\n      userType.suburbAdmin,\n      userType.admin,\n      userType.guest,\n      userType.neighbor,\n    ],\n    order: 5,\n  },\n  {\n    name: \"Reporte\",\n    path: \"/admin/reporte\",\n    icon: \"icon icon-dashboard2\",\n    visible: true,\n    validUserTypes: [\n      userType.guard,\n      userType.suburbAdmin,\n      userType.admin,\n      userType.guest,\n    ],\n    order: 5,\n  },\n  {\n    name: \"Guardias\",\n    path: \"/admin/guardias\",\n    icon: \"icon icon-shield\",\n    visible: true,\n    validUserTypes: [userType.guest, userType.guard, userType.admin],\n    order: 2,\n  },\n  {\n    name: \"GuardiasForm\",\n    icon: \"icon icon-shield\",\n    path: \"/admin/guardias-form\",\n    visible: false,\n    validUserTypes: [userType.suburbAdmin, userType.admin],\n    order: 6,\n  },\n  {\n    name: \"Vecinos\",\n    path: \"/admin/vecinos\",\n    icon: \"icon icon-users\",\n    visible: true,\n    validUserTypes: [userType.suburbAdmin, userType.admin],\n    order: 3,\n  },\n  {\n    name: \"Colonia\",\n    path: \"/admin/colonias\",\n    icon: \"icon icon-building\",\n    visible: true,\n    validUserTypes: [userType.admin],\n    order: 4,\n  },\n  {\n    name: \"Colonia Status\",\n    path: \"/admin/coloniaStatus\",\n    icon: \"icon icon-building\",\n    visible: false,\n    validUserTypes: [userType.admin, userType.suburbAdmin, userType.guest],\n    order: 4,\n  },\n  {\n    name: \"Colonia Status\",\n    path: \"/admin/coloniaMain\",\n    icon: \"icon icon-building\",\n    visible: false,\n    validUserTypes: [\n      userType.admin,\n      userType.suburbAdmin,\n      userType.suburbAdmin,\n    ],\n    order: 4,\n  },\n];\n","exports.userTypes = {\n  guest: \"guest\",\n  admin: \"admin\",\n  suburbAdmin: \"suburbAdmin\",\n  guard: \"guard\",\n  neighbor: \"neighbor\",\n};\n\nexports.suburbStatus = [\n  {\n    status: \"pending\",\n    description:\n      \"Tu solicitud para registrar la colonia ha sido enviada, por favor espera de 2 a 3 dias habiles o contactanos por medio de nuestras redes sociales para mayor informacion.\",\n  },\n  {\n    status: \"rejected\",\n    description: \"Lo sentimos tu solicitud fue rechazada.\",\n  },\n  {\n    status: \"approved\",\n    description: \"Tu solicitud a sido aprobada.\",\n  },\n  {\n    status: \"feedback\",\n    description: \"Tu solicitud a sido revisada, se requiere mas información.\",\n  },\n];\n","const Api = require(\"../api/ApiService\");\n\nconst apiAnalytics = process.env.API_ANALYTICS_URL;\nconst apiKey = process.env.API_ANALYTICS_KEY;\n\nexports.getSuburbVisits = async (req, res) => {\n  try {\n    let { suburbId, startDate } = req.query;\n    let response = await Api.get(`${apiAnalytics}/GetVisitsInfo`, {\n      code: apiKey,\n      suburbId,\n      startDate,\n    });\n    res.status(\"200\").json(response);\n  } catch (err) {\n    console.error(err);\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n","const userServices = require(\"../logic/userService\");\nconst suburbService = require(\"../logic/suburbService\");\n//const fetchDbx = require('isomorphic-fetch');\nconst fs = require(\"fs\");\n// const Dropbox = require(\"dropbox\").Dropbox;\nconst dropboxV2Api = require(\"dropbox-v2-api\");\nconst sgMail = require(\"@sendgrid/mail\");\n\nconst getFileName = (nodeFileName, originalName) => {\n  let idx = originalName.lastIndexOf(\".\");\n  return `${nodeFileName}.${originalName.substring(idx + 1)}`;\n};\n\nconst uploadFileDropbox = (file) => {\n  const dropbox = dropboxV2Api.authenticate({\n    token: process.env.DROPBOX_TOKEN,\n  });\n\n  return new Promise((resolve, reject) => {\n    dropbox(\n      {\n        resource: \"files/upload\",\n        parameters: {\n          path: `/neighby/${getFileName(file.filename, file.originalname)}`,\n        },\n        readStream: fs.createReadStream(`${file.destination}/${file.filename}`),\n      },\n      (err, result, response) => {\n        if (!err) resolve(result);\n        else reject(err);\n      }\n    );\n  });\n};\n\nconst base64_encode = (file_path) => {\n  // read binary data\n  var bitmap = fs.readFileSync(file_path);\n  // convert binary data to base64 encoded string\n  return new Buffer.from(bitmap, \"base64\").toString(\"base64\"); //.toString('base64');\n};\n\nconst getEmailAttachments = (files) => {\n  let attachments = [];\n  files.forEach((file) => {\n    attachments.push({\n      filename: `${file.originalname}`,\n      content: base64_encode(`${file.destination}/${file.filename}`),\n    });\n  });\n  return attachments;\n};\n\nconst sendEmail = async (files, user, suburb, suburbId) => {\n  try {\n    sgMail.setApiKey(process.env.SENDGRID_API_KEY);\n\n    const msg = {\n      to: process.env.OWNER_EMAILS.split(\",\"),\n      from: \"support@neighby.com\",\n      subject: \"Nuevo requerimiento de registro de colonia.\",\n      text: `solicitud de registro.`,\n      html: `<strong>El usuario ${user} desea registrar la colonia ${suburb} y envia los documentos para revisión adjuntos en este email para revision, id de referencia:[${suburbId}].</strong>`,\n      attachments: getEmailAttachments(files),\n    };\n    await sgMail.send(msg);\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst deleteTemporaryFiles = (files) => {\n  files.forEach((file) => {\n    fs.unlink(`${file.destination}/${file.filename}`, (err) => {\n      if (err) throw err;\n      console.log(\n        `path file ${file.destination}/${file.filename} has been deleted.`\n      );\n    });\n  });\n};\n\nconst processFileUpload = async (files, data) => {\n  try {\n    let {\n      userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      postalCode,\n      section,\n      suburbName,\n      recaptchaToken,\n    } = data;\n    let validCaptcha = await userServices.validateRecaptcha(recaptchaToken);\n    let proms = [];\n    files.forEach((file) => {\n      proms.push(uploadFileDropbox(file));\n    });\n    let uploadedFiles = await Promise.all(proms);\n\n    let saveSuburb = await suburbService.saveSuburb({\n      name: suburbName,\n      location: section,\n      postalCode: postalCode,\n      active: true,\n      userAdmins: [userId],\n      status: [suburbService.getSuburbStatus(\"pending\")],\n      files: files.map((fil) => ({\n        fileName: fil.filename,\n        originalName: fil.originalname,\n        actionType: \"solicitudRegistro\",\n        mimetype: fil.mimetype,\n      })),\n    });\n\n    let updateUser = await userServices.updateUser({\n      _id: userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      active: true,\n    });\n\n    await sendEmail(files, `${name} ${lastName}`, suburbName, saveSuburb.id);\n\n    deleteTemporaryFiles(files);\n    return saveSuburb;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nexports.uploadFile = async (req, res, next) => {\n  try {\n    let {\n      userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      postalCode,\n      section,\n      suburbName,\n      recaptchaToken,\n    } = req.body;\n    let processFiles = await processFileUpload(req.files, {\n      userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      postalCode,\n      section,\n      suburbName,\n      recaptchaToken,\n    });\n    res.status(202).json({ message: \"ok\" });\n  } catch (ex) {\n    res\n      .status(400)\n      .json({ message: ex.message || \"No se pudo completar el registro.\" });\n  }\n};\n\nexports.sendTempPassEmail = async (email, tempPassword, files = []) => {\n  try {\n    sgMail.setApiKey(process.env.SENDGRID_API_KEY);\n\n    const msg = {\n      to: email, //process.env.OWNER_EMAILS.split(\",\"),\n      from: \"support@neighby.com\",\n      subject: \"Solicitud de cambio de contraseña.\",\n      text: `Solicitud de cambio de contraseña.`,\n      html: `<strong>La nueva contraseña temporal es: ${tempPassword} </strong>`,\n      attachments: getEmailAttachments(files),\n    };\n    await sgMail.send(msg);\n  } catch (ex) {\n    throw ex;\n  }\n};\n","const menuService = require(\"../logic/menuService\");\n\n\n\n/**\n * [GET] method to get the menus by user types\n */\nexports.getMenusByUser = async (req, res, next) => {\n    let token = req.headers[\"authorization\"];\n    try {\n        const result = await menuService.getMenusByUser(token);\n        res.status('200').json(result);\n    } catch (err) {\n        res.status('401').json(err);\n    }\n}","const postalCodeService = require(\"../logic/postalCodeService\");\n\nexports.getPostalCodeInfo = async (req, res, next) => {\n    try {\n        let result = await postalCodeService.getCPInfo(req.query.postalCode);\n        res.status(200).json(result);\n    }\n    catch (err) {\n        res.status(400).json(err);\n    }\n}","const pushNotificationService = require(\"../logic/pushNotificationService\");\nconst { getUserById } = require(\"../logic/userService\");\n\nexports.sendTestNotification = async (req, res, next) => {\n  try {\n    let result = await pushNotificationService.sendPushNotification(\n      [\"ExponentPushToken[TRMrLcG4VUxVUwmsCXPIyw]\"],\n      {\n        sound: \"default\",\n        body: \"This is a test notification ;)\",\n        data: { withSome: \"data\" },\n        title: \"Notificacion Nueva\",\n        subtitle: \"soy un subtitulo\",\n      }\n    );\n    res.status(200).json(result);\n  } catch (err) {\n    res.status(400).json(err);\n  }\n};\n\nexports.sendArriveNotification = async (req, res) => {\n  try {\n    let { userId, guest } = req.body;\n    let user = await getUserById(userId);\n    let pushTokens = user.pushTokens.map((t) => t._doc.token);\n    let result = await pushNotificationService.sendPushNotification(\n      pushTokens,\n      {\n        sound: \"default\",\n        body: guest.isService\n          ? `Tu servicio ${guest.name} ha llegado.`\n          : `Tu invitado ${guest.name} ha llegado.`,\n        data: { redirect: \"myVisits\" },\n        title: `Hola ${user.name}`,\n      }\n    );\n    return result;\n  } catch (err) {\n    res.status(400).json(err);\n  }\n};\n","const user = require(\"./userAdmin\");\n\nexports.signUp = (req, res, next) => {\n  if (\n    req.body.token === undefined ||\n    req.body.token === \"\" ||\n    req.body.token === null\n  ) {\n    res.send({\n      success: false,\n      message: \"Por favor intenta de nuevo (codigo recaptcha no encontrado).\",\n    });\n    return;\n  }\n  let {\n    email,\n    name,\n    lastName,\n    cellphone,\n    facebookId,\n    googleId,\n    appleId,\n    password,\n    token,\n  } = req.body;\n  if (facebookId) {\n    req.body = {\n      email,\n      name,\n      lastName,\n      loginName: facebookId,\n      cellphone,\n      facebookId,\n      googleId,\n      appleId,\n      password,\n      token,\n    };\n    user.saveFacebookUser(req, res, next);\n  } else if (googleId) {\n    req.body = {\n      email,\n      name,\n      lastName,\n      loginName: googleId,\n      cellphone,\n      facebookId,\n      googleId,\n      appleId,\n      password,\n      token,\n    };\n    user.saveGoogleUser(req, res, next);\n  } else if (appleId) {\n    req.body = {\n      email,\n      name,\n      lastName,\n      loginName: appleId,\n      cellphone,\n      facebookId,\n      googleId,\n      appleId,\n      password,\n      token,\n    };\n    user.saveAppleUser(req, res, next);\n  } else {\n    req.body = {\n      email,\n      name,\n      lastName,\n      loginName: email,\n      cellphone,\n      facebookId,\n      googleId,\n      appleId,\n      password,\n      token,\n    };\n    user.saveEmailUser(req, res, next);\n  }\n  //mandar llamar registro aqui\n  // if (googleId || facebookId)\n  //     axios({\n  //         method: 'post',\n  //         url: googleId ? `${process.env.ADMIN_API_HOST}/api/saveGoogleUser` : `${process.env.ADMIN_API_HOST}/api/saveFacebookUser`,\n  //         data: {\n  //             name,\n  //             lastName,\n  //             loginName: googleId ? googleId : facebookId,\n  //             email,\n  //             cellphone,\n  //             googleId,\n  //             facebookId,\n  //             token\n  //         }\n  //     }).then(resS => {\n  //         res.send({ success: true, message: resS.data.message || \"Ok\" });\n  //     })\n  //         .catch(err => {\n  //             let errMsg = err && err.response && err.response.data && err.response.data.message ? err.response.data.message : err.message || \"No se pudo guardar el usuario.\";\n  //             res.send({ success: false, message: errMsg });\n  //         });\n  // else {\n  //     axios({\n  //         method: 'post',\n  //         url: `${process.env.ADMIN_API_HOST}/api/saveEmailUser`,\n  //         data: {\n  //             name,\n  //             lastName,\n  //             loginName: email,\n  //             email,\n  //             cellphone,\n  //             password,\n  //             token\n  //         }\n  //     }).then(resS => {\n  //         res.send({ success: true, message: resS.data.message || \"Ok\" });\n  //     })\n  //         .catch(err => {\n  //             let errMsg = err && err.response && err.response.data && err.response.data.message ? err.response.data.message : err.message || \"No se pudo guardar el usuario.\";\n  //             res.send({ success: false, message: errMsg });\n  //         });\n  // }\n};\n","const User = require(\"../models/user\");\nconst viewPermissions = require(\"../logic/viewPermissions\");\nconst axios = require(\"axios\").default;\nconst validateRecaptcha = require(\"../logic/auth\").validateRecaptcha;\n\nconst validateActiveUser = (user) => {\n  return user.active;\n};\n\nconst validateUser = (userLogin, password, isTemporary = false) => {\n  return new Promise((resolve, reject) => {\n    User.getLogin(userLogin).then((login, err) => {\n      if (login) {\n        let validPass = login.validatePassword(password, isTemporary);\n        validPass.then(\n          (result) => {\n            //generate jwt token\n            let token = login.generateUserToken();\n            resolve({ success: true, message: token });\n          },\n          (err) => {\n            reject({\n              success: false,\n              message: err.message || \"La contraseña no es valida.\",\n            });\n          }\n        );\n      } else\n        reject({\n          succes: false,\n          message: \"El usuario no existe, o esta deshabilitado.\",\n        });\n    });\n  });\n};\n\nexports.checkAuth = async (req, res, next) => {\n  try {\n    //over here check the db to know if the auth is valid\n    let { user, password, captchaToken, isTemporary = false } = req.body;\n\n    let validCaptcha = await validateRecaptcha(captchaToken);\n    if (validCaptcha) {\n      let usr = await validateUser(user, password, isTemporary); //.then(\n\n      if (usr) {\n        if (usr.success) {\n          // var session = req.session;\n          // session.token = result.message;\n          // session.user = user;\n          res.status(\"200\").json(usr);\n        } else\n          res.status(\"401\").json({ success: false, message: \"Unauthorized\" });\n      } else {\n        res.status(\"401\").json({ success: false, message: \"Unauthorized\" });\n      }\n    } else res.status(\"401\").json({ success: false, message: \"Unauthorized\" });\n  } catch (err) {\n    console.log(\"error\", err);\n    res.status(\"404\").json({ token: null, message: err });\n  }\n};\n\nexports.getTokenByFacebookId = async (req, res) => {\n  try {\n    let { id, captchaToken } = req.query;\n    let validCaptcha = await validateRecaptcha(captchaToken);\n    if (validCaptcha) {\n      let usr = await User.getUserByFacebookId(id);\n      if (usr) {\n        if (validateActiveUser(usr._doc)) {\n          let token = usr.generateUserToken();\n          res.status(\"200\").json({ token });\n        } else\n          res.status(\"401\").json({\n            token: null,\n            message:\n              \"Tu usuario esta desactivado, para mayor información contacta el administrador de tu fraccionamiento.\",\n          });\n      } else {\n        res.status(\"404\").json({ token: null });\n      }\n    } else res.status(\"401\").json({ token: null });\n  } catch (err) {\n    console.log(\"error\", err);\n    res.status(\"404\").json({ token: null });\n  }\n};\n\nexports.getTokenByGoogleId = async (req, res) => {\n  try {\n    let { id, captchaToken } = req.query;\n    let validCaptcha = await validateRecaptcha(captchaToken);\n    if (validCaptcha) {\n      let usr = await User.getUserByGoogleId(id);\n      if (usr) {\n        if (validateActiveUser(usr._doc)) {\n          let token = usr.generateUserToken();\n          res.status(\"200\").json({ token });\n        } else\n          res.status(\"401\").json({\n            token: null,\n            message:\n              \"Tu usuario esta desactivado, para mayor información contacta el administrador de tu fraccionamiento.\",\n          });\n      } else {\n        res.status(\"404\").json({ token: null });\n      }\n    } else res.status(\"401\").json({ token: null });\n  } catch (err) {\n    console.log(\"error\", err);\n    res.status(\"404\").json({ token: null });\n  }\n};\n\nexports.getTokenByAppleId = async (req, res) => {\n  try {\n    let { id, captchaToken } = req.query;\n    let validCaptcha = await validateRecaptcha(captchaToken);\n    if (validCaptcha) {\n      let usr = await User.getUserByAppleId(id);\n      if (usr) {\n        if (validateActiveUser(usr._doc)) {\n          let token = usr.generateUserToken();\n          res.status(\"200\").json({ token });\n        } else\n          res.status(\"401\").json({\n            token: null,\n            message:\n              \"Tu usuario esta desactivado, para mayor información contacta el administrador de tu fraccionamiento.\",\n          });\n      } else {\n        res.status(\"404\").json({ token: null });\n      }\n    } else res.status(\"401\").json({ token: null });\n  } catch (err) {\n    console.log(\"error\", err);\n    res.status(\"404\").json({ token: null });\n  }\n};\n\nexports.isValidToken = (req, res, next) => {\n  let token = req.headers[\"authorization\"];\n  return new Promise((resolve, reject) => {\n    User.isValidToken(token).then(\n      (isValid) => {\n        if (isValid)\n          res\n            .status(\"200\")\n            .json({ valid: true, message: \"the token is valid\" });\n        else\n          res.status(\"401\")({\n            valid: false,\n            message: \"the token is not valid\",\n          });\n      },\n      (err) => res.status(\"500\")(err)\n    );\n  });\n};\n\nexports.validateTokenPath = (req, res, next) => {\n  let { token, user, path } = req.body;\n  //over here add logic to check if a path is valid for the given context (user-> userType and jwt token)\n  viewPermissions.permissionValid(path, token, user).then(\n    (result) => {\n      res.status(\"200\").json({ valid: true, message: \"ok :)\" });\n    },\n    (err) => {\n      res.status(\"401\").json(err);\n    }\n  );\n};\n\nexports.logOff = (req, res, next) => {\n  if (req.session)\n    req.session.destroy((err) => {\n      if (err)\n        res.status(\"500\").json({\n          success: false,\n          message:\n            err.message || \"An unknow error occurs while trying to log off.\",\n        });\n      res.status(\"200\").json({ success: true, message: \"session destroyed.\" });\n    });\n};\n","const suburbService = require(\"../logic/suburbService\");\nconst userService = require(\"../logic/userService\");\nconst userTypes = require(\"../constants/types\").userTypes;\nconst moment = require(\"moment\");\nconst ObjectId = require(\"mongoose\").Types.ObjectId;\nconst validateRecaptcha = require(\"../logic/auth\").validateRecaptcha;\n\nexports.approveReject = async (req, res, next) => {\n  try {\n    let { suburbId, newStatus, details } = req.body;\n    let suburb = await suburbService.getSuburbById(suburbId);\n    let status = suburbService.getSuburbStatus(newStatus);\n    if (suburb && status) {\n      let addStatus = await suburbService.suburbAddStatus(suburbId, {\n        ...status,\n        details,\n        transtime: moment.utc(),\n      });\n      if (addStatus) {\n        if (status.status === \"approved\")\n          await userService.updateUser({\n            _id: suburb.userAdmins[0].id,\n            userType: userTypes.suburbAdmin,\n            transtime: moment.utc(),\n          });\n        res.status(200).json({\n          success: true,\n          message: `El estatus ha sido actualizado correctamente, el nuevo estatus es: \"${status.status}\"`,\n        });\n      }\n    } else\n      res.status(400).json({\n        success: false,\n        message: \"El estatus no es valido o la colonia no existe\",\n      });\n  } catch (ex) {\n    res.status(400).json({\n      success: false,\n      message: ex.message || \"No se pudo procesar aprobar/rechazar la colonia.\",\n    });\n  }\n};\n\nexports.getSuburbByAdminId = (req, res, next) => {\n  let userId = req.query.id;\n  suburbService.getSuburbByAdminUser(userId).then(\n    (result) => {\n      res.status(\"200\").json(result);\n    },\n    (err) => {\n      res.status(400).json({\n        success: false,\n        message:\n          err.message || \"No se pudo obtener la informacion de la colonia.\",\n      });\n    }\n  );\n};\n\nexports.getSuburbById = (req, res, next) => {\n  let suburbId = req.query.suburbId;\n  suburbService.getSuburbById(suburbId).then(\n    (result) => {\n      res.status(200).json(result);\n    },\n    (err) => {\n      res.status(400).json({\n        success: false,\n        message: err.message || \"no se encontro la colonia\",\n      });\n    }\n  );\n};\n\nexports.addSuburbInvite = (req, res, next) => {\n  let { suburbId, name, street, streetNumber, userType } = req.body;\n  suburbService\n    .addSuburbInvite(suburbId, name, street, streetNumber, userType)\n    .then(\n      (result) => {\n        res.status(200).json(result);\n      },\n      (err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message || \"No se pudo generar la invitacion para el usuario.\",\n        });\n      }\n    );\n};\n\nexports.getSuburbInvite = async (req, res, next) => {\n  try {\n    let { code, captchaToken } = req.query;\n    let invite = await suburbService.getSuburbInvite(code);\n    let validCaptcha = await validateRecaptcha(captchaToken);\n    if (validCaptcha) {\n      res.status(200).json(invite);\n    } else res.status(401).json({ success: false, message: \"token invalido\" });\n  } catch (err) {\n    res.status(500).json({\n      success: false,\n      message: err.message || \"No se pudo obtener la invitacion.\",\n    });\n  }\n};\n\nexports.getStreets = (req, res) => {\n  let suburbId = req.query.suburbId;\n  if (suburbId) {\n    userService.getUsersBySuburb(suburbId).then(\n      (users) => {\n        let streets = users.map((usr) => usr.street);\n        const distinctStreets = [...new Set(streets)];\n        res\n          .status(200)\n          .json(\n            distinctStreets\n              .filter((u) => typeof u !== \"undefined\")\n              .map((s) => ({ street: s }))\n          );\n      },\n      (err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message ||\n            \"No se pudieron obtener las calles del fraccionamiento\",\n        });\n      }\n    );\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.getStreetNumbers = (req, res) => {\n  let { suburbId, street } = req.query;\n  if (suburbId) {\n    userService.getUsersBySuburbStreet(suburbId, street).then(\n      (users) => {\n        let streetNumbers = users.map((usr) => usr.streetNumber);\n        const distinctStreetNumbers = [...new Set(streetNumbers)];\n        res\n          .status(200)\n          .json(\n            distinctStreetNumbers\n              .filter((u) => typeof u !== \"undefined\")\n              .map((s) => ({ streetNumber: s }))\n          );\n      },\n      (err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message || \"No se pudieron obtener los numeros de la calle\",\n        });\n      }\n    );\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.saveSuburbConfig = (req, res) => {\n  let { suburbId, config } = req.body;\n  if (ObjectId.isValid(suburbId)) {\n    suburbService\n      .saveSuburbConfig(suburbId, config)\n      .then((sub) => {\n        res.status(200).json({\n          success: true,\n          message:\n            \"La configuración del fraccionamiento fue actualizada correctamente.\",\n        });\n      })\n      .catch((err) => {\n        res.status(500).json({\n          success: false,\n          message: err.message || \"No se pudo actualizar la configuracion\",\n        });\n      });\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.getSuburbConfig = (req, res) => {\n  let { suburbId } = req.query;\n  if (ObjectId.isValid(suburbId)) {\n    suburbService\n      .getSuburbConfig(suburbId)\n      .then((config) => {\n        res.status(200).json({ ...config });\n      })\n      .catch((err) => {\n        res.status(500).json({\n          success: false,\n          message: err.message || \"No se pudo obtener la configuracion\",\n        });\n      });\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.saveSuburbStreet = (req, res) => {\n  let { suburbId, street } = req.body;\n  if (ObjectId.isValid(suburbId)) {\n    suburbService\n      .saveSuburbStreet(suburbId, street)\n      .then((sub) => {\n        res.status(200).json({\n          success: true,\n          message: \"La calle fue guardada correctamente.\",\n        });\n      })\n      .catch((err) => {\n        res.status(500).json({\n          success: false,\n          message: err.message || \"No se pudo guardar la calle\",\n        });\n      });\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.getSuburbStreets = (req, res) => {\n  let { suburbId } = req.query;\n  if (ObjectId.isValid(suburbId)) {\n    suburbService\n      .getSuburbStreets(suburbId)\n      .then((streets) => {\n        res.status(200).json({ ...streets });\n      })\n      .catch((err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message ||\n            \"No se pudieron obtener las calles del fraccionamiento\",\n        });\n      });\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n","const userService = require(\"../logic/userService\");\nconst userTypes = require(\"../constants/types\").userTypes;\nconst SuburbInvite = require(\"../models/suburbInvite\");\nconst validateRecaptcha = require(\"../logic/auth\").validateRecaptcha;\nconst handleFile = require(\"../controllers/handleFile\");\nexports.saveGoogleUser = (req, res, next) => {\n  //get user data here\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    appleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //save the user here\n      userService\n        .saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          facebookId,\n          googleId,\n          appleId,\n          userConfirmed: true,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.saveFacebookUser = (req, res, next) => {\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    appleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //save the user here\n      userService\n        .saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          facebookId,\n          appleId,\n          googleId,\n          userConfirmed: true,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.saveAppleUser = (req, res, next) => {\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    appleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //save the user here\n      userService\n        .saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          facebookId,\n          googleId,\n          appleId,\n          userConfirmed: true,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.updateUserPicture = (req, res) => {\n  let { userId, photoUrl } = req.body;\n  userService\n    .updateUserPicture(userId, photoUrl)\n    .then((updated) => {\n      res\n        .status(\"200\")\n        .json({ success: true, message: \"profile picture updated.\" });\n    })\n    .catch((err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    });\n};\n\nexports.saveEmailUser = (req, res, next) => {\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    appleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //if the user is registered through email credentials the user needs to be confirmed through an email\n      userService\n        .saveUserWithPassword({\n          name,\n          lastName,\n          loginName,\n          email,\n          password: password,\n          cellphone,\n          facebookId,\n          googleId,\n          appleId,\n          userConfirmed: false,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.generateTempPassword = async (req, res) => {\n  try {\n    let { email, captchaToken } = req.body;\n    let validCaptcha = await validateRecaptcha(captchaToken);\n\n    if (validCaptcha) {\n      let tempPass = await userService.updateTempPassword(email);\n\n      if (tempPass) {\n        let sendMail = await handleFile.sendTempPassEmail(email, tempPass);\n\n        res.status(\"200\").json({\n          message: \"Se ha enviado el correo correctamente.\",\n        });\n      } else {\n        res.status(\"401\").json({\n          message: \"Hubo un problema al enviar el correo.\",\n        });\n      }\n    } else\n      res.status(\"401\").json({\n        message: \"Hubo un problema al enviar el correo.\",\n      });\n  } catch (err) {\n    console.log(\"error\", err);\n    res.status(\"404\").json({\n      message: err.message || \"Hubo un problema al enviar el correo.\",\n    });\n  }\n};\n\nexports.createUserByType = async (req, res, next) => {\n  try {\n    const { name, lastName, loginName, email, cellphone } = req.body;\n    const userType = userTypes[req.params.userType];\n    if (!userType) {\n      res.status(\"400\").json({ success: false, message: \"Bad request.\" });\n      return;\n    }\n    const result = await userService.saveUser({\n      name,\n      lastName,\n      loginName,\n      email,\n      cellphone,\n      userConfirmed: false,\n      userType,\n    });\n    res.status(\"200\").json({\n      success: true,\n      message: result.message || \"Has sido registrado correctamente.\",\n    });\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.saveUserBySuburbId = async (req, res) => {\n  try {\n    let {\n      name,\n      lastName,\n      loginName,\n      email,\n      password,\n      cellphone,\n      facebookId,\n      googleId,\n      appleId,\n      photoUrl,\n      suburbId,\n      street,\n      streetNumber,\n      code,\n      userType,\n      captchaToken, // add captcha here\n    } = req.body;\n    let validCaptcha = await validateRecaptcha(captchaToken);\n    if (validCaptcha) {\n      let getcode = await SuburbInvite.GetInviteByCode(code);\n      let save = null;\n      if (password && password.trim() !== \"\") {\n        save = await userService.saveUserWithPassword({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          photoUrl,\n          facebookId,\n          googleId,\n          appleId,\n          suburb: suburbId,\n          street,\n          streetNumber,\n          userType,\n          userConfirmed: false, // if the user is an email user the user needs to confirm\n        });\n      } else {\n        save = await userService.saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          photoUrl,\n          facebookId,\n          googleId,\n          appleId,\n          suburb: suburbId,\n          street,\n          streetNumber,\n          userType,\n          userConfirmed: true,\n        });\n      }\n      let updateCode = await SuburbInvite.UpdateSuburbInviteUsed(\n        code,\n        save.userData._doc._id.toString()\n      );\n\n      res.status(\"200\").json({\n        success: true,\n        message: updateCode.message || \"Has sido registrado correctamente.\",\n      });\n    } else res.status(\"401\").json({ success: false, message: \"invalid token\" });\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserByType = async (req, res, next) => {\n  try {\n    const userType = userTypes[req.params.userType];\n    if (!userType) {\n      res.status(\"400\").json({ success: false, message: \"Bad request.\" });\n      return;\n    }\n    const result = await userService.getUserByType(userType);\n    res.status(\"200\").json({ success: true, data: result });\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserInfo = async (req, res, next) => {\n  try {\n    userService.getUserByToken(req.query.token).then(\n      (result) => {\n        res.status(\"200\").json(result);\n      },\n      (err) => {\n        res\n          .status(\"400\")\n          .json({ success: false, message: err.message || \"Bad request.\" });\n      }\n    );\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserById = async (req, res, next) => {\n  try {\n    let result = await userService.getUserById(req.query.id);\n    res.status(\"200\").json(result);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserFavs = async (req, res, next) => {\n  try {\n    let userFavs = await userService.getUserFavorites(req.query.userId);\n    res.status(\"200\").json(userFavs);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.addUserFavs = async (req, res, next) => {\n  try {\n    let { favs, userId } = req.body;\n    let userFavs = await userService.saveUserFavorites(userId, favs);\n    res.status(\"200\").json(userFavs);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.removeUserFavs = async (req, res, next) => {\n  try {\n    let { favs, userId } = req.body;\n    let userFavs = await userService.removeUserFavorites(userId, favs);\n    res.status(\"200\").json(userFavs);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.addUserPushToken = async (req, res, next) => {\n  try {\n    let { pushToken, userId } = req.body;\n    let pushTokens = await userService.addUserPushToken(userId, pushToken);\n    res.status(\"200\").json(pushTokens);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUsersByAddress = async (req, res) => {\n  try {\n    let { suburbId, street, streetNumber } = req.query;\n    let users = await userService.getUsersByAddress(\n      suburbId,\n      street,\n      streetNumber\n    );\n    res.status(\"200\").json(users);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.deleteUserInfo = async (req, res, next) => {\n  try {\n    let { userId } = req.body;\n    let removeUserInfo = await userService.deleteUserInfo(userId);\n    res.status(\"200\").json(removeUserInfo);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getSignedUserTerms = async (req, res) => {\n  try {\n    let { userId } = req.query;\n    let signedUserTerms = await userService.getSignedUserTerms(userId);\n    res.status(\"200\").json(signedUserTerms);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.isPasswordTemp = async (req, res) => {\n  try {\n    let { user, password } = req.query;\n    let buff = Buffer.from(password, \"base64\");\n    let decodedPassword = buff.toString(\"utf-8\");\n    let isPassTemp = await userService.isPasswordTemp(user, decodedPassword);\n    res.status(\"200\").json(isPassTemp);\n  } catch (err) {\n    res.status(\"400\").json({\n      success: false,\n      message: err.message || \"Bad request.\",\n    });\n  }\n};\n\nexports.updatePassword = async (req, res) => {\n  try {\n    let { userId, password, tempPassword } = req.body;\n    let buff = Buffer.from(password, \"base64\");\n    let decodedPassword = buff.toString(\"utf-8\");\n\n    let buff2 = Buffer.from(tempPassword, \"base64\");\n    let decodedTempPassword = buff2.toString(\"utf-8\");\n\n    let isPassTemp = await userService.updatePassword(\n      userId,\n      decodedPassword,\n      decodedTempPassword\n    );\n    res.status(\"200\").json(isPassTemp);\n  } catch (err) {\n    res.status(\"400\").json({\n      success: false,\n      message: err.message || \"Bad request.\",\n    });\n  }\n};\n\nexports.signUserTerms = async (req, res) => {\n  try {\n    let { userId, termsVersion } = req.body;\n    let update = await userService.signUserTerms(userId, termsVersion);\n    res.status(\"200\").json(update);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n","const User = require(\"../models/user\");\nconst userTypes = require(\"../constants/types\").userTypes;\nconst axios = require(\"axios\").default;\n\nconst openApi = [\n  \"/api/checkAuth\",\n  \"/api/auth/fbtoken\",\n  \"/api/auth/googletoken\",\n  \"/api/auth/appletoken\",\n  \"/api/saveGoogleUser\",\n  \"/api/saveFacebookUser\",\n  \"/api/saveAppleUser\",\n  \"/api/saveEmailUser\",\n  \"/api/generateTempPassword\",\n  \"/api/saveUserBySuburb\",\n  \"/api/signUp\",\n  \"/api/validateTokenPath\",\n  \"/api/cp/getCPInfo\",\n  \"/api/file/upload\",\n  \"/api/suburb/getInviteByCode\",\n  \"/api/notification/test\",\n  \"/api/suburb/getAllStreets\",\n  \"/api/suburb/updateConfig\", // remover esta api de esta lista\n  \"/api/suburb/getConfig\", //remover esta api de esta lista\n  \"/api/userInfo/getSignedUserTerms\", //remover\n  \"/api/userInfo/isPasswordTemp\",\n  \"/api/userInfo/signUserTerms\", //remove\n];\n\nconst protectedApi = [\"/api/suburb/approveReject\"];\n\nexports.Auth = class Auth {\n  validateToken(token) {\n    let user = User;\n\n    let def = user.isValidToken(token);\n    return new Promise(\n      (resolve, reject) => {\n        def.then(function (isValid) {\n          if (isValid) resolve({ valid: true, message: \"the token is valid\" });\n          else\n            resolve({\n              valid: false,\n              message: \"the token is not valid\",\n            });\n        });\n      },\n      (err) => reject({ valid: false, message: \"The token cannot be checked.\" })\n    );\n  }\n\n  validateAdminUser(token) {\n    let user = User;\n    let getPayload = user.getTokenPayload(token);\n    return new Promise(\n      (resolve, reject) => {\n        getPayload.then((payload) => {\n          if (payload.userType !== userTypes.admin)\n            reject({\n              valid: false,\n              message:\n                \"The user does not have permissions to execute this api.\",\n            });\n          else resolve({ valid: true, message: \"Ok\" });\n        });\n      },\n      (err) => {\n        console.log(err);\n        reject({\n          valid: false,\n          message: \"The user does not have permissions to execute this api.\",\n        });\n      }\n    );\n  }\n\n  isOpenApi(apiPath) {\n    return openApi.indexOf(apiPath) !== -1 ? true : false;\n  }\n\n  isProtectedApi(apiPath) {\n    return protectedApi.indexOf(apiPath) !== -1 ? true : false;\n  }\n\n  validateApiRequest(apiPath, token) {\n    if (this.isOpenApi(apiPath))\n      return new Promise((resolve) =>\n        resolve({ valid: true, message: \"the api is open.\" })\n      );\n    else if (this.isProtectedApi(apiPath)) {\n      return new Promise((resolve, reject) => {\n        this.validateAdminUser(token)\n          .then((res) => {\n            let validateToken = this.validateToken(token);\n            validateToken\n              .then((res) => resolve(res))\n              .catch((err) => reject(err));\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    } else {\n      return this.validateToken(token);\n    }\n  }\n};\n\nexports.validateRecaptcha = async (token) => {\n  try {\n    const secretKey = process.env.RECAPTCHA_SECRET;\n    const verificationURL = `https://www.google.com/recaptcha/api/siteverify?secret=${secretKey}&response=${token}`;\n    let response = await axios.post(\n      verificationURL,\n      {},\n      {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n        },\n      }\n    );\n\n    let captchaResult = response.data;\n    return captchaResult.success;\n  } catch (err) {\n    throw err;\n  }\n};\n","const User = require(\"../models/user\");\nconst menus = require(\"../constants/menusConfig\").menus;\n\n/**\n * Get menus by logged user\n */\nexports.getMenusByUser = async (userToken) => {\n  return new Promise((resolve, reject) => {\n    let getPayload = User.getTokenPayload(userToken);\n    getPayload.then(payload => {\n      const { userType, loginName } = payload;\n\n      let userMenus = menus.filter(menu => {\n        let types = menu.validUserTypes.filter(g => g.toLowerCase() === userType.toLowerCase());\n        return types.length > 0;\n      }).map(item => ({ name: item.name, path: item.path, visible: item.visible, icon: item.icon, order: item.order }));\n\n\n      resolve(userMenus);\n    }, errP => {\n      reject({ valid: false, message: 'The token is not allowed' });\n    });\n  });\n};","const PostalCode = require(\"../models/postalCode\");\n\n\nexports.getCPInfo = async (postalCode) => {\n    return new Promise((resolve, reject) => {\n        if (postalCode.length > 2) {\n            getInfo = PostalCode.getCPInfo(postalCode);\n            getInfo.then(cp => {\n                resolve(cp);\n            }, err => {\n                reject({ valid: false, message: 'No se pudo obtener la informaion del codigo postal.' });\n            });\n        }\n        else {\n            reject({ valid: false, message: 'La longitud del codigo postal no es valida.' });\n        }\n    });\n}","const Expo = require(\"expo-server-sdk\").Expo;\n\nlet expo = new Expo();\n\nconst getMessagesBatches = (pushTokens, message) => {\n  let messages = [];\n  pushTokens.forEach((token) => {\n    if (!Expo.isExpoPushToken(token)) {\n      console.error(`Push token ${token} is not a valid push token`);\n      //continue;\n    }\n\n    messages = [...messages, { ...message, to: token }];\n  });\n  return expo.chunkPushNotifications(messages);\n};\n\nconst sendExpoNotification = async (chunks) => {\n  //(async () => {\n  // Send the chunks to the Expo push notification service. There are\n  // different strategies you could use. A simple one is to send one chunk at a\n  // time, which nicely spreads the load out over time:\n  let tickets = [];\n  for (let chunk of chunks) {\n    try {\n      let ticketChunk = await expo.sendPushNotificationsAsync(chunk);\n      console.log(ticketChunk);\n      tickets.push(...ticketChunk);\n      // NOTE: If a ticket contains an error code in ticket.details.error, you\n      // must handle it appropriately. The error codes are listed in the Expo\n      // documentation:\n      // https://docs.expo.io/push-notifications/sending-notifications/#individual-errors\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  return tickets;\n  //})();\n};\n\nconst checkTickets = async (tickets) => {\n  // Later, after the Expo push notification service has delivered the\n  // notifications to Apple or Google (usually quickly, but allow the the service\n  // up to 30 minutes when under load), a \"receipt\" for each notification is\n  // created. The receipts will be available for at least a day; stale receipts\n  // are deleted.\n  //\n  // The ID of each receipt is sent back in the response \"ticket\" for each\n  // notification. In summary, sending a notification produces a ticket, which\n  // contains a receipt ID you later use to get the receipt.\n  //\n  // The receipts may contain error codes to which you must respond. In\n  // particular, Apple or Google may block apps that continue to send\n  // notifications to devices that have blocked notifications or have uninstalled\n  // your app. Expo does not control this policy and sends back the feedback from\n  // Apple and Google so you can handle it appropriately.\n  let receiptIds = [];\n  for (let ticket of tickets) {\n    // NOTE: Not all tickets have IDs; for example, tickets for notifications\n    // that could not be enqueued will have error information and no receipt ID.\n    if (ticket.id) {\n      receiptIds.push(ticket.id);\n    }\n  }\n\n  let receiptIdChunks = expo.chunkPushNotificationReceiptIds(receiptIds);\n  //(async () => {\n  // Like sending notifications, there are different strategies you could use\n  // to retrieve batches of receipts from the Expo service.\n  for (let chunk of receiptIdChunks) {\n    try {\n      let receipts = await expo.getPushNotificationReceiptsAsync(chunk);\n      console.log(receipts);\n\n      // The receipts specify whether Apple or Google successfully received the\n      // notification and information about an error, if one occurred.\n      for (let receiptId in receipts) {\n        let { status, message, details } = receipts[receiptId];\n        if (status === \"ok\") {\n          //continue;\n        } else if (status === \"error\") {\n          console.error(\n            `There was an error sending a notification: ${message}`\n          );\n          if (details && details.error) {\n            // The error codes are listed in the Expo documentation:\n            // https://docs.expo.io/push-notifications/sending-notifications/#individual-errors\n            // You must handle the errors appropriately.\n            console.error(`The error code is ${details.error}`);\n          }\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  //})();\n};\n\nconst sendPushNotification = async (pushTokens, message) => {\n  try {\n    let chunks = getMessagesBatches(pushTokens, message);\n    let tickets = await sendExpoNotification(chunks);\n    await checkTickets(tickets);\n  } catch (ex) {\n    console.log(\"notification error details:\", ex);\n    throw ex;\n  }\n};\n\nmodule.exports = {\n  sendPushNotification,\n};\n","const Suburb = require(\"../models/suburb\");\nconst suburbStatus = require(\"../constants/types\").suburbStatus;\nconst SuburbInvite = require(\"../models/suburbInvite\");\nconst User = require(\"../models/user\");\nconst SuburbConfig = require(\"../models/suburbConfig\");\nconst SuburbStreet = require(\"../models/suburbStreet\");\nconst ObjectId = require(\"mongoose\").Types.ObjectId;\n\nconst CryptoJS = require(\"crypto-js\");\n\nvar pjson = require(\"../../package.json\");\nconst { Mongoose } = require(\"mongoose\");\n\nconst getSuburbStatus = (statusName) => {\n  let status = suburbStatus.filter((st) => st.status === statusName);\n  return status[0];\n};\n\nconst encryption = (data) => {\n  if (!data) return \"\";\n  return CryptoJS.AES.encrypt(data, pjson.cryptoKey).toString();\n};\n\nconst decryption = (data) => {\n  if (!data) return \"\";\n  var bytes = CryptoJS.AES.decrypt(data, pjson.cryptoKey);\n  return bytes.toString(CryptoJS.enc.Utf8);\n};\n\nconst saveSuburb = (suburbObj) => {\n  return new Promise((resolve, reject) => {\n    Suburb.SaveSuburb(suburbObj).then((sub, err) => {\n      if (!err)\n        resolve({\n          success: true,\n          message: \"La colonia fue guardada correctamente.\",\n          id: sub.id,\n        });\n      else\n        reject({\n          success: false,\n          message:\n            err.message || \"Ocurrio un error al intentar guardar la colonia.\",\n        });\n    });\n  });\n};\n\nconst suburbAddStatus = (id, status) => {\n  return new Promise((resolve, reject) => {\n    Suburb.UpdateStatus(id, status).then((sub, err) => {\n      if (!err)\n        resolve({\n          success: true,\n          message: \"El status de la colonia fue actualizado correctamente.\",\n        });\n      else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar actualizar el estatus de la colonia.\",\n        });\n    });\n  });\n};\n\nconst suburbAddStatusByName = (name, postalCode, status) => {\n  return new Promise((resolve, reject) => {\n    Suburb.UpdateStatusByName(name, postalCode, status).then((sub, err) => {\n      if (!err)\n        resolve({\n          success: true,\n          message: \"El status de la colonia fue actualizado correctamente.\",\n        });\n      else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar actualizar el estatus de la colonia.\",\n        });\n    });\n  });\n};\n\nconst getSuburbByAdminUser = (userId) => {\n  return new Promise((resolve, reject) => {\n    Suburb.GetSuburbByUserId(userId).then((sub, err) => {\n      if (!err) resolve(sub);\n      else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar obtener la colonia por usuario administrador.\",\n        });\n    });\n  });\n};\n\nconst getSuburbById = (suburbId) => {\n  return new Promise((resolve, reject) => {\n    Suburb.GetSuburb(suburbId)\n      .then((sub, err) => {\n        if (!err) resolve(sub);\n        else\n          reject({\n            success: false,\n            message:\n              err.message || \"Ocurrio un error al intentar obtener la colonia.\",\n          });\n      })\n      .catch((err) => reject(err));\n  });\n};\n\nconst addSuburbInvite = (suburbId, name, street, streetNumber, userType) => {\n  return new Promise((resolve, reject) => {\n    let _code =\n      Math.random().toString(36).substring(2, 4).toUpperCase() +\n      Math.random().toString(36).substring(2, 4).toUpperCase();\n    console.log(encryption(street));\n    SuburbInvite.SaveSuburbInvite({\n      code: _code,\n      suburbId,\n      name,\n      street: encryption(street),\n      streetNumber: encryption(streetNumber),\n      userType,\n    }).then((subInv, err) => {\n      if (!err) {\n        Suburb.AddSuburbInvite(suburbId, subInv._id.toString()).then(\n          (sub, err) => {\n            if (!err) resolve(subInv);\n            else\n              reject({\n                success: false,\n                message:\n                  err.message ||\n                  \"Ocurrio un error al intentar agregar una invitacion a usuario\",\n              });\n          }\n        );\n      } else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar agregar una invitacion a usuario\",\n        });\n    });\n  });\n};\n\nconst getSuburbInvite = (code) => {\n  return new Promise((resolve, reject) => {\n    SuburbInvite.GetInviteByCode(code)\n      .then((subInvite, err) => {\n        if (!err) {\n          Suburb.GetSuburbBasicInfo(subInvite.suburbId.toString()).then(\n            (suburb, err) => {\n              if (!err) {\n                const { street, streetNumber, ...props } = subInvite._doc;\n                const result = {\n                  suburb: {\n                    ...suburb,\n                  },\n                  invite: {\n                    street: decryption(street),\n                    streetNumber: decryption(streetNumber),\n                    ...props,\n                  },\n                };\n                resolve(result);\n              } else {\n                reject({\n                  success: false,\n                  message:\n                    err.message ||\n                    \"Ocurrio un error al intentar obtener la invitación\",\n                });\n              }\n            }\n          );\n        } else\n          reject({\n            success: false,\n            message:\n              err.message ||\n              \"Ocurrio un error al intentar obtener la invitación\",\n          });\n      })\n      .catch((err) => {\n        reject({\n          sucess: false,\n          message:\n            err.message ||\n            \"Ocurrion un error al intentar obtener la invitación\",\n        });\n      });\n  });\n};\n\nconst saveSuburbConfig = async (suburbId, config) => {\n  try {\n    let suburbData = await Suburb.GetSuburb(suburbId);\n    if (!ObjectId.isValid(suburbData.config)) {\n      let saveConfig = await SuburbConfig.SaveConfig(config);\n      await Suburb.SaveSuburbConfig(suburbId, saveConfig._id);\n      return {\n        success: true,\n        message: \"la configuracion fue agregada con exito.\",\n        id: saveConfig.id,\n      };\n    } else {\n      let updateConfig = await SuburbConfig.UpdateConfig(\n        suburbData.config.toString(),\n        config\n      );\n      return {\n        success: true,\n        message: \"la configuracion fue actualizada con exito.\",\n      };\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getSuburbConfig = async (suburbId) => {\n  try {\n    return await Suburb.GetSuburbConfig(suburbId);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst saveSuburbStreet = async (suburbId, street) => {\n  try {\n    let suburbData = await Suburb.GetSuburbStreets(suburbId);\n    let selectedStreet = suburbData.streets\n      ? suburbData.streets.filter(\n          (st) => st.street.toLowerCase() === street.street.toLowerCase()\n        )\n      : [];\n    if (selectedStreet.length === 0) {\n      let saveStreet = await SuburbStreet.SaveStreet(street);\n      await Suburb.SaveSuburbStreet(suburbId, saveStreet._id);\n      return {\n        success: true,\n        message: \"la calle fue agregada con exito.\",\n        id: saveStreet.id,\n      };\n    } else {\n      let updateStreet = await SuburbStreet.UpdateStreet(\n        selectedStreet[0]._id,\n        street\n      );\n      return { success: true, message: \"la calle fue actualizada con exito.\" };\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getSuburbStreets = async (suburbId) => {\n  try {\n    return await Suburb.GetSuburbStreets(suburbId);\n  } catch (err) {\n    throw err;\n  }\n};\n\nmodule.exports = {\n  saveSuburb,\n  suburbAddStatus,\n  suburbAddStatusByName,\n  getSuburbByAdminUser,\n  getSuburbById,\n  getSuburbStatus,\n  addSuburbInvite,\n  getSuburbInvite,\n  saveSuburbConfig,\n  getSuburbConfig,\n  saveSuburbStreet,\n  getSuburbStreets,\n};\n","const User = require(\"../models/user\");\nconst request = require(\"request\");\nconst GlobalConfig = require(\"../models/globalConfig\");\nconst userTypes = require(\"../constants/types\").userTypes;\n\nconst saveUser = (userObj) => {\n  return new Promise((resolve, reject) => {\n    User.getLogin(userObj.loginName).then(\n      (login) => {\n        if (login) {\n          reject({\n            success: false,\n            message: \"El usuario existe actualmente en la base de datos.\",\n          });\n        } else {\n          //create the user\n          User.saveUser(\n            userObj.userType\n              ? userObj\n              : { ...userObj, userType: userTypes.guest }\n          ).then(\n            (usr, err) => {\n              //check if there is an error\n              if (!err)\n                resolve({\n                  success: true,\n                  message: \"Has sido registrado correctamente.\",\n                  userData: { ...usr },\n                });\n              else\n                reject({\n                  success: false,\n                  message: err.message || \"No se pudo registrar el usuario.\",\n                });\n            },\n            (err) => {\n              reject({ success: false, message: err.message });\n            }\n          );\n        }\n      },\n      (err) => {\n        reject({\n          success: false,\n          message:\n            err.message || \"Ocurrio un error al tratar de guardar el usuario.\",\n        });\n      }\n    );\n  });\n};\n\nconst updateUser = async (userObj) => {\n  return new Promise((resolve, reject) => {\n    User.updateUser(userObj).then(\n      (usr, err) => {\n        if (!err)\n          resolve({\n            success: true,\n            message: \"Ha sido actualizado correctamente.\",\n          });\n        else\n          reject({\n            success: false,\n            message: err.message || \"No se pudo actualizar el usuario.\",\n          });\n      },\n      (err) => {\n        reject({ success: false, message: err.message });\n      }\n    );\n  });\n};\n\nconst updateUserPicture = async (userId, photoUrl) => {\n  try {\n    return await User.updateUserPicture(userId, photoUrl);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst validateRecaptcha = async (token) => {\n  const secretKey = process.env.RECAPTCHA_SECRET;\n  const verificationURL = `https://www.google.com/recaptcha/api/siteverify?secret=${secretKey}&response=${token}`;\n\n  return new Promise((resolve, reject) => {\n    request.post(verificationURL, (error, resG, body) => {\n      if (error)\n        reject({\n          success: false,\n          message:\n            \"Por favor intenta de nuevo (no es posible validar recaptcha).\",\n        });\n      let status = JSON.parse(body);\n      if (!status.success)\n        reject({ success: false, message: \"Por favor intenta de nuevo.\" });\n      else if (status.score <= 0.5)\n        reject({\n          success: false,\n          message: \"Por favor intenta de nuevo (score demasiado bajo).\",\n        });\n      else resolve({ success: true, message: \"recaptcha valido.\" });\n    });\n  });\n};\n\nconst saveUserWithPassword = async (userObj) => {\n  const { password } = userObj;\n  return new Promise((resolve, reject) => {\n    User.encryptPassword(password).then(\n      (resEncrypt) => {\n        let encryptedPassword = resEncrypt.hash;\n        userObj.password = encryptedPassword;\n        saveUser(userObj).then(\n          (result) => {\n            resolve(result);\n          },\n          (err) => {\n            reject(err);\n          }\n        );\n      },\n      (err) => {\n        reject({ success: false, message: err.message || \"Bad request.\" });\n      }\n    );\n  });\n};\n\nconst getUserByType = async (userType) => {\n  try {\n    return await User.find({\n      userType: userType,\n    });\n  } catch (ex) {\n    return ex;\n  }\n};\n\nconst getUserByToken = async (token) => {\n  try {\n    let payload = await User.getTokenPayload(token);\n    return await User.findById(payload.userId);\n  } catch (ex) {\n    return ex;\n  }\n};\n\nconst getUserById = async (id) => {\n  try {\n    return await User.getUserById(id);\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst getUserFavorites = async (userId) => {\n  try {\n    let payload = await User.getUserFavs(userId);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst saveUserFavorites = async (userId, favs) => {\n  try {\n    let payload = await User.addUserFavs(userId, favs);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst removeUserFavorites = async (userId, favs) => {\n  try {\n    let payload = await User.removeUserFavs(userId, favs);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst addUserPushToken = async (userId, pushToken) => {\n  try {\n    let payload = await User.addUserPushToken(userId, pushToken);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst getUsersBySuburb = async (suburbId) => {\n  try {\n    let users = await User.getUsersBySuburb(suburbId);\n    return users;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getUsersBySuburbStreet = async (suburbId, street) => {\n  try {\n    let users = await User.getUsersBySuburbStreet(suburbId, street);\n    return users;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getUsersByAddress = async (suburbId, street, streetNumber) => {\n  try {\n    let users = await User.getUsersByAddress(suburbId, street, streetNumber);\n    return users;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst isPasswordTemp = async (user, password) => {\n  try {\n    let isPasTemp = await User.isPasswordTemp(user, password);\n    return isPasTemp;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst updatePassword = async (user, password, tempPassword) => {\n  try {\n    let updatePass = await User.updatePassword(user, password, tempPassword);\n    return updatePass;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst deleteUserInfo = async (userId) => {\n  try {\n    let payload = await User.deleteUserInfo(userId);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst getSignedUserTerms = async (userId) => {\n  try {\n    let user = await User.getUserLeanById(userId);\n    let terms = await GlobalConfig.GetTermsAndCons();\n    let userTerms = user.signedTerms || [];\n    //logic to check if the latest term is signed\n    let latestTerms = terms\n      .map((t) => parseFloat(t))\n      .reduce((i, n) => (i > n ? i : n));\n    return {\n      signed: userTerms.indexOf(latestTerms) !== -1,\n      termsVersion: latestTerms,\n    };\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst signUserTerms = async (userId, termsVersion) => {\n  try {\n    let updateTerms = await User.updateUserTerms(userId, termsVersion);\n    return updateTerms;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst updateTempPassword = async (email) => {\n  try {\n    let updatePass = await User.updateTempPassword(email);\n\n    return updatePass;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nmodule.exports = {\n  saveUser,\n  validateRecaptcha,\n  saveUserWithPassword,\n  getUserByType,\n  getUserByToken,\n  updateUser,\n  getUserFavorites,\n  saveUserFavorites,\n  removeUserFavorites,\n  getUserById,\n  addUserPushToken,\n  getUsersBySuburb,\n  getUsersBySuburbStreet,\n  getUsersByAddress,\n  updateUserPicture,\n  deleteUserInfo,\n  getSignedUserTerms,\n  signUserTerms,\n  updateTempPassword,\n  isPasswordTemp,\n  updatePassword,\n};\n","const User = require(\"../models/user\");\nconst permissions = require(\"../constants/menusConfig\").menus;\n\n\n\nconst validateWithPayload = (path, payload) => {\n    let valid =  { valid: false, message: 'la pantalla no es valida para tu usuario.' };\n    if(!payload || !payload.userType)\n        return valid;\n\n    const { userType } = payload;\n    let validPath = permissions.filter(p => {\n        let types = p.validUserTypes.filter(g => g.toLowerCase() === userType.toLowerCase());\n        return types.length > 0 && p.path.toLowerCase() === path.toLocaleLowerCase();\n\n    });\n\n    if (validPath.length > 0)\n        valid = { valid: true, message: 'ok' };\n    return valid;\n};\n\n\nexports.permissionValid = (path, jwt) => {\n    return new Promise((resolve, reject) => {\n        let user = User;\n        let isValid = user.isValidToken(jwt);\n        isValid.then(res => {\n            let getPayload = user.getTokenPayload(jwt);\n            getPayload.then(payload => {\n                let valid = validateWithPayload(path, payload);\n                if (valid.valid)\n                    resolve(valid);\n                else\n                    reject(valid);\n            }, errP => {\n                reject({ valid: false, message: 'los datos de la sesión no son validos.' });\n            });\n        }, err => {\n            reject({ valid: false, message: 'el token de la sesión no es valido.' });\n        });\n    });\n}","const Auth = require(\"../logic/auth\").Auth;\n\nconst validApiRequest = (apiPath, token) => {\n  return new Promise((resolve, reject) => {\n    let auth = new Auth();\n    auth.validateApiRequest(apiPath, token).then(\n      (res) => {\n        resolve(res);\n      },\n      (err) =>\n        reject({\n          valid: false,\n          message: err.message ? err.message : `Error: ${JSON.stringify(err)}`,\n        })\n    );\n  });\n};\n\nexports.checkApiAuth = (req, res, next) => {\n  console.log(`validando si el request esta autenticado...`);\n  //check request headers over here to know if the request is authenticated\n  let apiPath = req.baseUrl,\n    token = req.headers[\"authorization\"];\n\n  validApiRequest(apiPath, token).then(\n    (result) => {\n      if (result.valid) next();\n      else\n        res\n          .status(\"401\")\n          .json({ success: false, error: \"Unauthorized request.\" });\n    },\n    (err) =>\n      res.status(\"401\").json({\n        success: false,\n        error: err.message || \"An error occurs while validating the request.\",\n      })\n  );\n};\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst GlobalConfigSchema = new mongoose.Schema({\n  termsAndConditions: [mongoose.Decimal128],\n});\n\nGlobalConfigSchema.statics = {\n  SaveInitialConfig: function () {\n    let terms = new this({ termsAndConditions: [1.0] });\n    return terms.save();\n  },\n  GetTermsAndCons: function () {\n    return new Promise((resolve, reject) => {\n      this.findOne({})\n        .lean()\n        .exec((err, result) => {\n          if (err) reject(err);\n          if (!result) {\n            this.SaveInitialConfig();\n          }\n          let terms = result ? result.termsAndConditions : [1.0];\n          resolve(terms || [1.0]);\n        });\n    });\n  },\n};\n\nconst GlobalConfig = mongoose.model(\"GlobalConfig\", GlobalConfigSchema);\n\nmodule.exports = GlobalConfig;\n","const mongoose = require(\"mongoose\");\nconst Menu = require(\"./menu\");\nconst Role = require(\"./role\");\nconst User = require(\"./user\");\nconst SuburbInvite = require(\"./suburbInvite\");\nconst SuburbConfig = require(\"./suburbConfig\");\nconst SuburbStreet = require(\"./suburbStreet\");\nconst PostalCode = require(\"./postalCode\");\nconst GlobalConfig = require(\"./globalConfig\");\n\nconst models = {\n  Menu,\n  Role,\n  User,\n  PostalCode,\n  SuburbInvite,\n  SuburbConfig,\n  SuburbStreet,\n  GlobalConfig,\n};\n\nconst connectDb = () => {\n  //setup the mongo connection\n  let mConn = mongoose.connect(process.env.DB_CONNECTION, {\n    useNewUrlParser: true,\n  });\n\n  mongoose.connection.on(\n    \"error\",\n    console.error.bind(console, \"Mongo db connection error: \")\n  );\n  return mConn;\n};\n\nmodule.exports = { connectDb, models };\n","const moment = require('moment');\nconst mongoose = require('mongoose');\n//const Base = require('./baseModel');\n\nconst MenuSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        required: 'Enter the menu name'\n    },\n    link: {\n        type: String,\n        required: 'Enter the menu link'\n    },\n    parentId: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'Menu'\n    },\n    position: {\n        type: Number,\n        default: 1\n    },\n    icon: {\n        type: String\n    },\n    visible: {\n        type: Boolean,\n        default: true\n    },\n    active: {\n        type: Boolean,\n        default: true\n    },\n    type: {\n        type: String\n    },\n    transtime: {\n        type: Date,\n        default: moment.utc()\n    }\n});\n\n\nMenuSchema.statics = {\n    getMenuById: function (menuId) { //, projectId){\n        return this.findOne({\n            _id: menuId //, \n            //project: projectId\n        });\n    },\n    updateMenu: function (objMenu) {\n        return this.update({\n            _id: objMenu._id\n        }, {\n                $set: {\n                    'name': objMenu.name,\n                    'link': objMenu.link,\n                    'parentId': objMenu.parentId,\n                    'position': objMenu.position,\n                    'icon': objMenu.position,\n                    'visible': objMenu.visible,\n                    'active': objMenu.active,\n                    'type': objMenu.active,\n                    'transtime': moment.utc()\n                }\n            });\n    },\n    deleteMenu: function (menuId) {\n        return this.deleteMany({\n            _id: menuId\n        });\n    },\n    getChildMenus: function (menuId) {\n        return this.find({\n            parentId: menuId\n        });\n    },\n    getChildMenusRecursively: function (parents) {\n        let _this = this;\n        let getThisLevelChilds = this.getChildMenus(parents);\n        let elements = [];\n        return new Promise((resolve, reject) => {\n            getThisLevelChilds.then((childs) => {\n                if (childs.length > 0) {\n                    elements = JSON.parse(JSON.stringify(childs)).map((child) => {\n                        return child._id;\n                    });\n                    let getInnerChilds = _this.getChildMenusRecursively(elements);\n                    getInnerChilds.then((result) => {\n                        resolve(elements.concat(result));\n                    });\n                } else\n                    resolve(elements);\n            }, (err) => {\n                reject(err);\n            })\n        });\n    },\n    getParentMenusRecursively: function (menuId) {\n        let _this = this;\n        let getThisLevel = this.getMenuById(menuId);\n        let elements = [];\n        return new Promise((resolve, reject) => {\n            getThisLevel.then((menu) => {\n                menu = JSON.parse(JSON.stringify(menu))\n                if (menu && menu.parentId) {\n                    elements.push(menu.parentId);\n                    let getMoreParents = _this.getParentMenusRecursively(menu.parentId);\n                    getMoreParents.then((result) =>\n                        resolve(elements.concat(result)));\n                } else\n                    resolve(elements);\n            }, err => reject(err));\n        });\n    },\n    getMenus: function (menus) {\n        return this.find({ _id: menus });\n    }\n}\n\n\n\n\nconst Menu = mongoose.model(\"Menu\", MenuSchema);\n\nmodule.exports = Menu;","const mongoose = require('mongoose');\n\nconst PostalCodeSchema = new mongoose.Schema({\n    d_codigo: {\n        type: String\n    },\n    d_asenta: {\n        type: String\n    },\n    d_tipo_asenta: {\n        type: String\n    },\n    D_mnpio: {\n        type: String\n    },\n    d_estado: {\n        type: String\n    },\n    d_ciudad: {\n        type: String\n    },\n    d_CP: {\n        type: String\n    },\n    c_estado: {\n        type: String\n    },\n    c_oficina: {\n        type: String\n    },\n    c_CP: {\n        type: String\n    },\n    c_tipo_asenta: {\n        type: String\n    },\n    c_mnpio: {\n        type: String\n    },\n    id_asenta_cpcons: {\n        type: String\n    },\n    d_zona: {\n        type: String\n    },\n    c_cve_ciudad: {\n        type: String\n    }\n});\n\nPostalCodeSchema.statics = {\n    getCPInfo: function (cp) {\n        let regCp = new RegExp(cp)\n        return this.find({ d_codigo: regCp }).limit(100);\n    }\n};\n\nconst PostalCode = mongoose.model(\"PostalCode\", PostalCodeSchema);\n\nmodule.exports = PostalCode;","const moment = require('moment');\nconst mongoose = require(\"mongoose\");\n\nconst RoleSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        required: 'Enter the name of the role'\n    },\n    description: {\n        type: String,\n        required: 'Enter the description of the role'\n    },\n    siteAdministration: {\n        type: Boolean,\n        default: false\n    },\n    sysAdministrator: {\n        type: Boolean,\n        default: false\n    },\n    active: {\n        type: Boolean,\n        default: true\n    },\n    menus: [{\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'Menu'\n    }],\n    transtime: {\n        type: Date,\n        default: moment.utc()\n    }\n});\n\nRoleSchema.statics = {\n    deleteRole: function (roleId) {\n        return this.deleteMany({\n            _id: roleId\n        });\n    },\n    setRoleMenu: function (roleId, menus) {\n        if (!Array.isArray(menus)) menus = [menus];\n        return this.update({\n            _id: roleId\n        }, {\n                $addToSet: {\n                    menus: {\n                        $each: menus\n                    }\n                }\n            }, {\n                multi: true\n            });\n    },\n    deleteRoleMenu: function (roles, menus) {\n        if (!Array.isArray(menus)) menus = [menus];\n        if (!Array.isArray(roles)) roles = [roles];\n\n        return this.update({\n            _id: {\n                $in: roles\n            }\n        }, {\n                $pullAll: {\n                    menus: menus\n                }\n            }, {\n                multi: true\n            });\n    },\n    getRoleMenus: function (roleId) {\n        return new Promise((resolve, reject) => {\n            this.find({\n                _id: roleId\n            }).populate('menus').exec((err, result) => {\n                if (err) reject(err);\n                resolve(result);\n            });\n        });\n    }\n};\n\nconst Role = mongoose.model(\"Role\", RoleSchema);\n\nmodule.exports = Role;","const mongoose = require(\"mongoose\");\n\nconst DropdownSchema = new mongoose.Schema({\n  value: {\n    type: String,\n  },\n  text: {\n    type: String,\n  },\n});\n\nmodule.exports = DropdownSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst DropdownSchema = require(\"./dropdownSchema\");\nconst FieldSchema = new mongoose.Schema({\n  field: {\n    type: String,\n  },\n  type: {\n    type: String,\n  },\n  data: [DropdownSchema],\n  label: {\n    type: String,\n  },\n  mandatory: {\n    type: Boolean,\n    default: false,\n  },\n  mandatoryMessage: {\n    type: String,\n  },\n});\n\nmodule.exports = FieldSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst FieldSchema = require(\"./fieldSchema\");\n\nconst ScreenSchema = new mongoose.Schema({\n  name: { type: String },\n  title: { type: String },\n  fields: [FieldSchema],\n});\n\nmodule.exports = ScreenSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst GuestSchema = new mongoose.Schema({\n  name: {\n    type: String,\n  },\n  vehicle: {\n    type: String,\n  },\n  subject: {\n    type: String,\n  },\n  isService: {\n    type: Boolean,\n    default: false,\n  },\n  plates: {\n    type: String,\n  },\n  additionalInformation: {\n    type: String,\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  arriveOn: {\n    type: Date,\n  },\n  leaveOn: {\n    type: Date,\n  },\n  count: {\n    type: Number,\n    default: 0,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nmodule.exports = GuestSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst PushTokenSchema = new mongoose.Schema({\n  token: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nmodule.exports = PushTokenSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst SuburbFileSchema = new mongoose.Schema({\n  fileName: {\n    type: String,\n  },\n  originalName: {\n    type: String,\n  },\n  actionType: {\n    type: String,\n  },\n  mimetype: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nmodule.exports = SuburbFileSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst SuburbStatusSchema = new mongoose.Schema({\n  status: {\n    type: String,\n  },\n  description: {\n    type: String,\n  },\n  details: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\n//const SuburbStatus = mongoose.model(\"SuburbStatus\", SuburbStatusSchema);\n\nmodule.exports = SuburbStatusSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst SuburbStatusSchema = require(\"./schemas/suburbStatusSchema\");\nconst SuburbFileSchema = require(\"./schemas/suburbFileSchema\");\nconst suburbConfig = require(\"./suburbConfig\");\nconst suburbStreet = require(\"./suburbStreet\");\n\nconst SuburbSchema = new mongoose.Schema({\n  name: {\n    type: String,\n  },\n  location: {\n    type: String,\n  },\n  postalCode: {\n    type: Number,\n  },\n  active: {\n    type: Boolean,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n  userAdmins: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n  ],\n  /*\n        estatus validos:\n        activacionPendiente,\n        activacionRechazada\n        activadoBasico,\n        activadoPlus\n    */\n  status: [SuburbStatusSchema],\n  files: [SuburbFileSchema],\n  suburbInvites: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"SuburbInvite\",\n    },\n  ],\n  config: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"SuburbConfig\",\n  },\n  streets: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"SuburbStreet\",\n    },\n  ]\n});\n\nSuburbSchema.statics = {\n  SaveSuburb: function (suburbObj) {\n    let suburb = new this(suburbObj);\n    return suburb.save();\n  },\n  UpdateStatus: function (id, status) {\n    if (!Array.isArray(status)) status = [status];\n    return this.updateOne(\n      { _id: id },\n      {\n        $addToSet: {\n          status: {\n            $each: status,\n          },\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  UpdateStatusByName: function (name, postalCode) {\n    if (!Array.isArray(status)) status = [status];\n    return this.updateOne(\n      { name: name, postalCode: postalCode },\n      {\n        $addToSet: {\n          status: {\n            $each: status,\n          },\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  AddSuburbInvite: function (id, userInviteId) {\n    if (!Array.isArray(userInviteId)) userInviteId = [userInviteId];\n    return this.updateOne(\n      { _id: id },\n      {\n        $addToSet: {\n          suburbInvites: {\n            $each: userInviteId,\n          },\n        },\n      },\n      { multi: true }\n    );\n  },\n  GetSuburb: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"userAdmins\", \"User\")\n        .populate(\"suburbInvites\", \"SuburbInvite\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          let {\n            name,\n            location,\n            postalCode,\n            active,\n            transtime,\n            status,\n            suburbInvites,\n            config,\n          } = result;\n          resolve({\n            name,\n            location,\n            postalCode,\n            active,\n            transtime,\n            status,\n            suburbInvites,\n            config,\n          });\n        });\n    });\n  },\n  GetSuburbBasicInfo: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        let { name, location, postalCode, active, transtime } = result;\n        resolve({\n          name,\n          location,\n          postalCode,\n          active,\n          transtime,\n        });\n      });\n    });\n  },\n  GetSuburbByName: function (postalCode, name) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        postalCode: postalCode,\n        name: name,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result);\n      });\n    });\n  },\n  GetSuburbByUserId: function (userId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ userAdmins: mongoose.Types.ObjectId(userId) }).exec(\n        (err, result) => {\n          if (err) reject(err);\n          resolve(result);\n        }\n      );\n    });\n  },\n  SaveSuburbConfig: function (id, configId) {\n    return this.updateOne(\n      {\n        _id: id,\n      },\n      {\n        $set: { config: configId },\n      }\n    );\n  },\n  GetSuburbConfig: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"config\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          let { config } = result;\n          if (config) resolve({ ...config._doc });\n          else resolve({});\n        });\n    });\n  },\n  SaveSuburbStreet: function (id, streetId) {\n    if (!Array.isArray(streetId)) streetId = [streetId];\n    return this.updateOne(\n      { _id: id },\n      { $addToSet: { streets: { $each: streetId } } },\n      { multi: true }\n    );\n  },\n  GetSuburbStreets: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"streets\")\n        .lean()\n        .exec((err, result) => {\n          if (err) reject(err);\n          if (result) {\n            let { streets } = result;\n            if (streets) resolve({ streets: [...streets] });\n            else resolve({ streets: [] });\n          } else resolve({ streets: [] });\n        });\n    });\n  },\n};\n\nconst Suburb = mongoose.model(\"Suburb\", SuburbSchema);\n\nmodule.exports = Suburb;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst ScreenSchema = require(\"./schemas/config/screenSchema\");\n\nconst SuburbConfigSchema = new mongoose.Schema({\n  imageUrl: { type: String },\n  screens: [ScreenSchema],\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nSuburbConfigSchema.statics = {\n  SaveConfig: function (suburbConfig) {\n    let config = new this(suburbConfig);\n    return config.save();\n  },\n  UpdateConfig: function (id, config) {\n    return this.updateOne({ _id: id }, { ...config });\n  },\n};\n\nconst SuburbConfig = mongoose.model(\"SuburbConfig\", SuburbConfigSchema);\n\nmodule.exports = SuburbConfig;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst SuburbInviteSchema = new mongoose.Schema({\n  code: {\n    type: String,\n  },\n  name: {\n    type: String,\n  },\n  street: {\n    type: String,\n  },\n  streetNumber: {\n    type: String,\n  },\n  suburbId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"Suburb\",\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  usedBy: {\n    type: String,\n  },\n  updatedTranstime: {\n    type: Date,\n  },\n  userType: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nSuburbInviteSchema.statics = {\n  SaveSuburbInvite: function (userInviteObj) {\n    let userInvite = new this(userInviteObj);\n    return userInvite.save();\n  },\n  UpdateSuburbInviteUsed: function (code, usedBy) {\n    return this.updateOne(\n      { $and: [{ code: code }, { active: true }] },\n      {\n        $set: {\n          usedBy: usedBy,\n          active: false,\n          updatedTranstime: moment.utc(),\n        },\n      }\n    );\n  },\n  GetInviteByCode: function (code) {\n    return new Promise((resolve, reject) => {\n      return this.findOne({ code: code, active: true }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result)\n          reject({ success: false, message: \"Cannot find the invite code.\" });\n        resolve(result);\n      });\n    });\n  },\n};\n\nconst SuburbInvite = mongoose.model(\"SuburbInvite\", SuburbInviteSchema);\n\nmodule.exports = SuburbInvite;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst { getUsersBySuburbStreet } = require(\"../logic/userService\");\n\nconst suburbStreetSchema = new mongoose.Schema({\n  street: {\n    type: String,\n  },\n  numbers: [{ type: String }],\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nsuburbStreetSchema.statics = {\n  SaveStreet: function (suburbStreet) {\n    let config = new this(suburbStreet);\n    return config.save();\n  },\n  UpdateStreet: function (id, street) {\n    return this.updateOne({ _id: id }, { ...street });\n  },\n};\n\nconst SuburbStreet = mongoose.model(\"SuburbStreet\", suburbStreetSchema);\n\nmodule.exports = SuburbStreet;\n","const moment = require(\"moment\");\nconst bcrypt = require(\"bcryptjs\");\nconst jwt = require(\"jsonwebtoken\");\nconst mongoose = require(\"mongoose\");\nconst base64 = require(\"base-64\");\nconst GuestSchema = require(\"./schemas/guestSchema\");\nconst PushTokenSchema = require(\"./schemas/pushTokenSchema\");\n\nconst UserSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: \"Ingresa el nombre\",\n  },\n  lastName: {\n    type: String,\n  },\n  password: {\n    type: String,\n  },\n  tempPassword: {\n    type: String,\n    default: null,\n  },\n  loginName: {\n    type: String,\n    unique: true,\n  },\n  email: {\n    type: String,\n  },\n  cellphone: {\n    type: String,\n  },\n  photoUrl: {\n    type: String,\n  },\n  street: {\n    type: String,\n  },\n  streetNumber: {\n    type: String,\n  },\n  loginAttempts: {\n    type: Number,\n    default: 0,\n  },\n  temporaryDisabled: {\n    type: Boolean,\n    default: false,\n  },\n  disabledSince: {\n    type: Date,\n  },\n  lastAccess: {\n    type: Date,\n    default: moment.utc(),\n  },\n  /**\n   * valid user types:\n   *  guest -> a guest user\n   *  guard -> a guard of the suburb\n   *  admin -> an administrator of the suburb\n   *  sudo  -> an administrator of the app\n   */\n  userType: {\n    type: String,\n    default: \"guest\",\n  },\n  userConfirmed: {\n    type: Boolean,\n  },\n  facebookId: {\n    type: String,\n  },\n  googleId: {\n    type: String,\n  },\n  appleId: {\n    type: String,\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n  roles: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Role\",\n    },\n  ],\n  suburb: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"Suburb\",\n  },\n  favorites: [GuestSchema],\n  pushTokens: [PushTokenSchema],\n  signedTerms: [Number],\n});\n\n/**\n * Private attributes\n */\nconst _secretKey = process.env.JWT_SECRET;\n\nlet _getExpDate = () => {\n  var expTimeByMin =\n    process.env.EXP_TOKEN != null ? process.env.EXP_TOKEN : \"1440\";\n  return moment().add(expTimeByMin, \"minutes\").unix();\n};\n\nlet _getValidApis = (id) => {\n  //return an array with the valid apis\n  return [];\n};\n\nlet _getValidMenus = (id) => {\n  //return an array with the valid menus for the user\n  return [];\n};\n\n/**\n * Method to validate exp from the user token.\n * @param {*} expDate\n */\nlet _validateExpDate = function (expDate) {\n  let currentTime = moment().unix();\n  return expDate > currentTime;\n};\n\nUserSchema.methods = {\n  validatePassword: function (_password, isTemporary = false) {\n    var _this = this;\n    let pass = base64.decode(_password);\n\n    let compareValue = isTemporary ? _this.tempPassword : _this.password;\n\n    return new Promise(\n      (resolve, reject) => {\n        if (_this.temporaryDisabled) {\n          let wait = 10 - this.getDisabledSince();\n          if (wait > 0)\n            reject({\n              success: false,\n              message: `El usuario esta temporalmente desabilitado, por favor espere ${wait} minutos para volver a intentar.`,\n            });\n          else\n            this.increaseLoginAttempts(true).then((res) => {\n              this.validatePassword(_password).then(\n                (result) => resolve(result),\n                (err) => reject(err)\n              );\n            });\n        } else\n          bcrypt.compare(pass, compareValue).then((valid) => {\n            if (valid) {\n              //reset logint attempts\n              this.increaseLoginAttempts(true).then(\n                (res) => {\n                  resolve({\n                    success: true,\n                    message: \"La contraseña coincide.\",\n                  });\n                },\n                (err) =>\n                  reject({ success: false, message: \"Un error occurio.\" })\n              );\n            } else {\n              //increase login attempts\n              this.increaseLoginAttempts().then(\n                (res) => {\n                  reject({\n                    success: false,\n                    message: \"La contraseña no es valida.\",\n                  });\n                },\n                (err) =>\n                  reject({\n                    success: false,\n                    message: \"Un error occurio, la contraseña no es valida.\",\n                  })\n              );\n            }\n          });\n      },\n      (err) =>\n        reject({\n          success: false,\n          message: \"Ocurrio un error al comparar la contraseña.\",\n        })\n    );\n  },\n  getDisabledSince: function () {\n    let disabledSince = this.disabledSince ? this.disabledSince : moment.utc();\n    let start = moment(disabledSince);\n    let end = moment(moment.utc());\n    return end.diff(start, \"minutes\");\n  },\n  increaseLoginAttempts: function (reset) {\n    if (reset) {\n      this.loginAttempts = 0;\n      this.temporaryDisabled = false;\n      this.disabledSince = null;\n    } else {\n      let loginAttempts = this.loginAttempts + 1;\n      this.loginAttempts = loginAttempts;\n      this.temporaryDisabled = loginAttempts > 10;\n      this.disabledSince = loginAttempts > 10 ? moment.utc() : null;\n    }\n    return new Promise((resolve, reject) => {\n      return this.save().then(\n        (res) => {\n          resolve(res);\n        },\n        (err) => {\n          reject(err);\n        }\n      );\n    });\n  },\n  generateUserToken: function (_suburb) {\n    let payload = {\n      userId: this._id != undefined ? JSON.parse(JSON.stringify(this._id)) : \"\",\n      userName: `${this.name} ${this.lastName}`,\n      loginName: this.loginName,\n      suburb: this.suburb || _suburb,\n      userType: this.userType,\n      exp: _getExpDate(),\n      validApis: _getValidApis(this._id),\n      pushTokens: this.pushTokens,\n      street: this.street,\n      streetNumber: this.streetNumber,\n      //validMenus: _getValidMenus(this._id) //verify if is better put this in another schema i.e. suburb\n    };\n    let token = jwt.sign(payload, _secretKey);\n    return token;\n  },\n  setUserRole: function (userId, roles) {\n    if (!Array.isArray(roles)) roles = [roles];\n    return this.update(\n      {\n        _id: userId,\n      },\n      {\n        $addToSet: {\n          roles: {\n            $each: roles,\n          },\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  deleteUserRole: function (users, roles) {\n    if (!Array.isArray(users)) users = [users];\n    if (!Array.isArray(roles)) roles = [roles];\n\n    return this.update(\n      {\n        _id: {\n          $in: users,\n        },\n      },\n      {\n        $pullAll: {\n          roles: roles,\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  getUserRoles: function (userId) {\n    return new Promise((resolve, reject) => {\n      this.find({\n        _id: userId,\n      })\n        .populate(\"roles\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          resolve(getCleanResult(result, \"roles\"));\n        });\n    });\n  },\n};\n\nconst mergeArrayObjects = (currentFavs, newFavs) => {\n  let firstMerge = currentFavs.map((item, i) => {\n    let assign = {\n      name: item.name,\n      vehicle: item.vehicle,\n      subject: item.subject,\n      isService: item.isService,\n      count: item.count || 0,\n    };\n    newFavs.forEach((a2) => {\n      if (item.name === a2.name) {\n        assign = Object.assign(\n          {},\n          {\n            name: item.name,\n            vehicle: item.vehicle,\n            subject: item.subject,\n            isService: item.isService,\n            count: item.count || 0 + 1, //add 1 to calculate more used favs\n          },\n          a2\n        );\n      }\n    });\n    return { ...assign };\n  });\n\n  let all = [];\n  newFavs.forEach((item) => {\n    let add = true;\n    firstMerge.forEach((fm) => {\n      if (item.name.trim() === fm.name.trim()) add = false;\n    });\n    if (add) all.push(item);\n  });\n\n  let items = [...firstMerge, ...all].sort((a, b) => b.count - a.count);\n  return items.slice(0, items.length <= 30 ? items.length : 30); // solo mantendremos 30 favoritos para no sobrecargar la bd\n};\n\nconst mergePushTokens = (currentPushTokens, newPushToken) => {\n  let tokens = currentPushTokens.map((t) =>\n    t.token === newPushToken.token ? { ...newPushToken } : { ...t._doc }\n  );\n\n  let exists = tokens.filter((t) => t.token === newPushToken.token);\n  return exists.length > 0 ? [...tokens] : [...tokens, newPushToken];\n};\n\nconst extractUsersFromDoc = (mUsers) => {\n  let users = mUsers.map((u) => {\n    let { _id, name, lastName, street, streetNumber, active } = u._doc;\n    return { _id, name, lastName, street, streetNumber, active };\n  });\n  return users;\n};\n\nUserSchema.statics = {\n  /**\n   * Method to get a user by login name\n   */\n  getLogin: function (_loginName) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        $and: [\n          {\n            loginName: _loginName,\n          },\n          { active: true },\n        ],\n      }) /*.populate({\n                path: 'roles',\n                populate: {\n                    path: 'menus',\n                    model: 'Menu'\n                }\n            })*/\n        .exec((err, result) => {\n          if (err) reject(err);\n          resolve(result);\n        });\n    });\n  },\n  getUserByFacebookId: function (_facebookId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        facebookId: _facebookId,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result);\n      });\n    });\n  },\n  getUserByGoogleId: function (_googleId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        googleId: _googleId,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result);\n      });\n    });\n  },\n  getUserByAppleId: function (_appleId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        appleId: _appleId,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result);\n      });\n    });\n  },\n  getUserFavs: function (userId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result.favorites);\n      });\n    });\n  },\n  addUserFavs: function (userId, favs) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result) reject({ message: \"user not found\" });\n        let mergedFavs = mergeArrayObjects(result.favorites || [], favs);\n        this.findOneAndUpdate(\n          { _id: userId },\n          { $set: { favorites: mergedFavs } },\n          { new: true },\n          function (err, user) {\n            if (err) reject(err);\n            resolve(mergedFavs);\n          }\n        );\n        resolve(result);\n      });\n    });\n  },\n  removeUserFavs: function (userId, favs) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result) reject({ message: \"user not found\" });\n        let filterFavs = (result.favorites || []).filter((item) => {\n          let exists = favs.filter((f) => f.name.trim() === item.name.trim());\n          return exists.length === 0;\n        });\n\n        this.findOneAndUpdate(\n          { _id: userId },\n          { $set: { favorites: filterFavs } },\n          { new: true },\n          function (err, user) {\n            if (err) reject(err);\n            resolve(filterFavs);\n          }\n        );\n        resolve(result);\n      });\n    });\n  },\n  addUserPushToken: function (userId, pushToken) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result) reject({ message: \"user not found\" });\n        let mergedPushTokens = mergePushTokens(result.pushTokens, {\n          token: pushToken,\n        });\n        this.findOneAndUpdate(\n          { _id: userId },\n          { $set: { pushTokens: mergedPushTokens } },\n          { new: true },\n          function (err, user) {\n            if (err) reject(err);\n            resolve(mergedPushTokens);\n          }\n        );\n      });\n    });\n  },\n  updateUser: function (objUser) {\n    return this.updateOne(\n      {\n        _id: objUser._id,\n      },\n      {\n        $set: {\n          name: objUser.name,\n          lastName: objUser.lastName,\n          password: objUser.password,\n          email: objUser.email,\n          cellphone: objUser.cellphone,\n          active: objUser.active,\n          userType: objUser.userType,\n          transtime: moment.utc(),\n        },\n      }\n    );\n  },\n  deleteUserInfo: function (userId) {\n    return this.deleteOne({ _id: userId });\n  },\n  saveUser: function (objUser) {\n    let user = new this(objUser);\n    return user.save();\n  },\n  updateUserPicture: function (userId, photoUrl) {\n    return this.updateOne({ _id: userId }, { $set: { photoUrl: photoUrl } });\n  },\n  /**\n   * Validate if the user token is active\n   */\n  isValidToken: function (_token) {\n    return new Promise(function (resolve, reject) {\n      var isValid = false;\n      try {\n        jwt.verify(_token, _secretKey, function (err, decoded) {\n          if (decoded) {\n            if (_validateExpDate(decoded.exp)) {\n              isValid = true;\n            }\n          }\n          resolve(isValid);\n        });\n      } catch (err) {\n        console.log(err);\n        reject(false);\n      }\n    });\n  },\n  /**\n   * Get the payload of the jwt token\n   * @param {String} _token\n   */\n  getTokenPayload: function (_token) {\n    return new Promise(function (resolve, reject) {\n      try {\n        jwt.verify(_token, _secretKey, function (err, decoded) {\n          resolve(decoded);\n        });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  },\n  encryptPassword: function (_password) {\n    return new Promise((resolve, reject) => {\n      let pass = base64.decode(_password);\n      let saltRounds = 10;\n      bcrypt.genSalt(saltRounds, (err, salt) => {\n        bcrypt.hash(pass, salt, (err, hash) => {\n          if (!err) resolve({ hash });\n          else reject(err);\n        });\n      });\n    });\n  },\n  getUserById: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"suburb\", \"name\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          resolve(result);\n        });\n    });\n  },\n  getUserLeanById: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"suburb\", \"name\")\n        .lean()\n        .exec((err, result) => {\n          if (err) reject(err);\n          resolve(result);\n        });\n    });\n  },\n  getUsersBySuburb: function (suburbId) {\n    return new Promise((resolve, reject) => {\n      this.find({ suburb: suburbId }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(extractUsersFromDoc(result));\n      });\n    });\n  },\n  getUsersBySuburbStreet: function (suburbId, street) {\n    return new Promise((resolve, reject) => {\n      this.find({ $and: [{ suburb: suburbId }, { street: street }] }).exec(\n        (err, result) => {\n          if (err) reject(err);\n          resolve(extractUsersFromDoc(result));\n        }\n      );\n    });\n  },\n  getUsersByAddress: function (suburbId, street, streetNumber) {\n    return new Promise((resolve, reject) => {\n      this.find({\n        $and: [\n          { suburb: suburbId },\n          { street: street },\n          { streetNumber: streetNumber },\n        ],\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(extractUsersFromDoc(result));\n      });\n    });\n  },\n  updateUserTerms: function (userId, termsVersion) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId })\n        .lean()\n        .exec((err, result) => {\n          if (err) reject(err);\n          let terms = result.signedTerms || [];\n          terms = [...terms, termsVersion];\n          this.findOneAndUpdate(\n            { _id: userId },\n            { $set: { signedTerms: terms } },\n            { new: true },\n            function (err, user) {\n              if (err) reject(err);\n              resolve({ signed: true, termsVersion: terms });\n            }\n          );\n        });\n    });\n  },\n  isPasswordTemp: function (user, password) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        loginName: user,\n      }).exec((err, result) => {\n        if (err) reject(err);\n\n        if (result.tempPassword == \"\" || result.tempPassword == null) {\n          resolve(false);\n        } else {\n          bcrypt.compare(password, result.tempPassword).then((valid) => {\n            if (valid) {\n              resolve(true);\n            } else {\n              resolve(false);\n            }\n          });\n        }\n      });\n    });\n  },\n  updatePassword: function (userId, password, tempPassword) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: userId,\n      }).exec((err, result) => {\n        if (err) reject(err);\n\n        if (result.tempPassword == \"\") {\n          resolve(false);\n        }\n\n        bcrypt.compare(tempPassword, result.tempPassword).then((valid) => {\n          if (valid) {\n            let HashPassword = \"\";\n\n            this.encryptPassword(base64.encode(password)).then((resEncrypt) => {\n              HashPassword = resEncrypt.hash;\n\n              this.findOneAndUpdate(\n                { _id: userId },\n                { $set: { tempPassword: null, password: HashPassword } },\n                { new: true },\n                function (err, user) {\n                  if (err) reject(err);\n                  resolve({\n                    success: true,\n                    message: \"La contrasena fue actualizada exitosamente.\",\n                  });\n                }\n              );\n            });\n          } else {\n            reject({\n              success: false,\n              message: \"Hubo un problema al actualizar la contrasena.\",\n            });\n          }\n        });\n      });\n    });\n  },\n  updateTempPassword: function (email) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        email: email,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result)\n          reject({\n            message: \"Email does not exist.\",\n          });\n\n        let tempPassword =\n          Math.random().toString(36).substring(2, 8).toUpperCase() +\n          Math.random().toString(36).substring(2, 4).toUpperCase();\n\n        let tempHashPassword = \"\";\n\n        this.encryptPassword(base64.encode(tempPassword)).then((resEncrypt) => {\n          tempHashPassword = resEncrypt.hash;\n\n          this.findOneAndUpdate(\n            {\n              email: email,\n            },\n            {\n              $set: {\n                tempPassword: tempHashPassword,\n              },\n            },\n            {\n              new: true,\n            },\n            function (err) {\n              if (err) reject(err);\n              resolve(tempPassword);\n            }\n          );\n          resolve(tempPassword);\n        });\n      });\n    });\n  },\n};\n\nconst User = mongoose.model(\"User\", UserSchema);\n\nmodule.exports = User;\n","const router = require(\"express\").Router();\n\nconst siteAuth = require(\"../controllers/siteAuth\");\n\nconst menus = require(\"../controllers/menus\");\n\nconst postalCodes = require(\"../controllers/postalCodes\");\n\nconst signup = require(\"../controllers/signup\");\n\nconst handleFiles = require(\"../controllers/handleFile\");\n\nconst multer = require(\"multer\");\n\nconst suburb = require(\"../controllers/suburb\");\n\nconst pushNotification = require(\"../controllers/pushNotification\");\n\nconst analytics = require(\"../controllers/analytics\");\n\nlet upload = multer({ dest: \"./uploads/\" });\n\nrouter.post(\"/api/checkAuth\", siteAuth.checkAuth);\n\nrouter.post(\"/api/isValidToken\", siteAuth.isValidToken);\n\nrouter.post(\"/api/validateTokenPath\", siteAuth.validateTokenPath);\n\nrouter.post(\"/api/logOff\", siteAuth.logOff);\n\nrouter.get(\"/api/auth/fbtoken\", siteAuth.getTokenByFacebookId);\n\nrouter.get(\"/api/auth/googletoken\", siteAuth.getTokenByGoogleId);\n\nrouter.get(\"/api/auth/appletoken\", siteAuth.getTokenByAppleId);\n\nrouter.post(\"/api/signUp\", signup.signUp);\n\n//user apis\nconst userAdmin = require(\"../controllers/userAdmin\");\n\nrouter.post(\"/api/user/:userType\", userAdmin.createUserByType);\nrouter.get(\"/api/user/:userType\", userAdmin.getUserByType);\nrouter.get(\"/api/user\", userAdmin.getUserInfo);\nrouter.get(\"/api/userId\", userAdmin.getUserById);\nrouter.get(\"/api/userInfo/favorites\", userAdmin.getUserFavs);\nrouter.post(\"/api/userInfo/addFavorites\", userAdmin.addUserFavs);\nrouter.post(\"/api/userInfo/removeFavorites\", userAdmin.removeUserFavs);\nrouter.post(\"/api/userInfo/addUserPushToken\", userAdmin.addUserPushToken);\nrouter.get(\"/api/userInfo/getUsersByAddress\", userAdmin.getUsersByAddress);\nrouter.post(\"/api/userInfo/updatePicture\", userAdmin.updateUserPicture);\nrouter.get(\"/api/userInfo/getSignedUserTerms\", userAdmin.getSignedUserTerms);\nrouter.get(\"/api/userInfo/isPasswordTemp\", userAdmin.isPasswordTemp);\n\nrouter.post(\"/api/userInfo/updatePassword\", userAdmin.updatePassword);\nrouter.post(\"/api/userInfo/signUserTerms\", userAdmin.signUserTerms);\nrouter.post(\"/api/saveGoogleUser\", userAdmin.saveGoogleUser);\nrouter.post(\"/api/saveFacebookUser\", userAdmin.saveFacebookUser);\nrouter.post(\"/api/saveAppleUser\", userAdmin.saveAppleUser);\nrouter.post(\"/api/saveEmailUser\", userAdmin.saveEmailUser);\nrouter.post(\"/api/saveUserBySuburb\", userAdmin.saveUserBySuburbId);\nrouter.post(\"/api/deleteUserInfo\", userAdmin.deleteUserInfo);\nrouter.post(\"/api/generateTempPassword\", userAdmin.generateTempPassword);\n//logged user APIs\nrouter.get(\"/api/me/menu\", menus.getMenusByUser);\n\n//postal codes\nrouter.get(\"/api/cp/getCPInfo\", postalCodes.getPostalCodeInfo);\n\n//handle files\nrouter.post(\"/api/file/upload\", upload.any(), handleFiles.uploadFile);\n\n//suburb apis\nrouter.post(\"/api/suburb/approveReject\", suburb.approveReject);\n\nrouter.get(\"/api/suburb/info\", suburb.getSuburbByAdminId);\n\nrouter.get(\"/api/suburb/get\", suburb.getSuburbById);\n\nrouter.post(\"/api/suburb/addSuburbInvite\", suburb.addSuburbInvite);\n\nrouter.get(\"/api/suburb/getInviteByCode\", suburb.getSuburbInvite);\n\nrouter.get(\"/api/suburb/getStreets\", suburb.getStreets);\n\nrouter.get(\"/api/suburb/getStreetNumbers\", suburb.getStreetNumbers);\n\nrouter.post(\"/api/suburb/updateConfig\", suburb.saveSuburbConfig);\n\nrouter.get(\"/api/suburb/getConfig\", suburb.getSuburbConfig);\n\nrouter.post(\"/api/suburb/saveStreet\", suburb.saveSuburbStreet);\n\nrouter.get(\"/api/suburb/getAllStreets\", suburb.getSuburbStreets);\n\n//push notifications\nrouter.post(\"/api/notification/test\", pushNotification.sendTestNotification);\nrouter.post(\n  \"/api/notification/arrive\",\n  pushNotification.sendArriveNotification\n);\n\nrouter.get(\"/api/analytics/GetVisits\", analytics.getSuburbVisits);\n\nmodule.exports = router;\n","const express = require(\"express\");\nconst router = express.Router();\n\nconst auth = require(\"../middleware/auth\");\n\n//routes\nconst apiRoutes = require(\"./apiRoutes\");\n\nrouter.use(\"/api/*\", auth.checkApiAuth);\nrouter.all(\"/api/*\", apiRoutes);\n\nmodule.exports = router;\n","/**\n * Module dependencies.\n */\n\nvar app = require('./app');\nvar debug = require('debug')('rochacoapi:server');\nvar http = require('http');\n\n/**\n * Get port from environment and store in Express.\n */\n\nvar port = normalizePort(process.env.PORT || '4010');\napp.set('port', port);\n\n/**\n * Create HTTP server.\n */\n\nvar server = http.createServer(app);\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nfunction normalizePort(val) {\n  var port = parseInt(val, 10);\n\n  if (isNaN(port)) {\n    // named pipe\n    return val;\n  }\n\n  if (port >= 0) {\n    // port number\n    return port;\n  }\n\n  return false;\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error) {\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n\n  var bind = typeof port === 'string'\n    ? 'Pipe ' + port\n    : 'Port ' + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nfunction onListening() {\n  console.log(\"running on port\", process.env.PORT);\n  var addr = server.address();\n  var bind = typeof addr === 'string'\n    ? 'pipe ' + addr\n    : 'port ' + addr.port;\n  debug('Listening on ' + bind);\n}\n","module.exports = require(\"@sendgrid/mail\");","module.exports = require(\"axios\");","module.exports = require(\"base-64\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"crypto-js\");","module.exports = require(\"debug\");","module.exports = require(\"dotenv\");","module.exports = require(\"dropbox-v2-api\");","module.exports = require(\"expo-server-sdk\");","module.exports = require(\"express\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"moment\");","module.exports = require(\"mongoose\");","module.exports = require(\"morgan\");","module.exports = require(\"multer\");","module.exports = require(\"request\");"],"sourceRoot":""}