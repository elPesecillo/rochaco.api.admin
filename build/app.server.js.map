{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app.js","webpack:///./src/constants/menusConfig.js","webpack:///./src/constants/types.js","webpack:///./src/controllers/handleFile.js","webpack:///./src/controllers/menus.js","webpack:///./src/controllers/postalCodes.js","webpack:///./src/controllers/pushNotification.js","webpack:///./src/controllers/signup.js","webpack:///./src/controllers/siteAuth.js","webpack:///./src/controllers/suburb.js","webpack:///./src/controllers/userAdmin.js","webpack:///./src/logic/auth.js","webpack:///./src/logic/menuService.js","webpack:///./src/logic/postalCodeService.js","webpack:///./src/logic/pushNotificationService.js","webpack:///./src/logic/suburbService.js","webpack:///./src/logic/userService.js","webpack:///./src/logic/viewPermissions.js","webpack:///./src/middleware/auth.js","webpack:///./src/models/index.js","webpack:///./src/models/menu.js","webpack:///./src/models/postalCode.js","webpack:///./src/models/role.js","webpack:///./src/models/schemas/guestSchema.js","webpack:///./src/models/schemas/pushTokenSchema.js","webpack:///./src/models/schemas/suburbFileSchema.js","webpack:///./src/models/schemas/suburbStatusSchema.js","webpack:///./src/models/suburb.js","webpack:///./src/models/suburbInvite.js","webpack:///./src/models/user.js","webpack:///./src/routes/apiRoutes.js","webpack:///./src/routes/router.js","webpack:///./src/server.js","webpack:///external \"@sendgrid/mail\"","webpack:///external \"base-64\"","webpack:///external \"bcryptjs\"","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"crypto-js\"","webpack:///external \"debug\"","webpack:///external \"dotenv\"","webpack:///external \"dropbox-v2-api\"","webpack:///external \"expo-server-sdk\"","webpack:///external \"express\"","webpack:///external \"fs\"","webpack:///external \"http\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"moment\"","webpack:///external \"mongoose\"","webpack:///external \"morgan\"","webpack:///external \"multer\"","webpack:///external \"request\""],"names":["dotenv","require","express","logger","bodyParser","cors","config","connectDb","router","app","use","urlencoded","extended","json","module","exports","userType","userTypes","menus","name","path","icon","visible","validUserTypes","guard","suburbAdmin","admin","guest","neighbor","order","suburbStatus","status","description","userServices","suburbService","fs","dropboxV2Api","sgMail","getFileName","nodeFileName","originalName","idx","lastIndexOf","substring","uploadFileDropbox","file","dropbox","authenticate","token","process","env","DROPBOX_TOKEN","Promise","resolve","reject","resource","parameters","filename","originalname","readStream","createReadStream","destination","err","result","response","base64_encode","file_path","bitmap","readFileSync","Buffer","from","toString","getEmailAttachments","files","attachments","forEach","push","content","sendEmail","user","suburb","suburbId","setApiKey","SENDGRID_API_KEY","msg","to","OWNER_EMAILS","split","subject","text","html","send","ex","deleteTemporaryFiles","unlink","console","log","processFileUpload","data","userId","lastName","cellphone","email","postalCode","section","suburbName","recaptchaToken","validCaptcha","validateRecaptcha","proms","uploadedFiles","all","saveSuburb","location","active","userAdmins","getSuburbStatus","map","fil","fileName","actionType","mimetype","updateUser","_id","id","uploadFile","req","res","next","body","processFiles","message","menuService","getMenusByUser","headers","postalCodeService","getPostalCodeInfo","getCPInfo","query","pushNotificationService","getUserById","sendTestNotification","sendPushNotification","sound","withSome","title","subtitle","sendArriveNotification","pushTokens","t","_doc","isService","redirect","signUp","undefined","success","facebookId","googleId","password","loginName","saveFacebookUser","saveGoogleUser","saveEmailUser","User","viewPermissions","validateUser","userLogin","getLogin","then","login","validPass","validatePassword","generateUserToken","succes","checkAuth","getTokenByFacebookId","getUserByFacebookId","usr","getTokenByGoogleId","getUserByGoogleId","isValidToken","isValid","valid","validateTokenPath","permissionValid","logOff","session","destroy","userService","moment","approveReject","newStatus","details","getSuburbById","addStatus","suburbAddStatus","transtime","utc","getSuburbByAdminId","getSuburbByAdminUser","addSuburbInvite","street","streetNumber","getSuburbInvite","code","getStreets","getUsersBySuburb","users","streets","distinctStreets","Set","filter","u","s","getStreetNumbers","getUsersBySuburbStreet","streetNumbers","distinctStreetNumbers","SuburbInvite","resV","saveUser","userConfirmed","resSave","saveUserWithPassword","createUserByType","params","saveUserBySuburbId","photoUrl","GetInviteByCode","resInv","save","trim","UpdateSuburbInviteUsed","userData","resCodeUpdate","catch","getUserByType","getUserInfo","getUserByToken","getUserFavs","userFavs","getUserFavorites","addUserFavs","favs","saveUserFavorites","removeUserFavs","removeUserFavorites","addUserPushToken","pushToken","getUsersByAddress","openApi","protectedApi","Auth","validateToken","def","validateAdminUser","getPayload","getTokenPayload","payload","isOpenApi","apiPath","indexOf","isProtectedApi","validateApiRequest","userToken","userMenus","menu","types","g","toLowerCase","length","item","errP","PostalCode","getInfo","cp","Expo","expo","getMessagesBatches","messages","isExpoPushToken","error","chunkPushNotifications","sendExpoNotification","chunks","tickets","chunk","ticketChunk","sendPushNotificationsAsync","checkTickets","receiptIds","ticket","receiptIdChunks","chunkPushNotificationReceiptIds","receipts","getPushNotificationReceiptsAsync","receiptId","Suburb","CryptoJS","pjson","statusName","st","encryption","AES","encrypt","cryptoKey","decryption","bytes","decrypt","enc","Utf8","suburbObj","SaveSuburb","sub","UpdateStatus","suburbAddStatusByName","UpdateStatusByName","GetSuburbByUserId","GetSuburb","_code","Math","random","toUpperCase","SaveSuburbInvite","subInv","AddSuburbInvite","subInvite","GetSuburbBasicInfo","props","invite","sucess","request","userObj","secretKey","RECAPTCHA_SECRET","verificationURL","post","resG","JSON","parse","score","encryptPassword","resEncrypt","encryptedPassword","hash","find","findById","permissions","validateWithPayload","validPath","p","toLocaleLowerCase","jwt","validApiRequest","auth","stringify","checkApiAuth","baseUrl","mongoose","Menu","Role","models","mConn","connect","DB_CONNECTION","useNewUrlParser","connection","on","bind","MenuSchema","Schema","type","String","required","link","parentId","Types","ObjectId","ref","position","Number","default","Boolean","Date","statics","getMenuById","menuId","findOne","updateMenu","objMenu","update","$set","deleteMenu","deleteMany","getChildMenus","getChildMenusRecursively","parents","_this","getThisLevelChilds","elements","childs","child","getInnerChilds","concat","getParentMenusRecursively","getThisLevel","getMoreParents","getMenus","model","PostalCodeSchema","d_codigo","d_asenta","d_tipo_asenta","D_mnpio","d_estado","d_ciudad","d_CP","c_estado","c_oficina","c_CP","c_tipo_asenta","c_mnpio","id_asenta_cpcons","d_zona","c_cve_ciudad","regCp","RegExp","limit","RoleSchema","siteAdministration","sysAdministrator","deleteRole","roleId","setRoleMenu","Array","isArray","$addToSet","$each","multi","deleteRoleMenu","roles","$in","$pullAll","getRoleMenus","populate","exec","GuestSchema","vehicle","plates","additionalInformation","arriveOn","leaveOn","count","PushTokenSchema","SuburbFileSchema","SuburbStatusSchema","SuburbSchema","suburbInvites","updateOne","userInviteId","GetSuburbByName","SuburbInviteSchema","usedBy","updatedTranstime","userInviteObj","userInvite","$and","bcrypt","base64","UserSchema","unique","loginAttempts","temporaryDisabled","disabledSince","lastAccess","favorites","_secretKey","JWT_SECRET","_getExpDate","expTimeByMin","exptoken","add","unix","_getValidApis","_getValidMenus","_validateExpDate","expDate","currentTime","methods","_password","pass","decode","wait","getDisabledSince","increaseLoginAttempts","compare","start","end","diff","reset","_suburb","userName","exp","validApis","sign","setUserRole","deleteUserRole","getUserRoles","getCleanResult","mergeArrayObjects","currentFavs","newFavs","firstMerge","i","assign","a2","Object","fm","items","sort","a","b","slice","mergePushTokens","currentPushTokens","newPushToken","tokens","exists","extractUsersFromDoc","mUsers","_loginName","_facebookId","_googleId","mergedFavs","findOneAndUpdate","new","filterFavs","f","mergedPushTokens","objUser","_token","verify","decoded","saltRounds","genSalt","salt","Router","siteAuth","postalCodes","signup","handleFiles","multer","pushNotification","upload","dest","get","userAdmin","any","apiRoutes","debug","http","port","normalizePort","PORT","set","server","createServer","listen","onError","onListening","val","parseInt","isNaN","syscall","exit","addr","address"],"mappings":"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","file":"app.server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server.js\");\n","const dotenv = require(\"dotenv\");\nconst express = require('express');\nconst logger = require('morgan');\nconst bodyParser = require('body-parser');\nconst cors = require(\"cors\");\n\ndotenv.config();\n\nconst connectDb = require(\"./models\").connectDb;\nvar router = require(\"./routes/router\");\n\n\nvar app = express();\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(express.json());\napp.use(cors());\napp.use(logger('dev'));\napp.use('/', router);\n\nconnectDb();\n\nmodule.exports = app;\n\n","const userType = require(\"./types\").userTypes;\n\n/**\n * Get menus list\n */\nexports.menus = [\n  {\n    name: \"Mi Cuenta\",\n    path: \"/admin/cuenta\",\n    icon: \"icon icon-account_circle\",\n    visible: true,\n    validUserTypes: [\n      userType.guard,\n      userType.suburbAdmin,\n      userType.admin,\n      userType.guest,\n      userType.neighbor,\n    ],\n    order: 5,\n  },\n  {\n    name: \"Guardias\",\n    path: \"/admin/guardias\",\n    icon: \"icon icon-shield\",\n    visible: true,\n    validUserTypes: [userType.guest, userType.guard, userType.admin],\n    order: 2,\n  },\n  {\n    name: \"GuardiasForm\",\n    icon: \"icon icon-shield\",\n    path: \"/admin/guardias-form\",\n    visible: false,\n    validUserTypes: [userType.suburbAdmin, userType.admin],\n    order: 6,\n  },\n  {\n    name: \"Vecinos\",\n    path: \"/admin/vecinos\",\n    icon: \"icon icon-users\",\n    visible: true,\n    validUserTypes: [userType.guard, userType.suburbAdmin, userType.admin],\n    order: 3,\n  },\n  {\n    name: \"Colonia\",\n    path: \"/admin/colonias\",\n    icon: \"icon icon-building\",\n    visible: true,\n    validUserTypes: [userType.admin, userType.suburbAdmin, userType.guest],\n    order: 4,\n  },\n  {\n    name: \"Colonia Status\",\n    path: \"/admin/coloniaStatus\",\n    icon: \"icon icon-building\",\n    visible: false,\n    validUserTypes: [userType.admin, userType.suburbAdmin, userType.guest],\n    order: 4,\n  },\n  {\n    name: \"Colonia Status\",\n    path: \"/admin/coloniaMain\",\n    icon: \"icon icon-building\",\n    visible: false,\n    validUserTypes: [\n      userType.admin,\n      userType.suburbAdmin,\n      userType.suburbAdmin,\n    ],\n    order: 4,\n  },\n];\n","exports.userTypes = {\n  guest: \"guest\",\n  admin: \"admin\",\n  suburbAdmin: \"suburbAdmin\",\n  guard: \"guard\",\n  neighbor: \"neighbor\",\n};\n\nexports.suburbStatus = [\n  {\n    status: \"pending\",\n    description:\n      \"Tu solicitud para registrar la colonia ha sido enviada, por favor espera de 2 a 3 dias habiles o contactanos por medio de nuestras redes sociales para mayor informacion.\",\n  },\n  {\n    status: \"rejected\",\n    description: \"Lo sentimos tu solicitud fue rechazada.\",\n  },\n  {\n    status: \"approved\",\n    description: \"Tu solicitud a sido aprobada.\",\n  },\n  {\n    status: \"feedback\",\n    description: \"Tu solicitud a sido revisada, se requiere mas información.\",\n  },\n];\n","const userServices = require(\"../logic/userService\");\nconst suburbService = require(\"../logic/suburbService\");\n//const fetchDbx = require('isomorphic-fetch');\nconst fs = require(\"fs\");\n// const Dropbox = require(\"dropbox\").Dropbox;\nconst dropboxV2Api = require(\"dropbox-v2-api\");\nconst sgMail = require(\"@sendgrid/mail\");\n\nconst getFileName = (nodeFileName, originalName) => {\n  let idx = originalName.lastIndexOf(\".\");\n  return `${nodeFileName}.${originalName.substring(idx + 1)}`;\n};\n\nconst uploadFileDropbox = (file) => {\n  const dropbox = dropboxV2Api.authenticate({\n    token: process.env.DROPBOX_TOKEN,\n  });\n\n  return new Promise((resolve, reject) => {\n    dropbox(\n      {\n        resource: \"files/upload\",\n        parameters: {\n          path: `/neighby/${getFileName(file.filename, file.originalname)}`,\n        },\n        readStream: fs.createReadStream(`${file.destination}/${file.filename}`),\n      },\n      (err, result, response) => {\n        if (!err) resolve(result);\n        else reject(err);\n      }\n    );\n  });\n};\n\nconst base64_encode = (file_path) => {\n  // read binary data\n  var bitmap = fs.readFileSync(file_path);\n  // convert binary data to base64 encoded string\n  return new Buffer.from(bitmap, \"base64\").toString(\"base64\"); //.toString('base64');\n};\n\nconst getEmailAttachments = (files) => {\n  let attachments = [];\n  files.forEach((file) => {\n    attachments.push({\n      filename: `${file.originalname}`,\n      content: base64_encode(`${file.destination}/${file.filename}`),\n    });\n  });\n  return attachments;\n};\n\nconst sendEmail = async (files, user, suburb, suburbId) => {\n  try {\n    sgMail.setApiKey(process.env.SENDGRID_API_KEY);\n\n    const msg = {\n      to: process.env.OWNER_EMAILS.split(\",\"),\n      from: \"support@neighby.com\",\n      subject: \"Nuevo requerimiento de registro de colonia.\",\n      text: `solicitud de registro.`,\n      html: `<strong>El usuario ${user} desea registrar la colonia ${suburb} y envia los documentos para revisión adjuntos en este email para revision, id de referencia:[${suburbId}].</strong>`,\n      attachments: getEmailAttachments(files),\n    };\n    await sgMail.send(msg);\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst deleteTemporaryFiles = (files) => {\n  files.forEach((file) => {\n    fs.unlink(`${file.destination}/${file.filename}`, (err) => {\n      if (err) throw err;\n      console.log(\n        `path file ${file.destination}/${file.filename} has been deleted.`\n      );\n    });\n  });\n};\n\nconst processFileUpload = async (files, data) => {\n  try {\n    let {\n      userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      postalCode,\n      section,\n      suburbName,\n      recaptchaToken,\n    } = data;\n    let validCaptcha = await userServices.validateRecaptcha(recaptchaToken);\n    let proms = [];\n    files.forEach((file) => {\n      proms.push(uploadFileDropbox(file));\n    });\n    let uploadedFiles = await Promise.all(proms);\n\n    let saveSuburb = await suburbService.saveSuburb({\n      name: suburbName,\n      location: section,\n      postalCode: postalCode,\n      active: true,\n      userAdmins: [userId],\n      status: [suburbService.getSuburbStatus(\"pending\")],\n      files: files.map((fil) => ({\n        fileName: fil.filename,\n        originalName: fil.originalname,\n        actionType: \"solicitudRegistro\",\n        mimetype: fil.mimetype,\n      })),\n    });\n\n    let updateUser = await userServices.updateUser({\n      _id: userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      active: true,\n    });\n\n    await sendEmail(files, `${name} ${lastName}`, suburbName, saveSuburb.id);\n\n    deleteTemporaryFiles(files);\n    return saveSuburb;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nexports.uploadFile = async (req, res, next) => {\n  try {\n    let {\n      userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      postalCode,\n      section,\n      suburbName,\n      recaptchaToken,\n    } = req.body;\n    let processFiles = await processFileUpload(req.files, {\n      userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      postalCode,\n      section,\n      suburbName,\n      recaptchaToken,\n    });\n    res.status(202).json({ message: \"ok\" });\n  } catch (ex) {\n    res\n      .status(400)\n      .json({ message: ex.message || \"No se pudo completar el registro.\" });\n  }\n};\n","const menuService = require(\"../logic/menuService\");\n\n\n\n/**\n * [GET] method to get the menus by user types\n */\nexports.getMenusByUser = async (req, res, next) => {\n    let token = req.headers[\"authorization\"];\n    try {\n        const result = await menuService.getMenusByUser(token);\n        res.status('200').json(result);\n    } catch (err) {\n        res.status('401').json(err);\n    }\n}","const postalCodeService = require(\"../logic/postalCodeService\");\n\nexports.getPostalCodeInfo = async (req, res, next) => {\n    try {\n        let result = await postalCodeService.getCPInfo(req.query.postalCode);\n        res.status(200).json(result);\n    }\n    catch (err) {\n        res.status(400).json(err);\n    }\n}","const pushNotificationService = require(\"../logic/pushNotificationService\");\nconst { getUserById } = require(\"../logic/userService\");\n\nexports.sendTestNotification = async (req, res, next) => {\n  try {\n    let result = await pushNotificationService.sendPushNotification(\n      [\"ExponentPushToken[TRMrLcG4VUxVUwmsCXPIyw]\"],\n      {\n        sound: \"default\",\n        body: \"This is a test notification ;)\",\n        data: { withSome: \"data\" },\n        title: \"Notificacion Nueva\",\n        subtitle: \"soy un subtitulo\",\n      }\n    );\n    res.status(200).json(result);\n  } catch (err) {\n    res.status(400).json(err);\n  }\n};\n\nexports.sendArriveNotification = async (req, res) => {\n  try {\n    let { userId, guest } = req.body;\n    let user = await getUserById(userId);\n    let pushTokens = user.pushTokens.map((t) => t._doc.token);\n    let result = await pushNotificationService.sendPushNotification(\n      pushTokens,\n      {\n        sound: \"default\",\n        body: guest.isService\n          ? `Tu servicio ${guest.name} ha llegado.`\n          : `Tu invitado ${guest.name} ha llegado.`,\n        data: { redirect: \"myVisits\" },\n        title: `Hola ${user.name}`,\n      }\n    );\n    return result;\n  } catch (err) {\n    res.status(400).json(err);\n  }\n};\n","const user = require(\"./userAdmin\");\n\nexports.signUp = (req, res, next) => {\n    if (req.body.token === undefined || req.body.token === '' || req.body.token === null) {\n        res.send({ success: false, message: 'Por favor intenta de nuevo (codigo recaptcha no encontrado).' });\n        return;\n    }\n    let { email, name, lastName, cellphone, facebookId, googleId, password, token } = req.body;\n    if (facebookId) {\n        req.body ={ email, name, lastName, loginName: facebookId, cellphone, facebookId, googleId, password, token };\n        user.saveFacebookUser(req, res, next);\n    }\n    else if (googleId) {        \n        req.body ={ email, name, lastName, loginName: googleId, cellphone, facebookId, googleId, password, token };\n        user.saveGoogleUser(req, res, next);\n    }\n    else {        \n        req.body ={ email, name, lastName, loginName: email, cellphone, facebookId, googleId, password, token };\n        user.saveEmailUser(req, res, next);\n    }\n    //mandar llamar registro aqui\n    // if (googleId || facebookId)\n    //     axios({\n    //         method: 'post',\n    //         url: googleId ? `${process.env.ADMIN_API_HOST}/api/saveGoogleUser` : `${process.env.ADMIN_API_HOST}/api/saveFacebookUser`,\n    //         data: {\n    //             name,\n    //             lastName,\n    //             loginName: googleId ? googleId : facebookId,\n    //             email,\n    //             cellphone,\n    //             googleId,\n    //             facebookId,\n    //             token\n    //         }\n    //     }).then(resS => {\n    //         res.send({ success: true, message: resS.data.message || \"Ok\" });\n    //     })\n    //         .catch(err => {\n    //             let errMsg = err && err.response && err.response.data && err.response.data.message ? err.response.data.message : err.message || \"No se pudo guardar el usuario.\";\n    //             res.send({ success: false, message: errMsg });\n    //         });\n    // else {\n    //     axios({\n    //         method: 'post',\n    //         url: `${process.env.ADMIN_API_HOST}/api/saveEmailUser`,\n    //         data: {\n    //             name,\n    //             lastName,\n    //             loginName: email,\n    //             email,\n    //             cellphone,\n    //             password,\n    //             token\n    //         }\n    //     }).then(resS => {\n    //         res.send({ success: true, message: resS.data.message || \"Ok\" });\n    //     })\n    //         .catch(err => {\n    //             let errMsg = err && err.response && err.response.data && err.response.data.message ? err.response.data.message : err.message || \"No se pudo guardar el usuario.\";\n    //             res.send({ success: false, message: errMsg });\n    //         });\n    // }\n}","const User = require(\"../models/user\");\nconst viewPermissions = require(\"../logic/viewPermissions\");\n\n\nconst validateUser = (userLogin, password) => {\n    return new Promise((resolve, reject) => {\n        User.getLogin(userLogin).then((login, err) => {\n            if (login) {\n                let validPass = login.validatePassword(password);\n                validPass.then(result => {\n                    //generate jwt token\n                    let token = login.generateUserToken();\n                    resolve({ success: true, message: token });\n                }, err => {\n                    reject({ success: false, message: err.message || 'La contraseña no es valida.' });\n                });\n            }\n            else reject({ succes: false, message: 'El usuario no existe.' });\n        });\n    });\n}\n\nexports.checkAuth = (req, res, next) => {\n    //over here check the db to know if the auth is valid\n    let user = req.body.user;\n    let password = req.body.password;\n    validateUser(user, password).then(result => {\n        if (result.success) {\n            // var session = req.session;\n            // session.token = result.message;\n            // session.user = user;\n            res.status('200').json(result);\n        }\n        else\n            res.status('401').json({ success: false, message: 'Unauthorized' });\n    }, err => {\n        res.status('401').json({ success: false, message: err.message || 'Unauthorized' });\n    });\n}\n\nexports.getTokenByFacebookId = (req, res) => {\n    let facebookId = req.query['id'];\n    User.getUserByFacebookId(facebookId).then(usr => {\n        if (usr) {\n            let token = usr.generateUserToken();\n            res.status('200').json({ token });\n        }\n        else {\n            res.status('404').json({ token: null });\n        }\n    })\n}\n\nexports.getTokenByGoogleId = (req, res) => {\n    let googleId = req.query['id'];\n    User.getUserByGoogleId(googleId).then(usr => {\n        if (usr) {\n            let token = usr.generateUserToken();\n            res.status('200').json({ token });\n        }\n        else {\n            res.status('404').json({ token: null });\n        }\n    });\n}\n\nexports.isValidToken = (req, res, next) => {\n    let token = req.headers[\"authorization\"];\n    return new Promise((resolve, reject) => {\n        User.isValidToken(token).then((isValid) => {\n            if (isValid)\n                res.status('200').json({ valid: true, message: \"the token is valid\" })\n            else\n                res.status('401')({\n                    valid: false,\n                    message: \"the token is not valid\"\n                });\n\n        }, err => res.status('500')(err));\n    });\n\n}\n\nexports.validateTokenPath = (req, res, next) => {\n    let { token, user, path } = req.body;\n    //over here add logic to check if a path is valid for the given context (user-> userType and jwt token)\n    viewPermissions.permissionValid(path, token, user).then(result => {\n        res.status('200').json({ valid: true, message: \"ok :)\" });\n    }, err => {\n        res.status('401').json(err);\n    });\n}\n\nexports.logOff = (req, res, next) => {\n    if (req.session)\n        req.session.destroy(err => {\n            if (err)\n                res.status('500').json({ success: false, message: err.message || 'An unknow error occurs while trying to log off.' })\n            res.status('200').json({ success: true, message: 'session destroyed.' });\n        })\n}\n","const suburbService = require(\"../logic/suburbService\");\nconst userService = require(\"../logic/userService\");\nconst userTypes = require(\"../constants/types\").userTypes;\nconst moment = require(\"moment\");\n\nexports.approveReject = async (req, res, next) => {\n  try {\n    let { suburbId, newStatus, details } = req.body;\n    let suburb = await suburbService.getSuburbById(suburbId);\n    let status = suburbService.getSuburbStatus(newStatus);\n    if (suburb && status) {\n      let addStatus = await suburbService.suburbAddStatus(suburbId, {\n        ...status,\n        details,\n        transtime: moment.utc(),\n      });\n      if (addStatus) {\n        if (status.status === \"approved\")\n          await userService.updateUser({\n            _id: suburb.userAdmins[0].id,\n            userType: userTypes.suburbAdmin,\n            transtime: moment.utc(),\n          });\n        res.status(200).json({\n          success: true,\n          message: `El estatus ha sido actualizado correctamente, el nuevo estatus es: \"${status.status}\"`,\n        });\n      }\n    } else\n      res.status(400).json({\n        success: false,\n        message: \"El estatus no es valido o la colonia no existe\",\n      });\n  } catch (ex) {\n    res.status(400).json({\n      success: false,\n      message: ex.message || \"No se pudo procesar aprobar/rechazar la colonia.\",\n    });\n  }\n};\n\nexports.getSuburbByAdminId = (req, res, next) => {\n  let userId = req.query.id;\n  suburbService.getSuburbByAdminUser(userId).then(\n    (result) => {\n      res.status(\"200\").json(result);\n    },\n    (err) => {\n      res.status(400).json({\n        success: false,\n        message:\n          err.message || \"No se pudo obtener la informacion de la colonia.\",\n      });\n    }\n  );\n};\n\nexports.getSuburbById = (req, res, next) => {\n  let suburbId = req.query.suburbId;\n  suburbService.getSuburbById(suburbId).then(\n    (result) => {\n      res.status(200).json(result);\n    },\n    (err) => {\n      res.status(400).json({\n        success: false,\n        message: err.message || \"no se encontro la colonia\",\n      });\n    }\n  );\n};\n\nexports.addSuburbInvite = (req, res, next) => {\n  let { suburbId, name, street, streetNumber, userType } = req.body;\n  suburbService\n    .addSuburbInvite(suburbId, name, street, streetNumber, userType)\n    .then(\n      (result) => {\n        res.status(200).json(result);\n      },\n      (err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message || \"No se pudo generar la invitacion para el usuario.\",\n        });\n      }\n    );\n};\n\nexports.getSuburbInvite = (req, res, next) => {\n  let code = req.query.code;\n  suburbService.getSuburbInvite(code).then(\n    (result) => {\n      res.status(200).json(result);\n    },\n    (err) => {\n      res.status(500).json({\n        success: false,\n        message: err.message || \"No se pudo obtener la invitacion.\",\n      });\n    }\n  );\n};\n\nexports.getStreets = (req, res) => {\n  let suburbId = req.query.suburbId;\n  if (suburbId) {\n    userService.getUsersBySuburb(suburbId).then(\n      (users) => {\n        let streets = users.map((usr) => usr.street);\n        const distinctStreets = [...new Set(streets)];\n        res\n          .status(200)\n          .json(\n            distinctStreets\n              .filter((u) => typeof u !== \"undefined\")\n              .map((s) => ({ street: s }))\n          );\n      },\n      (err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message ||\n            \"No se pudieron obtener las calles del fraccionamiento\",\n        });\n      }\n    );\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.getStreetNumbers = (req, res) => {\n  let { suburbId, street } = req.query;\n  if (suburbId) {\n    userService.getUsersBySuburbStreet(suburbId, street).then(\n      (users) => {\n        let streetNumbers = users.map((usr) => usr.streetNumber);\n        const distinctStreetNumbers = [...new Set(streetNumbers)];\n        res\n          .status(200)\n          .json(\n            distinctStreetNumbers\n              .filter((u) => typeof u !== \"undefined\")\n              .map((s) => ({ streetNumber: s }))\n          );\n      },\n      (err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message || \"No se pudieron obtener los numeros de la calle\",\n        });\n      }\n    );\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n","const userService = require(\"../logic/userService\");\nconst userTypes = require(\"../constants/types\").userTypes;\nconst SuburbInvite = require(\"../models/suburbInvite\");\n\nexports.saveGoogleUser = (req, res, next) => {\n  //get user data here\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //save the user here\n      userService\n        .saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          facebookId,\n          googleId,\n          userConfirmed: true,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.saveFacebookUser = (req, res, next) => {\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //save the user here\n      userService\n        .saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          facebookId,\n          googleId,\n          userConfirmed: true,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.saveEmailUser = (req, res, next) => {\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //if the user is registered through email credentials the user needs to be confirmed through an email\n      userService\n        .saveUserWithPassword({\n          name,\n          lastName,\n          loginName,\n          email,\n          password: password,\n          cellphone,\n          facebookId,\n          googleId,\n          userConfirmed: false,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.createUserByType = async (req, res, next) => {\n  try {\n    const { name, lastName, loginName, email, cellphone } = req.body;\n    const userType = userTypes[req.params.userType];\n    if (!userType) {\n      res.status(\"400\").json({ success: false, message: \"Bad request.\" });\n      return;\n    }\n    const result = await userService.saveUser({\n      name,\n      lastName,\n      loginName,\n      email,\n      cellphone,\n      userConfirmed: false,\n      userType,\n    });\n    res.status(\"200\").json({\n      success: true,\n      message: result.message || \"Has sido registrado correctamente.\",\n    });\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.saveUserBySuburbId = async (req, res, next) => {\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    photoUrl,\n    suburbId,\n    street,\n    streetNumber,\n    code,\n    userType,\n    token, // add captcha here\n  } = req.body;\n\n  SuburbInvite.GetInviteByCode(code)\n    .then((resInv) => {\n      //***add validate captcha here***\n\n      let save = null;\n      if (password && password.trim() !== \"\")\n        save = userService.saveUserWithPassword({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          photoUrl,\n          facebookId,\n          googleId,\n          suburb: suburbId,\n          street,\n          streetNumber,\n          userType,\n          userConfirmed: false, // if the user is an email user the user needs to confirm\n        });\n      else\n        save = userService.saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          photoUrl,\n          facebookId,\n          googleId,\n          suburb: suburbId,\n          street,\n          streetNumber,\n          userType,\n          userConfirmed: true,\n        });\n      save.then(\n        (resSave) => {\n          SuburbInvite.UpdateSuburbInviteUsed(\n            code,\n            resSave.userData._doc._id.toString()\n          )\n            .then((resCodeUpdate) => {\n              res.status(\"200\").json({\n                success: true,\n                message:\n                  resCodeUpdate.message || \"Has sido registrado correctamente.\",\n              });\n            })\n            .catch((err) => {\n              res.status(\"400\").json({\n                success: false,\n                message: err.message || \"Bad request.\",\n              });\n            });\n        },\n        (err) => {\n          res\n            .status(\"400\")\n            .json({ success: false, message: err.message || \"Bad request.\" });\n        }\n      );\n    })\n    .catch((err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    });\n};\n\nexports.getUserByType = async (req, res, next) => {\n  try {\n    const userType = userTypes[req.params.userType];\n    if (!userType) {\n      res.status(\"400\").json({ success: false, message: \"Bad request.\" });\n      return;\n    }\n    const result = await userService.getUserByType(userType);\n    res.status(\"200\").json({ success: true, data: result });\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserInfo = async (req, res, next) => {\n  try {\n    userService.getUserByToken(req.query.token).then(\n      (result) => {\n        res.status(\"200\").json(result);\n      },\n      (err) => {\n        res\n          .status(\"400\")\n          .json({ success: false, message: err.message || \"Bad request.\" });\n      }\n    );\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserById = async (req, res, next) => {\n  try {\n    let result = await userService.getUserById(req.query.id);\n    res.status(\"200\").json(result);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserFavs = async (req, res, next) => {\n  try {\n    let userFavs = await userService.getUserFavorites(req.query.userId);\n    res.status(\"200\").json(userFavs);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.addUserFavs = async (req, res, next) => {\n  try {\n    let { favs, userId } = req.body;\n    let userFavs = await userService.saveUserFavorites(userId, favs);\n    res.status(\"200\").json(userFavs);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.removeUserFavs = async (req, res, next) => {\n  try {\n    let { favs, userId } = req.body;\n    let userFavs = await userService.removeUserFavorites(userId, favs);\n    res.status(\"200\").json(userFavs);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.addUserPushToken = async (req, res, next) => {\n  try {\n    let { pushToken, userId } = req.body;\n    let pushTokens = await userService.addUserPushToken(userId, pushToken);\n    res.status(\"200\").json(pushTokens);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUsersByAddress = async (req, res) => {\n  try {\n    let { suburbId, street, streetNumber } = req.query;\n    let users = await userService.getUsersByAddress(\n      suburbId,\n      street,\n      streetNumber\n    );\n    res.status(\"200\").json(users);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n","const User = require(\"../models/user\");\nconst userTypes = require(\"../constants/types\").userTypes;\n\nconst openApi = [\n  \"/api/checkAuth\",\n  \"/api/auth/fbtoken\",\n  \"/api/auth/googletoken\",\n  \"/api/saveGoogleUser\",\n  \"/api/saveFacebookUser\",\n  \"/api/saveEmailUser\",\n  \"/api/saveUserBySuburb\",\n  \"/api/signUp\",\n  \"/api/validateTokenPath\",\n  \"/api/cp/getCPInfo\",\n  \"/api/file/upload\",\n  //\"/api/userInfo/favorites\", //remover esto cuando se agregue authenticacion en mobile\n  //\"/api/userInfo/addFavorites\", //remover esto cuando se agregue authenticacion en mobile\n  //\"/api/userInfo/removeFavorites\", //remover esto cuando se agregue authenticacion en mobile\n  \"/api/suburb/getInviteByCode\",\n  \"/api/notification/test\",\n  //\"/api/suburb/getStreets\", //remover esta api\n  //\"/api/suburb/getStreetNumbers\", //remover esta api\n  //\"/api/userInfo/getUsersByAddress\", //remover esta api\n];\n\nconst protectedApi = [\"/api/suburb/approveReject\"];\n\nmodule.exports = class Auth {\n  validateToken(token) {\n    let user = User;\n\n    let def = user.isValidToken(token);\n    return new Promise(\n      (resolve, reject) => {\n        def.then(function (isValid) {\n          if (isValid) resolve({ valid: true, message: \"the token is valid\" });\n          else\n            resolve({\n              valid: false,\n              message: \"the token is not valid\",\n            });\n        });\n      },\n      (err) => reject({ valid: false, message: \"The token cannot be checked.\" })\n    );\n  }\n\n  validateAdminUser(token) {\n    let user = User;\n    let getPayload = user.getTokenPayload(token);\n    return new Promise(\n      (resolve, reject) => {\n        getPayload.then((payload) => {\n          if (payload.userType !== userTypes.admin)\n            reject({\n              valid: false,\n              message:\n                \"The user does not have permissions to execute this api.\",\n            });\n          else resolve({ valid: true, message: \"Ok\" });\n        });\n      },\n      (err) => {\n        console.log(err);\n        reject({\n          valid: false,\n          message: \"The user does not have permissions to execute this api.\",\n        });\n      }\n    );\n  }\n\n  isOpenApi(apiPath) {\n    return openApi.indexOf(apiPath) !== -1 ? true : false;\n  }\n\n  isProtectedApi(apiPath) {\n    return protectedApi.indexOf(apiPath) !== -1 ? true : false;\n  }\n\n  validateApiRequest(apiPath, token) {\n    if (this.isOpenApi(apiPath))\n      return new Promise((resolve) =>\n        resolve({ valid: true, message: \"the api is open.\" })\n      );\n    else if (this.isProtectedApi(apiPath)) {\n      return new Promise((resolve, reject) => {\n        this.validateAdminUser(token)\n          .then((res) => {\n            let validateToken = this.validateToken(token);\n            validateToken\n              .then((res) => resolve(res))\n              .catch((err) => reject(err));\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    } else {\n      return this.validateToken(token);\n    }\n  }\n};\n","const User = require(\"../models/user\");\nconst menus = require(\"../constants/menusConfig\").menus;\n\n/**\n * Get menus by logged user\n */\nexports.getMenusByUser = async (userToken) => {\n  return new Promise((resolve, reject) => {\n    let getPayload = User.getTokenPayload(userToken);\n    getPayload.then(payload => {\n      const { userType, loginName } = payload;\n\n      let userMenus = menus.filter(menu => {\n        let types = menu.validUserTypes.filter(g => g.toLowerCase() === userType.toLowerCase());\n        return types.length > 0;\n      }).map(item => ({ name: item.name, path: item.path, visible: item.visible, icon: item.icon, order: item.order }));\n\n\n      resolve(userMenus);\n    }, errP => {\n      reject({ valid: false, message: 'The token is not allowed' });\n    });\n  });\n};","const PostalCode = require(\"../models/postalCode\");\n\n\nexports.getCPInfo = async (postalCode) => {\n    return new Promise((resolve, reject) => {\n        if (postalCode.length > 2) {\n            getInfo = PostalCode.getCPInfo(postalCode);\n            getInfo.then(cp => {\n                resolve(cp);\n            }, err => {\n                reject({ valid: false, message: 'No se pudo obtener la informaion del codigo postal.' });\n            });\n        }\n        else {\n            reject({ valid: false, message: 'La longitud del codigo postal no es valida.' });\n        }\n    });\n}","const Expo = require(\"expo-server-sdk\").Expo;\n\nlet expo = new Expo();\n\nconst getMessagesBatches = (pushTokens, message) => {\n  let messages = [];\n  pushTokens.forEach((token) => {\n    if (!Expo.isExpoPushToken(token)) {\n      console.error(`Push token ${token} is not a valid push token`);\n      //continue;\n    }\n\n    messages = [...messages, { ...message, to: token }];\n  });\n  return expo.chunkPushNotifications(messages);\n};\n\nconst sendExpoNotification = async (chunks) => {\n  //(async () => {\n  // Send the chunks to the Expo push notification service. There are\n  // different strategies you could use. A simple one is to send one chunk at a\n  // time, which nicely spreads the load out over time:\n  let tickets = [];\n  for (let chunk of chunks) {\n    try {\n      let ticketChunk = await expo.sendPushNotificationsAsync(chunk);\n      console.log(ticketChunk);\n      tickets.push(...ticketChunk);\n      // NOTE: If a ticket contains an error code in ticket.details.error, you\n      // must handle it appropriately. The error codes are listed in the Expo\n      // documentation:\n      // https://docs.expo.io/push-notifications/sending-notifications/#individual-errors\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  return tickets;\n  //})();\n};\n\nconst checkTickets = async (tickets) => {\n  // Later, after the Expo push notification service has delivered the\n  // notifications to Apple or Google (usually quickly, but allow the the service\n  // up to 30 minutes when under load), a \"receipt\" for each notification is\n  // created. The receipts will be available for at least a day; stale receipts\n  // are deleted.\n  //\n  // The ID of each receipt is sent back in the response \"ticket\" for each\n  // notification. In summary, sending a notification produces a ticket, which\n  // contains a receipt ID you later use to get the receipt.\n  //\n  // The receipts may contain error codes to which you must respond. In\n  // particular, Apple or Google may block apps that continue to send\n  // notifications to devices that have blocked notifications or have uninstalled\n  // your app. Expo does not control this policy and sends back the feedback from\n  // Apple and Google so you can handle it appropriately.\n  let receiptIds = [];\n  for (let ticket of tickets) {\n    // NOTE: Not all tickets have IDs; for example, tickets for notifications\n    // that could not be enqueued will have error information and no receipt ID.\n    if (ticket.id) {\n      receiptIds.push(ticket.id);\n    }\n  }\n\n  let receiptIdChunks = expo.chunkPushNotificationReceiptIds(receiptIds);\n  //(async () => {\n  // Like sending notifications, there are different strategies you could use\n  // to retrieve batches of receipts from the Expo service.\n  for (let chunk of receiptIdChunks) {\n    try {\n      let receipts = await expo.getPushNotificationReceiptsAsync(chunk);\n      console.log(receipts);\n\n      // The receipts specify whether Apple or Google successfully received the\n      // notification and information about an error, if one occurred.\n      for (let receiptId in receipts) {\n        let { status, message, details } = receipts[receiptId];\n        if (status === \"ok\") {\n          //continue;\n        } else if (status === \"error\") {\n          console.error(\n            `There was an error sending a notification: ${message}`\n          );\n          if (details && details.error) {\n            // The error codes are listed in the Expo documentation:\n            // https://docs.expo.io/push-notifications/sending-notifications/#individual-errors\n            // You must handle the errors appropriately.\n            console.error(`The error code is ${details.error}`);\n          }\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  //})();\n};\n\nconst sendPushNotification = async (pushTokens, message) => {\n  try {\n    let chunks = getMessagesBatches(pushTokens, message);\n    let tickets = await sendExpoNotification(chunks);\n    await checkTickets(tickets);\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nmodule.exports = {\n  sendPushNotification,\n};\n","const Suburb = require(\"../models/suburb\");\nconst suburbStatus = require(\"../constants/types\").suburbStatus;\nconst SuburbInvite = require(\"../models/suburbInvite\");\nconst User = require(\"../models/user\");\nconst CryptoJS = require(\"crypto-js\");\nvar pjson = require(\"../../package.json\");\n\nconst getSuburbStatus = (statusName) => {\n  let status = suburbStatus.filter((st) => st.status === statusName);\n  return status[0];\n};\n\nconst encryption = (data) => {\n  if (!data) return \"\";\n  return CryptoJS.AES.encrypt(data, pjson.cryptoKey).toString();\n};\n\nconst decryption = (data) => {\n  if (!data) return \"\";\n  var bytes = CryptoJS.AES.decrypt(data, pjson.cryptoKey);\n  return bytes.toString(CryptoJS.enc.Utf8);\n};\n\nconst saveSuburb = (suburbObj) => {\n  return new Promise((resolve, reject) => {\n    Suburb.SaveSuburb(suburbObj).then((sub, err) => {\n      if (!err)\n        resolve({\n          success: true,\n          message: \"La colonia fue guardada correctamente.\",\n          id: sub.id,\n        });\n      else\n        reject({\n          success: false,\n          message:\n            err.message || \"Ocurrio un error al intentar guardar la colonia.\",\n        });\n    });\n  });\n};\n\nconst suburbAddStatus = (id, status) => {\n  return new Promise((resolve, reject) => {\n    Suburb.UpdateStatus(id, status).then((sub, err) => {\n      if (!err)\n        resolve({\n          success: true,\n          message: \"El status de la colonia fue actualizado correctamente.\",\n        });\n      else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar actualizar el estatus de la colonia.\",\n        });\n    });\n  });\n};\n\nconst suburbAddStatusByName = (name, postalCode, status) => {\n  return new Promise((resolve, reject) => {\n    Suburb.UpdateStatusByName(name, postalCode, status).then((sub, err) => {\n      if (!err)\n        resolve({\n          success: true,\n          message: \"El status de la colonia fue actualizado correctamente.\",\n        });\n      else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar actualizar el estatus de la colonia.\",\n        });\n    });\n  });\n};\n\nconst getSuburbByAdminUser = (userId) => {\n  return new Promise((resolve, reject) => {\n    Suburb.GetSuburbByUserId(userId).then((sub, err) => {\n      if (!err) resolve(sub);\n      else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar obtener la colonia por usuario administrador.\",\n        });\n    });\n  });\n};\n\nconst getSuburbById = (suburbId) => {\n  return new Promise((resolve, reject) => {\n    Suburb.GetSuburb(suburbId)\n      .then((sub, err) => {\n        if (!err) resolve(sub);\n        else\n          reject({\n            success: false,\n            message:\n              err.message || \"Ocurrio un error al intentar obtener la colonia.\",\n          });\n      })\n      .catch((err) => reject(err));\n  });\n};\n\nconst addSuburbInvite = (suburbId, name, street, streetNumber, userType) => {\n  return new Promise((resolve, reject) => {\n    let _code =\n      Math.random().toString(36).substring(2, 4).toUpperCase() +\n      Math.random().toString(36).substring(2, 4).toUpperCase();\n    console.log(encryption(street));\n    SuburbInvite.SaveSuburbInvite({\n      code: _code,\n      suburbId,\n      name,\n      street: encryption(street),\n      streetNumber: encryption(streetNumber),\n      userType,\n    }).then((subInv, err) => {\n      if (!err) {\n        Suburb.AddSuburbInvite(suburbId, subInv._id.toString()).then(\n          (sub, err) => {\n            if (!err) resolve(subInv);\n            else\n              reject({\n                success: false,\n                message:\n                  err.message ||\n                  \"Ocurrio un error al intentar agregar una invitacion a usuario\",\n              });\n          }\n        );\n      } else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar agregar una invitacion a usuario\",\n        });\n    });\n  });\n};\n\nconst getSuburbInvite = (code) => {\n  return new Promise((resolve, reject) => {\n    SuburbInvite.GetInviteByCode(code)\n      .then((subInvite, err) => {\n        if (!err) {\n          Suburb.GetSuburbBasicInfo(subInvite.suburbId.toString()).then(\n            (suburb, err) => {\n              if (!err) {\n                const { street, streetNumber, ...props } = subInvite._doc;\n                const result = {\n                  suburb: {\n                    ...suburb,\n                  },\n                  invite: {\n                    street: decryption(street),\n                    streetNumber: decryption(streetNumber),\n                    ...props,\n                  },\n                };\n                resolve(result);\n              } else {\n                reject({\n                  success: false,\n                  message:\n                    err.message ||\n                    \"Ocurrio un error al intentar obtener la invitación\",\n                });\n              }\n            }\n          );\n        } else\n          reject({\n            success: false,\n            message:\n              err.message ||\n              \"Ocurrio un error al intentar obtener la invitación\",\n          });\n      })\n      .catch((err) => {\n        reject({\n          sucess: false,\n          message:\n            err.message ||\n            \"Ocurrion un error al intentar obtener la invitación\",\n        });\n      });\n  });\n};\n\nmodule.exports = {\n  saveSuburb,\n  suburbAddStatus,\n  suburbAddStatusByName,\n  getSuburbByAdminUser,\n  getSuburbById,\n  getSuburbStatus,\n  addSuburbInvite,\n  getSuburbInvite,\n};\n","const User = require(\"../models/user\");\nconst request = require(\"request\");\nconst userTypes = require(\"../constants/types\").userTypes;\n\nconst saveUser = (userObj) => {\n  return new Promise((resolve, reject) => {\n    User.getLogin(userObj.loginName).then(\n      (login) => {\n        if (login) {\n          reject({\n            success: false,\n            message: \"El usuario existe actualmente en la base de datos.\",\n          });\n        } else {\n          //create the user\n          User.saveUser(\n            userObj.userType\n              ? userObj\n              : { ...userObj, userType: userTypes.guest }\n          ).then(\n            (usr, err) => {\n              //check if there is an error\n              if (!err)\n                resolve({\n                  success: true,\n                  message: \"Has sido registrado correctamente.\",\n                  userData: { ...usr },\n                });\n              else\n                reject({\n                  success: false,\n                  message: err.message || \"No se pudo registrar el usuario.\",\n                });\n            },\n            (err) => {\n              reject({ success: false, message: err.message });\n            }\n          );\n        }\n      },\n      (err) => {\n        reject({\n          success: false,\n          message:\n            err.message || \"Ocurrio un error al tratar de guardar el usuario.\",\n        });\n      }\n    );\n  });\n};\n\nconst updateUser = async (userObj) => {\n  return new Promise((resolve, reject) => {\n    User.updateUser(userObj).then(\n      (usr, err) => {\n        if (!err)\n          resolve({\n            success: true,\n            message: \"Ha sido actualizado correctamente.\",\n          });\n        else\n          reject({\n            success: false,\n            message: err.message || \"No se pudo actualizar el usuario.\",\n          });\n      },\n      (err) => {\n        reject({ success: false, message: err.message });\n      }\n    );\n  });\n};\n\nconst validateRecaptcha = async (token) => {\n  const secretKey = process.env.RECAPTCHA_SECRET;\n  const verificationURL = `https://www.google.com/recaptcha/api/siteverify?secret=${secretKey}&response=${token}`;\n\n  return new Promise((resolve, reject) => {\n    request.post(verificationURL, (error, resG, body) => {\n      if (error)\n        reject({\n          success: false,\n          message:\n            \"Por favor intenta de nuevo (no es posible validar recaptcha).\",\n        });\n      let status = JSON.parse(body);\n      if (!status.success)\n        reject({ success: false, message: \"Por favor intenta de nuevo.\" });\n      else if (status.score <= 0.5)\n        reject({\n          success: false,\n          message: \"Por favor intenta de nuevo (score demasiado bajo).\",\n        });\n      else resolve({ success: true, message: \"recaptcha valido.\" });\n    });\n  });\n};\n\nconst saveUserWithPassword = async (userObj) => {\n  const { password } = userObj;\n  return new Promise((resolve, reject) => {\n    User.encryptPassword(password).then(\n      (resEncrypt) => {\n        let encryptedPassword = resEncrypt.hash;\n        userObj.password = encryptedPassword;\n        saveUser(userObj).then(\n          (result) => {\n            resolve(result);\n          },\n          (err) => {\n            reject(err);\n          }\n        );\n      },\n      (err) => {\n        reject({ success: false, message: err.message || \"Bad request.\" });\n      }\n    );\n  });\n};\n\nconst getUserByType = async (userType) => {\n  try {\n    return await User.find({\n      userType: userType,\n    });\n  } catch (ex) {\n    return ex;\n  }\n};\n\nconst getUserByToken = async (token) => {\n  try {\n    let payload = await User.getTokenPayload(token);\n    return await User.findById(payload.userId);\n  } catch (ex) {\n    return ex;\n  }\n};\n\nconst getUserById = async (id) => {\n  try {\n    return await User.getUserById(id);\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst getUserFavorites = async (userId) => {\n  try {\n    let payload = await User.getUserFavs(userId);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst saveUserFavorites = async (userId, favs) => {\n  try {\n    let payload = await User.addUserFavs(userId, favs);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst removeUserFavorites = async (userId, favs) => {\n  try {\n    let payload = await User.removeUserFavs(userId, favs);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst addUserPushToken = async (userId, pushToken) => {\n  try {\n    let payload = await User.addUserPushToken(userId, pushToken);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst getUsersBySuburb = async (suburbId) => {\n  try {\n    let users = await User.getUsersBySuburb(suburbId);\n    return users;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getUsersBySuburbStreet = async (suburbId, street) => {\n  try {\n    let users = await User.getUsersBySuburbStreet(suburbId, street);\n    return users;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getUsersByAddress = async (suburbId, street, streetNumber) => {\n  try {\n    let users = await User.getUsersByAddress(suburbId, street, streetNumber);\n    return users;\n  } catch (err) {\n    throw err;\n  }\n};\n\nmodule.exports = {\n  saveUser,\n  validateRecaptcha,\n  saveUserWithPassword,\n  getUserByType,\n  getUserByToken,\n  updateUser,\n  getUserFavorites,\n  saveUserFavorites,\n  removeUserFavorites,\n  getUserById,\n  addUserPushToken,\n  getUsersBySuburb,\n  getUsersBySuburbStreet,\n  getUsersByAddress,\n};\n","const User = require(\"../models/user\");\nconst permissions = require(\"../constants/menusConfig\").menus;\n\n\n\nconst validateWithPayload = (path, payload) => {\n    let valid =  { valid: false, message: 'la pantalla no es valida para tu usuario.' };\n    if(!payload || !payload.userType)\n        return valid;\n\n    const { userType } = payload;\n    let validPath = permissions.filter(p => {\n        let types = p.validUserTypes.filter(g => g.toLowerCase() === userType.toLowerCase());\n        return types.length > 0 && p.path.toLowerCase() === path.toLocaleLowerCase();\n\n    });\n\n    if (validPath.length > 0)\n        valid = { valid: true, message: 'ok' };\n    return valid;\n};\n\n\nexports.permissionValid = (path, jwt) => {\n    return new Promise((resolve, reject) => {\n        let user = User;\n        let isValid = user.isValidToken(jwt);\n        isValid.then(res => {\n            let getPayload = user.getTokenPayload(jwt);\n            getPayload.then(payload => {\n                let valid = validateWithPayload(path, payload);\n                if (valid.valid)\n                    resolve(valid);\n                else\n                    reject(valid);\n            }, errP => {\n                reject({ valid: false, message: 'los datos de la sesión no son validos.' });\n            });\n        }, err => {\n            reject({ valid: false, message: 'el token de la sesión no es valido.' });\n        });\n    });\n}","const Auth = require(\"../logic/auth\");\n\nconst validApiRequest = (apiPath, token) => {\n  return new Promise((resolve, reject) => {\n    let auth = new Auth();\n    auth.validateApiRequest(apiPath, token).then(\n      (res) => {\n        resolve(res);\n      },\n      (err) =>\n        reject({\n          valid: false,\n          message: err.message ? err.message : `Error: ${JSON.stringify(err)}`,\n        })\n    );\n  });\n};\n\nexports.checkApiAuth = (req, res, next) => {\n  console.log(`validando si el request esta autenticado...`);\n  //check request headers over here to know if the request is authenticated\n  let apiPath = req.baseUrl,\n    token = req.headers[\"authorization\"];\n\n  validApiRequest(apiPath, token).then(\n    (result) => {\n      if (result.valid) next();\n      else\n        res\n          .status(\"401\")\n          .json({ success: false, error: \"Unauthorized request.\" });\n    },\n    (err) =>\n      res.status(\"401\").json({\n        success: false,\n        error: err.message || \"An error occurs while validating the request.\",\n      })\n  );\n};\n","const mongoose = require(\"mongoose\");\nconst Menu = require(\"./menu\");\nconst Role = require(\"./role\");\nconst User = require(\"./user\");\nconst SuburbInvite = require(\"./suburbInvite\");\nconst PostalCode = require(\"./postalCode\");\n\nconst models = { Menu, Role, User, PostalCode, SuburbInvite };\n\nconst connectDb = () => {\n  //setup the mongo connection\n  let mConn = mongoose.connect(process.env.DB_CONNECTION, {\n    useNewUrlParser: true,\n  });\n\n  mongoose.connection.on(\n    \"error\",\n    console.error.bind(console, \"Mongo db connection error: \")\n  );\n  return mConn;\n};\n\nmodule.exports = { connectDb, models };\n","const moment = require('moment');\nconst mongoose = require('mongoose');\n//const Base = require('./baseModel');\n\nconst MenuSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        required: 'Enter the menu name'\n    },\n    link: {\n        type: String,\n        required: 'Enter the menu link'\n    },\n    parentId: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'Menu'\n    },\n    position: {\n        type: Number,\n        default: 1\n    },\n    icon: {\n        type: String\n    },\n    visible: {\n        type: Boolean,\n        default: true\n    },\n    active: {\n        type: Boolean,\n        default: true\n    },\n    type: {\n        type: String\n    },\n    transtime: {\n        type: Date,\n        default: moment.utc()\n    }\n});\n\n\nMenuSchema.statics = {\n    getMenuById: function (menuId) { //, projectId){\n        return this.findOne({\n            _id: menuId //, \n            //project: projectId\n        });\n    },\n    updateMenu: function (objMenu) {\n        return this.update({\n            _id: objMenu._id\n        }, {\n                $set: {\n                    'name': objMenu.name,\n                    'link': objMenu.link,\n                    'parentId': objMenu.parentId,\n                    'position': objMenu.position,\n                    'icon': objMenu.position,\n                    'visible': objMenu.visible,\n                    'active': objMenu.active,\n                    'type': objMenu.active,\n                    'transtime': moment.utc()\n                }\n            });\n    },\n    deleteMenu: function (menuId) {\n        return this.deleteMany({\n            _id: menuId\n        });\n    },\n    getChildMenus: function (menuId) {\n        return this.find({\n            parentId: menuId\n        });\n    },\n    getChildMenusRecursively: function (parents) {\n        let _this = this;\n        let getThisLevelChilds = this.getChildMenus(parents);\n        let elements = [];\n        return new Promise((resolve, reject) => {\n            getThisLevelChilds.then((childs) => {\n                if (childs.length > 0) {\n                    elements = JSON.parse(JSON.stringify(childs)).map((child) => {\n                        return child._id;\n                    });\n                    let getInnerChilds = _this.getChildMenusRecursively(elements);\n                    getInnerChilds.then((result) => {\n                        resolve(elements.concat(result));\n                    });\n                } else\n                    resolve(elements);\n            }, (err) => {\n                reject(err);\n            })\n        });\n    },\n    getParentMenusRecursively: function (menuId) {\n        let _this = this;\n        let getThisLevel = this.getMenuById(menuId);\n        let elements = [];\n        return new Promise((resolve, reject) => {\n            getThisLevel.then((menu) => {\n                menu = JSON.parse(JSON.stringify(menu))\n                if (menu && menu.parentId) {\n                    elements.push(menu.parentId);\n                    let getMoreParents = _this.getParentMenusRecursively(menu.parentId);\n                    getMoreParents.then((result) =>\n                        resolve(elements.concat(result)));\n                } else\n                    resolve(elements);\n            }, err => reject(err));\n        });\n    },\n    getMenus: function (menus) {\n        return this.find({ _id: menus });\n    }\n}\n\n\n\n\nconst Menu = mongoose.model(\"Menu\", MenuSchema);\n\nmodule.exports = Menu;","const mongoose = require('mongoose');\n\nconst PostalCodeSchema = new mongoose.Schema({\n    d_codigo: {\n        type: String\n    },\n    d_asenta: {\n        type: String\n    },\n    d_tipo_asenta: {\n        type: String\n    },\n    D_mnpio: {\n        type: String\n    },\n    d_estado: {\n        type: String\n    },\n    d_ciudad: {\n        type: String\n    },\n    d_CP: {\n        type: String\n    },\n    c_estado: {\n        type: String\n    },\n    c_oficina: {\n        type: String\n    },\n    c_CP: {\n        type: String\n    },\n    c_tipo_asenta: {\n        type: String\n    },\n    c_mnpio: {\n        type: String\n    },\n    id_asenta_cpcons: {\n        type: String\n    },\n    d_zona: {\n        type: String\n    },\n    c_cve_ciudad: {\n        type: String\n    }\n});\n\nPostalCodeSchema.statics = {\n    getCPInfo: function (cp) {\n        let regCp = new RegExp(cp)\n        return this.find({ d_codigo: regCp }).limit(100);\n    }\n};\n\nconst PostalCode = mongoose.model(\"PostalCode\", PostalCodeSchema);\n\nmodule.exports = PostalCode;","const moment = require('moment');\nconst mongoose = require(\"mongoose\");\n\nconst RoleSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        required: 'Enter the name of the role'\n    },\n    description: {\n        type: String,\n        required: 'Enter the description of the role'\n    },\n    siteAdministration: {\n        type: Boolean,\n        default: false\n    },\n    sysAdministrator: {\n        type: Boolean,\n        default: false\n    },\n    active: {\n        type: Boolean,\n        default: true\n    },\n    menus: [{\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'Menu'\n    }],\n    transtime: {\n        type: Date,\n        default: moment.utc()\n    }\n});\n\nRoleSchema.statics = {\n    deleteRole: function (roleId) {\n        return this.deleteMany({\n            _id: roleId\n        });\n    },\n    setRoleMenu: function (roleId, menus) {\n        if (!Array.isArray(menus)) menus = [menus];\n        return this.update({\n            _id: roleId\n        }, {\n                $addToSet: {\n                    menus: {\n                        $each: menus\n                    }\n                }\n            }, {\n                multi: true\n            });\n    },\n    deleteRoleMenu: function (roles, menus) {\n        if (!Array.isArray(menus)) menus = [menus];\n        if (!Array.isArray(roles)) roles = [roles];\n\n        return this.update({\n            _id: {\n                $in: roles\n            }\n        }, {\n                $pullAll: {\n                    menus: menus\n                }\n            }, {\n                multi: true\n            });\n    },\n    getRoleMenus: function (roleId) {\n        return new Promise((resolve, reject) => {\n            this.find({\n                _id: roleId\n            }).populate('menus').exec((err, result) => {\n                if (err) reject(err);\n                resolve(result);\n            });\n        });\n    }\n};\n\nconst Role = mongoose.model(\"Role\", RoleSchema);\n\nmodule.exports = Role;","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst GuestSchema = new mongoose.Schema({\n  name: {\n    type: String,\n  },\n  vehicle: {\n    type: String,\n  },\n  subject: {\n    type: String,\n  },\n  isService: {\n    type: Boolean,\n    default: false,\n  },\n  plates: {\n    type: String,\n  },\n  additionalInformation: {\n    type: String,\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  arriveOn: {\n    type: Date,\n  },\n  leaveOn: {\n    type: Date,\n  },\n  count: {\n    type: Number,\n    default: 0,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nmodule.exports = GuestSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst PushTokenSchema = new mongoose.Schema({\n  token: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nmodule.exports = PushTokenSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst SuburbFileSchema = new mongoose.Schema({\n  fileName: {\n    type: String,\n  },\n  originalName: {\n    type: String,\n  },\n  actionType: {\n    type: String,\n  },\n  mimetype: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nmodule.exports = SuburbFileSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst SuburbStatusSchema = new mongoose.Schema({\n  status: {\n    type: String,\n  },\n  description: {\n    type: String,\n  },\n  details: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\n//const SuburbStatus = mongoose.model(\"SuburbStatus\", SuburbStatusSchema);\n\nmodule.exports = SuburbStatusSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst SuburbStatusSchema = require(\"./schemas/suburbStatusSchema\");\nconst SuburbFileSchema = require(\"./schemas/suburbFileSchema\");\n\nconst SuburbSchema = new mongoose.Schema({\n  name: {\n    type: String,\n  },\n  location: {\n    type: String,\n  },\n  postalCode: {\n    type: Number,\n  },\n  active: {\n    type: Boolean,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n  userAdmins: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n  ],\n  /*\n        estatus validos:\n        activacionPendiente,\n        activacionRechazada\n        activadoBasico,\n        activadoPlus\n    */\n  status: [SuburbStatusSchema],\n  files: [SuburbFileSchema],\n  suburbInvites: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"SuburbInvite\",\n    },\n  ],\n});\n\nSuburbSchema.statics = {\n  SaveSuburb: function (suburbObj) {\n    let suburb = new this(suburbObj);\n    return suburb.save();\n  },\n  UpdateStatus: function (id, status) {\n    if (!Array.isArray(status)) status = [status];\n    return this.updateOne(\n      { _id: id },\n      {\n        $addToSet: {\n          status: {\n            $each: status,\n          },\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  UpdateStatusByName: function (name, postalCode) {\n    if (!Array.isArray(status)) status = [status];\n    return this.updateOne(\n      { name: name, postalCode: postalCode },\n      {\n        $addToSet: {\n          status: {\n            $each: status,\n          },\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  AddSuburbInvite: function (id, userInviteId) {\n    if (!Array.isArray(userInviteId)) userInviteId = [userInviteId];\n    return this.updateOne(\n      { _id: id },\n      {\n        $addToSet: {\n          suburbInvites: {\n            $each: userInviteId,\n          },\n        },\n      },\n      { multi: true }\n    );\n  },\n  GetSuburb: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"userAdmins\", \"User\")\n        .populate(\"suburbInvites\", \"SuburbInvite\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          let {\n            name,\n            location,\n            postalCode,\n            active,\n            transtime,\n            status,\n            suburbInvites,\n          } = result;\n          resolve({\n            name,\n            location,\n            postalCode,\n            active,\n            transtime,\n            status,\n            suburbInvites,\n          });\n        });\n    });\n  },\n  GetSuburbBasicInfo: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        let { name, location, postalCode, active, transtime } = result;\n        resolve({\n          name,\n          location,\n          postalCode,\n          active,\n          transtime,\n        });\n      });\n    });\n  },\n  GetSuburbByName: function (postalCode, name) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        postalCode: postalCode,\n        name: name,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result);\n      });\n    });\n  },\n  GetSuburbByUserId: function (userId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ userAdmins: mongoose.Types.ObjectId(userId) }).exec(\n        (err, result) => {\n          if (err) reject(err);\n          resolve(result);\n        }\n      );\n    });\n  },\n};\n\nconst Suburb = mongoose.model(\"Suburb\", SuburbSchema);\n\nmodule.exports = Suburb;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst SuburbInviteSchema = new mongoose.Schema({\n  code: {\n    type: String,\n  },\n  name: {\n    type: String,\n  },\n  street: {\n    type: String,\n  },\n  streetNumber: {\n    type: String,\n  },\n  suburbId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"Suburb\",\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  usedBy: {\n    type: String,\n  },\n  updatedTranstime: {\n    type: Date,\n  },\n  userType: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nSuburbInviteSchema.statics = {\n  SaveSuburbInvite: function (userInviteObj) {\n    let userInvite = new this(userInviteObj);\n    return userInvite.save();\n  },\n  UpdateSuburbInviteUsed: function (code, usedBy) {\n    return this.updateOne(\n      { $and: [{ code: code }, { active: true }] },\n      {\n        $set: {\n          usedBy: usedBy,\n          active: false,\n          updatedTranstime: moment.utc(),\n        },\n      }\n    );\n  },\n  GetInviteByCode: function (code) {\n    return new Promise((resolve, reject) => {\n      return this.findOne({ code: code, active: true }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result)\n          reject({ success: false, message: \"Cannot find the invite code.\" });\n        resolve(result);\n      });\n    });\n  },\n};\n\nconst SuburbInvite = mongoose.model(\"SuburbInvite\", SuburbInviteSchema);\n\nmodule.exports = SuburbInvite;\n","const moment = require(\"moment\");\nconst bcrypt = require(\"bcryptjs\");\nconst jwt = require(\"jsonwebtoken\");\nconst mongoose = require(\"mongoose\");\nconst base64 = require(\"base-64\");\nconst GuestSchema = require(\"./schemas/guestSchema\");\nconst PushTokenSchema = require(\"./schemas/pushTokenSchema\");\n\nconst UserSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: \"Ingresa el nombre\",\n  },\n  lastName: {\n    type: String,\n  },\n  password: {\n    type: String,\n  },\n  loginName: {\n    type: String,\n    unique: true,\n  },\n  email: {\n    type: String,\n  },\n  cellphone: {\n    type: String,\n  },\n  photoUrl: {\n    type: String,\n  },\n  street: {\n    type: String,\n  },\n  streetNumber: {\n    type: String,\n  },\n  loginAttempts: {\n    type: Number,\n    default: 0,\n  },\n  temporaryDisabled: {\n    type: Boolean,\n    default: false,\n  },\n  disabledSince: {\n    type: Date,\n  },\n  lastAccess: {\n    type: Date,\n    default: moment.utc(),\n  },\n  /**\n   * valid user types:\n   *  guest -> a guest user\n   *  guard -> a guard of the suburb\n   *  admin -> an administrator of the suburb\n   *  sudo  -> an administrator of the app\n   */\n  userType: {\n    type: String,\n    default: \"guest\",\n  },\n  userConfirmed: {\n    type: Boolean,\n  },\n  facebookId: {\n    type: String,\n  },\n  googleId: {\n    type: String,\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n  roles: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Role\",\n    },\n  ],\n  suburb: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"Suburb\",\n  },\n  favorites: [GuestSchema],\n  pushTokens: [PushTokenSchema],\n});\n\n/**\n * Private attributes\n */\nconst _secretKey = process.env.JWT_SECRET;\n\nlet _getExpDate = () => {\n  var expTimeByMin =\n    process.env.exptoken != null ? process.env.exptoken : \"1440\";\n  return moment().add(expTimeByMin, \"minutes\").unix();\n};\n\nlet _getValidApis = (id) => {\n  //return an array with the valid apis\n  return [];\n};\n\nlet _getValidMenus = (id) => {\n  //return an array with the valid menus for the user\n  return [];\n};\n\n/**\n * Method to validate exp from the user token.\n * @param {*} expDate\n */\nlet _validateExpDate = function (expDate) {\n  let currentTime = moment().unix();\n  return expDate > currentTime;\n};\n\nUserSchema.methods = {\n  validatePassword: function (_password) {\n    var _this = this;\n    let pass = base64.decode(_password);\n    return new Promise(\n      (resolve, reject) => {\n        if (_this.temporaryDisabled) {\n          let wait = 10 - this.getDisabledSince();\n          if (wait > 0)\n            reject({\n              success: false,\n              message: `El usuario esta temporalmente desabilitado, por favor espere ${wait} minutos para volver a intentar.`,\n            });\n          else\n            this.increaseLoginAttempts(true).then((res) => {\n              this.validatePassword(_password).then(\n                (result) => resolve(result),\n                (err) => reject(err)\n              );\n            });\n        } else\n          bcrypt.compare(pass, _this.password).then((valid) => {\n            if (valid) {\n              //reset logint attempts\n              this.increaseLoginAttempts(true).then(\n                (res) => {\n                  resolve({\n                    success: true,\n                    message: \"La contraseña coincide.\",\n                  });\n                },\n                (err) =>\n                  reject({ success: false, message: \"Un error occurio.\" })\n              );\n            } else {\n              //increase login attempts\n              this.increaseLoginAttempts().then(\n                (res) => {\n                  reject({\n                    success: false,\n                    message: \"La contraseña no es valida.\",\n                  });\n                },\n                (err) =>\n                  reject({\n                    success: false,\n                    message: \"Un error occurio, la contraseña no es valida.\",\n                  })\n              );\n            }\n          });\n      },\n      (err) =>\n        reject({\n          success: false,\n          message: \"Ocurrio un error al comparar la contraseña.\",\n        })\n    );\n  },\n  getDisabledSince: function () {\n    let disabledSince = this.disabledSince ? this.disabledSince : moment.utc();\n    let start = moment(disabledSince);\n    let end = moment(moment.utc());\n    return end.diff(start, \"minutes\");\n  },\n  increaseLoginAttempts: function (reset) {\n    if (reset) {\n      this.loginAttempts = 0;\n      this.temporaryDisabled = false;\n      this.disabledSince = null;\n    } else {\n      let loginAttempts = this.loginAttempts + 1;\n      this.loginAttempts = loginAttempts;\n      this.temporaryDisabled = loginAttempts > 10;\n      this.disabledSince = loginAttempts > 10 ? moment.utc() : null;\n    }\n    return new Promise((resolve, reject) => {\n      return this.save().then(\n        (res) => {\n          resolve(res);\n        },\n        (err) => {\n          reject(err);\n        }\n      );\n    });\n  },\n  generateUserToken: function (_suburb) {\n    let payload = {\n      userId: this._id != undefined ? JSON.parse(JSON.stringify(this._id)) : \"\",\n      userName: `${this.name} ${this.lastName}`,\n      loginName: this.loginName,\n      suburb: this.suburb || _suburb,\n      userType: this.userType,\n      exp: _getExpDate(),\n      validApis: _getValidApis(this._id),\n      pushTokens: this.pushTokens,\n      street: this.street,\n      streetNumber: this.streetNumber,\n      //validMenus: _getValidMenus(this._id) //verify if is better put this in another schema i.e. suburb\n    };\n    let token = jwt.sign(payload, _secretKey);\n    return token;\n  },\n  setUserRole: function (userId, roles) {\n    if (!Array.isArray(roles)) roles = [roles];\n    return this.update(\n      {\n        _id: userId,\n      },\n      {\n        $addToSet: {\n          roles: {\n            $each: roles,\n          },\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  deleteUserRole: function (users, roles) {\n    if (!Array.isArray(users)) users = [users];\n    if (!Array.isArray(roles)) roles = [roles];\n\n    return this.update(\n      {\n        _id: {\n          $in: users,\n        },\n      },\n      {\n        $pullAll: {\n          roles: roles,\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  getUserRoles: function (userId) {\n    return new Promise((resolve, reject) => {\n      this.find({\n        _id: userId,\n      })\n        .populate(\"roles\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          resolve(getCleanResult(result, \"roles\"));\n        });\n    });\n  },\n};\n\nconst mergeArrayObjects = (currentFavs, newFavs) => {\n  let firstMerge = currentFavs.map((item, i) => {\n    let assign = {\n      name: item.name,\n      vehicle: item.vehicle,\n      subject: item.subject,\n      isService: item.isService,\n      count: item.count || 0,\n    };\n    newFavs.forEach((a2) => {\n      if (item.name === a2.name) {\n        assign = Object.assign(\n          {},\n          {\n            name: item.name,\n            vehicle: item.vehicle,\n            subject: item.subject,\n            isService: item.isService,\n            count: item.count || 0 + 1, //add 1 to calculate more used favs\n          },\n          a2\n        );\n      }\n    });\n    return { ...assign };\n  });\n\n  let all = [];\n  newFavs.forEach((item) => {\n    let add = true;\n    firstMerge.forEach((fm) => {\n      if (item.name.trim() === fm.name.trim()) add = false;\n    });\n    if (add) all.push(item);\n  });\n\n  let items = [...firstMerge, ...all].sort((a, b) => b.count - a.count);\n  return items.slice(0, items.length <= 30 ? items.length : 30); // solo mantendremos 30 favoritos para no sobrecargar la bd\n};\n\nconst mergePushTokens = (currentPushTokens, newPushToken) => {\n  let tokens = currentPushTokens.map((t) =>\n    t.token === newPushToken.token ? { ...newPushToken } : { ...t._doc }\n  );\n\n  let exists = tokens.filter((t) => t.token === newPushToken.token);\n  return exists.length > 0 ? [...tokens] : [...tokens, newPushToken];\n};\n\nconst extractUsersFromDoc = (mUsers) => {\n  let users = mUsers.map((u) => {\n    let { _id, name, lastName, street, streetNumber, active } = u._doc;\n    return { _id, name, lastName, street, streetNumber, active };\n  });\n  return users;\n};\n\nUserSchema.statics = {\n  /**\n   * Method to get a user by login name\n   */\n  getLogin: function (_loginName) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        loginName: _loginName,\n      }) /*.populate({\n                path: 'roles',\n                populate: {\n                    path: 'menus',\n                    model: 'Menu'\n                }\n            })*/\n        .exec((err, result) => {\n          if (err) reject(err);\n          resolve(result);\n        });\n    });\n  },\n  getUserByFacebookId: function (_facebookId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        facebookId: _facebookId,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result);\n      });\n    });\n  },\n  getUserByGoogleId: function (_googleId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        googleId: _googleId,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result);\n      });\n    });\n  },\n  getUserFavs: function (userId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result.favorites);\n      });\n    });\n  },\n  addUserFavs: function (userId, favs) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result) reject({ message: \"user not found\" });\n        let mergedFavs = mergeArrayObjects(result.favorites || [], favs);\n        this.findOneAndUpdate(\n          { _id: userId },\n          { $set: { favorites: mergedFavs } },\n          { new: true },\n          function (err, user) {\n            if (err) reject(err);\n            resolve(mergedFavs);\n          }\n        );\n        resolve(result);\n      });\n    });\n  },\n  removeUserFavs: function (userId, favs) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result) reject({ message: \"user not found\" });\n        let filterFavs = (result.favorites || []).filter((item) => {\n          let exists = favs.filter((f) => f.name.trim() === item.name.trim());\n          return exists.length === 0;\n        });\n\n        this.findOneAndUpdate(\n          { _id: userId },\n          { $set: { favorites: filterFavs } },\n          { new: true },\n          function (err, user) {\n            if (err) reject(err);\n            resolve(filterFavs);\n          }\n        );\n        resolve(result);\n      });\n    });\n  },\n  addUserPushToken: function (userId, pushToken) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result) reject({ message: \"user not found\" });\n        let mergedPushTokens = mergePushTokens(result.pushTokens, {\n          token: pushToken,\n        });\n        this.findOneAndUpdate(\n          { _id: userId },\n          { $set: { pushTokens: mergedPushTokens } },\n          { new: true },\n          function (err, user) {\n            if (err) reject(err);\n            resolve(mergedPushTokens);\n          }\n        );\n      });\n    });\n  },\n  updateUser: function (objUser) {\n    return this.updateOne(\n      {\n        _id: objUser._id,\n      },\n      {\n        $set: {\n          name: objUser.name,\n          lastName: objUser.lastName,\n          password: objUser.password,\n          email: objUser.email,\n          cellphone: objUser.cellphone,\n          active: objUser.active,\n          userType: objUser.userType,\n          transtime: moment.utc(),\n        },\n      }\n    );\n  },\n  saveUser: function (objUser) {\n    let user = new this(objUser);\n    return user.save();\n  },\n  /**\n   * Validate if the user token is active\n   */\n  isValidToken: function (_token) {\n    return new Promise(function (resolve, reject) {\n      var isValid = false;\n      try {\n        jwt.verify(_token, _secretKey, function (err, decoded) {\n          if (decoded) {\n            if (_validateExpDate(decoded.exp)) {\n              isValid = true;\n            }\n          }\n          resolve(isValid);\n        });\n      } catch (err) {\n        console.log(err);\n        reject(false);\n      }\n    });\n  },\n  /**\n   * Get the payload of the jwt token\n   * @param {String} _token\n   */\n  getTokenPayload: function (_token) {\n    return new Promise(function (resolve, reject) {\n      try {\n        jwt.verify(_token, _secretKey, function (err, decoded) {\n          resolve(decoded);\n        });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  },\n  encryptPassword: function (_password) {\n    return new Promise((resolve, reject) => {\n      let pass = base64.decode(_password);\n      let saltRounds = 10;\n      bcrypt.genSalt(saltRounds, (err, salt) => {\n        bcrypt.hash(pass, salt, (err, hash) => {\n          if (!err) resolve({ hash });\n          else reject(err);\n        });\n      });\n    });\n  },\n  getUserById: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"suburb\", \"name\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          resolve(result);\n        });\n    });\n  },\n  getUsersBySuburb: function (suburbId) {\n    return new Promise((resolve, reject) => {\n      this.find({ suburb: suburbId }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(extractUsersFromDoc(result));\n      });\n    });\n  },\n  getUsersBySuburbStreet: function (suburbId, street) {\n    return new Promise((resolve, reject) => {\n      this.find({ $and: [{ suburb: suburbId }, { street: street }] }).exec(\n        (err, result) => {\n          if (err) reject(err);\n          resolve(extractUsersFromDoc(result));\n        }\n      );\n    });\n  },\n  getUsersByAddress: function (suburbId, street, streetNumber) {\n    return new Promise((resolve, reject) => {\n      this.find({\n        $and: [\n          { suburb: suburbId },\n          { street: street },\n          { streetNumber: streetNumber },\n        ],\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(extractUsersFromDoc(result));\n      });\n    });\n  },\n};\n\nconst User = mongoose.model(\"User\", UserSchema);\n\nmodule.exports = User;\n","const router = require(\"express\").Router();\n\nconst siteAuth = require(\"../controllers/siteAuth\");\n\nconst menus = require(\"../controllers/menus\");\n\nconst postalCodes = require(\"../controllers/postalCodes\");\n\nconst signup = require(\"../controllers/signup\");\n\nconst handleFiles = require(\"../controllers/handleFile\");\n\nconst multer = require(\"multer\");\n\nconst suburb = require(\"../controllers/suburb\");\n\nconst pushNotification = require(\"../controllers/pushNotification\");\n\nlet upload = multer({ dest: \"./uploads/\" });\n\nrouter.post(\"/api/checkAuth\", siteAuth.checkAuth);\n\nrouter.post(\"/api/isValidToken\", siteAuth.isValidToken);\n\nrouter.post(\"/api/validateTokenPath\", siteAuth.validateTokenPath);\n\nrouter.post(\"/api/logOff\", siteAuth.logOff);\n\nrouter.get(\"/api/auth/fbtoken\", siteAuth.getTokenByFacebookId);\n\nrouter.get(\"/api/auth/googletoken\", siteAuth.getTokenByGoogleId);\n\nrouter.post(\"/api/signUp\", signup.signUp);\n\n//user apis\nconst userAdmin = require(\"../controllers/userAdmin\");\n\nrouter.post(\"/api/user/:userType\", userAdmin.createUserByType);\nrouter.get(\"/api/user/:userType\", userAdmin.getUserByType);\nrouter.get(\"/api/user\", userAdmin.getUserInfo);\nrouter.get(\"/api/userId\", userAdmin.getUserById);\nrouter.get(\"/api/userInfo/favorites\", userAdmin.getUserFavs);\nrouter.post(\"/api/userInfo/addFavorites\", userAdmin.addUserFavs);\nrouter.post(\"/api/userInfo/removeFavorites\", userAdmin.removeUserFavs);\nrouter.post(\"/api/userInfo/addUserPushToken\", userAdmin.addUserPushToken);\nrouter.get(\"/api/userInfo/getUsersByAddress\", userAdmin.getUsersByAddress);\n\nrouter.post(\"/api/saveGoogleUser\", userAdmin.saveGoogleUser);\nrouter.post(\"/api/saveFacebookUser\", userAdmin.saveFacebookUser);\nrouter.post(\"/api/saveEmailUser\", userAdmin.saveEmailUser);\nrouter.post(\"/api/saveUserBySuburb\", userAdmin.saveUserBySuburbId);\n\n//logged user APIs\nrouter.get(\"/api/me/menu\", menus.getMenusByUser);\n\n//postal codes\nrouter.get(\"/api/cp/getCPInfo\", postalCodes.getPostalCodeInfo);\n\n//handle files\nrouter.post(\"/api/file/upload\", upload.any(), handleFiles.uploadFile);\n\n//suburb apis\nrouter.post(\"/api/suburb/approveReject\", suburb.approveReject);\n\nrouter.get(\"/api/suburb/info\", suburb.getSuburbByAdminId);\n\nrouter.get(\"/api/suburb/get\", suburb.getSuburbById);\n\nrouter.post(\"/api/suburb/addSuburbInvite\", suburb.addSuburbInvite);\n\nrouter.get(\"/api/suburb/getInviteByCode\", suburb.getSuburbInvite);\n\nrouter.get(\"/api/suburb/getStreets\", suburb.getStreets);\n\nrouter.get(\"/api/suburb/getStreetNumbers\", suburb.getStreetNumbers);\n\n//push notifications\nrouter.post(\"/api/notification/test\", pushNotification.sendTestNotification);\nrouter.post(\n  \"/api/notification/arrive\",\n  pushNotification.sendArriveNotification\n);\n\nmodule.exports = router;\n","const express = require(\"express\");\nconst router = express.Router();\n\nconst auth = require(\"../middleware/auth\");\n\n//routes\nconst apiRoutes = require(\"./apiRoutes\");\n\nrouter.use(\"/api/*\", auth.checkApiAuth);\nrouter.all(\"/api/*\", apiRoutes);\n\nmodule.exports = router;\n","/**\n * Module dependencies.\n */\n\nvar app = require('./app');\nvar debug = require('debug')('rochacoapi:server');\nvar http = require('http');\n\n/**\n * Get port from environment and store in Express.\n */\n\nvar port = normalizePort(process.env.PORT || '4010');\napp.set('port', port);\n\n/**\n * Create HTTP server.\n */\n\nvar server = http.createServer(app);\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nfunction normalizePort(val) {\n  var port = parseInt(val, 10);\n\n  if (isNaN(port)) {\n    // named pipe\n    return val;\n  }\n\n  if (port >= 0) {\n    // port number\n    return port;\n  }\n\n  return false;\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error) {\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n\n  var bind = typeof port === 'string'\n    ? 'Pipe ' + port\n    : 'Port ' + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nfunction onListening() {\n  console.log(\"running on port\", process.env.PORT);\n  var addr = server.address();\n  var bind = typeof addr === 'string'\n    ? 'pipe ' + addr\n    : 'port ' + addr.port;\n  debug('Listening on ' + bind);\n}\n","module.exports = require(\"@sendgrid/mail\");","module.exports = require(\"base-64\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"crypto-js\");","module.exports = require(\"debug\");","module.exports = require(\"dotenv\");","module.exports = require(\"dropbox-v2-api\");","module.exports = require(\"expo-server-sdk\");","module.exports = require(\"express\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"moment\");","module.exports = require(\"mongoose\");","module.exports = require(\"morgan\");","module.exports = require(\"multer\");","module.exports = require(\"request\");"],"sourceRoot":""}