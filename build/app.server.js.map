{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/api/ApiService.js","webpack:///./src/api/ApiUtils.js","webpack:///./src/app.js","webpack:///./src/constants/menusConfig.js","webpack:///./src/constants/types.js","webpack:///./src/controllers/analytics.js","webpack:///./src/controllers/blobFiles.js","webpack:///./src/controllers/handleFile.js","webpack:///./src/controllers/menus.js","webpack:///./src/controllers/postalCodes.js","webpack:///./src/controllers/pushNotification.js","webpack:///./src/controllers/signup.js","webpack:///./src/controllers/siteAuth.js","webpack:///./src/controllers/suburb.js","webpack:///./src/controllers/userAdmin.js","webpack:///./src/controllers/vision.js","webpack:///./src/logic/addressService.js","webpack:///./src/logic/auth.js","webpack:///./src/logic/menuService.js","webpack:///./src/logic/postalCodeService.js","webpack:///./src/logic/pushNotificationService.js","webpack:///./src/logic/suburbService.js","webpack:///./src/logic/userService.js","webpack:///./src/logic/viewPermissions.js","webpack:///./src/middleware/auth.js","webpack:///./src/models/Address.js","webpack:///./src/models/globalConfig.js","webpack:///./src/models/index.js","webpack:///./src/models/menu.js","webpack:///./src/models/postalCode.js","webpack:///./src/models/role.js","webpack:///./src/models/schemas/RFIdSchema.js","webpack:///./src/models/schemas/config/childMenuSchema.js","webpack:///./src/models/schemas/config/dropdownSchema.js","webpack:///./src/models/schemas/config/fieldSchema.js","webpack:///./src/models/schemas/config/menuSchema.js","webpack:///./src/models/schemas/config/screenSchema.js","webpack:///./src/models/schemas/guestSchema.js","webpack:///./src/models/schemas/pushTokenSchema.js","webpack:///./src/models/schemas/suburbFileSchema.js","webpack:///./src/models/schemas/suburbStatusSchema.js","webpack:///./src/models/suburb.js","webpack:///./src/models/suburbConfig.js","webpack:///./src/models/suburbInvite.js","webpack:///./src/models/suburbStreet.js","webpack:///./src/models/user.js","webpack:///./src/routes/apiRoutes.js","webpack:///./src/routes/helpers.js","webpack:///./src/routes/router.js","webpack:///./src/server.js","webpack:///external \"@azure/cognitiveservices-computervision\"","webpack:///external \"@azure/ms-rest-azure-js\"","webpack:///external \"@sendgrid/mail\"","webpack:///external \"axios\"","webpack:///external \"base-64\"","webpack:///external \"bcryptjs\"","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"crypto-js\"","webpack:///external \"debug\"","webpack:///external \"dotenv\"","webpack:///external \"dropbox-v2-api\"","webpack:///external \"expo-server-sdk\"","webpack:///external \"express\"","webpack:///external \"express-http-proxy\"","webpack:///external \"fs\"","webpack:///external \"http\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"moment\"","webpack:///external \"mongoose\"","webpack:///external \"morgan\"","webpack:///external \"multer\"","webpack:///external \"request\""],"names":["axios","require","handleError","handleResponse","httpRequest","method","url","request","_headers","hdrs","data","headers","then","res","result","Promise","resolve","catch","err","reject","get","queryString","Object","keys","length","len","cnt","key","toString","deleteRequest","post","put","patch","postForm","formData","module","exports","delete","response","status","statusText","error","Error","console","dotenv","express","logger","bodyParser","cors","config","connectDb","router","app","use","urlencoded","extended","json","limit","userType","userTypes","menus","name","path","icon","visible","validUserTypes","guard","suburbAdmin","admin","guest","neighbor","order","suburbStatus","description","Api","apiAnalytics","process","env","API_ANALYTICS_URL","apiKey","API_ANALYTICS_KEY","getSuburbVisits","req","suburbId","startDate","endDate","offset","query","code","success","message","apiUrl","API_BLOB_URL","API_BLOB_KEY","User","uploadBlobs","pipe","body","log","concat","errorMessage","exception","statusCode","updateUserPicture","userId","JSON","parse","userServices","suburbService","fs","dropboxV2Api","sgMail","getFileName","nodeFileName","originalName","idx","lastIndexOf","substring","uploadFileDropbox","file","dropbox","authenticate","token","DROPBOX_TOKEN","resource","parameters","filename","originalname","readStream","createReadStream","destination","base64_encode","file_path","bitmap","readFileSync","Buffer","from","getEmailAttachments","files","attachments","forEach","push","content","sendEmail","user","suburb","setApiKey","SENDGRID_API_KEY","msg","to","OWNER_EMAILS","split","subject","text","html","send","ex","deleteTemporaryFiles","unlink","processFileUpload","lastName","cellphone","email","postalCode","section","suburbName","recaptchaToken","validCaptcha","validateRecaptcha","proms","uploadedFiles","all","saveSuburb","location","active","userAdmins","getSuburbStatus","map","fil","fileName","actionType","mimetype","updateUser","_id","id","uploadFile","next","processFiles","sendTempPassEmail","tempPassword","menuService","getMenusByUser","postalCodeService","getPostalCodeInfo","getCPInfo","pushNotificationService","getUserLeanById","getAdminUsers","getUsersByAddressId","sendTestNotification","sendPushNotification","sound","withSome","title","subtitle","sendArriveNotification","pushTokens","t","isService","redirect","sendUploadPaymentNotification","paymentType","users","promises","u","street","streetNumber","stack","screen","props","sendNotifications","sendApproveRejectedPaymentNotification","addressId","comment","paymentName","filter","sendNewSpaceReservationNotification","reservationId","adminUsers","getReservationStatusMessage","sendApproveRejectedReservationNotification","signUp","undefined","facebookId","googleId","appleId","password","loginName","saveFacebookUser","saveGoogleUser","saveAppleUser","saveEmailUser","viewPermissions","default","validateActiveUser","validateUser","userLogin","isTemporary","getLogin","login","validPass","validatePassword","generateUserToken","succes","internalAuth","checkAuth","captchaToken","usr","userData","toObject","createdAt","transtime","getTokenByFacebookId","getUserByFacebookId","_doc","getTokenByGoogleId","getUserByGoogleId","getTokenByAppleId","getUserByAppleId","isValidToken","isValid","valid","validateTokenPath","permissionValid","logOff","session","destroy","addressService","userService","moment","ObjectId","Types","approveReject","newStatus","details","getSuburbById","addStatus","suburbAddStatus","utc","getSuburbByAdminId","getSuburbByAdminUser","addSuburbInvite","getSuburbInvite","invite","getStreets","getUsersBySuburb","streets","distinctStreets","Set","s","getStreetNumbers","getUsersBySuburbStreet","streetNumbers","distinctStreetNumbers","saveSuburbConfig","sub","getSuburbConfig","saveSuburbStreet","getSuburbStreets","migrateAddresses","test","getAddressesBySuburbId","getAddressesWithUsersStates","addresses","addressesInfo","a","usersAddress","address","ua","limited","setLimitedUsersByAddress","changeLimited","getSuburbAutomationInfo","some","rfids","flat","SuburbInvite","handleFile","resV","saveUser","userConfirmed","resSave","photoUrl","updated","saveUserWithPassword","generateTempPassword","tempPass","updateTempPassword","sendMail","createUserByType","params","saveUserBySuburbId","getcode","GetInviteByCode","save","trim","updateCode","UpdateSuburbInviteUsed","getUserByType","getUserInfo","getUserByToken","getUserById","getUserFavs","userFavs","getUserFavorites","addUserFavs","favs","saveUserFavorites","removeUserFavs","removeUserFavorites","addUserPushToken","pushToken","getUsersByAddress","deleteUserInfo","removeUserInfo","getSignedUserTerms","signedUserTerms","isPasswordTemp","buff","decodedPassword","isPassTemp","updatePassword","buff2","decodedTempPassword","updateCurrentPassword","currentPassword","newPassword","signUserTerms","termsVersion","update","updateUserType","enableDisableUser","enabled","getIfUserIsLimited","isLimited","addUserRfid","rfid","removeUserRfid","ComputerVisionClient","CognitiveServicesCredentials","computerVisionKey","VISION_KEY","computerVisionEndPoint","VISION_ENDPOINT","processOCR","cognitiveServiceCredentials","client","options","recognizePrintedTextInStream","buffer","Address","Suburb","suburbAddresses","GetSuburbStreets","SaveSuburbStreet","numbers","savedAddresses","suburbUsers","updateUserPromises","number","saveUsers","GetStreetsBySuburb","getAddressByNameAndNumber","streetName","GetAddressByNameAndNumber","GetAddressesBySuburb","openApi","apiWithKey","protectedApi","Auth","validateToken","def","validateAdminUser","getPayload","getTokenPayload","payload","isOpenApi","apiPath","indexOf","isApiWithKey","isProtectedApi","validateApiRequest","PROTECTED_API_KEY","secretKey","RECAPTCHA_SECRET","verificationURL","captchaResult","userToken","userMenus","menu","types","g","toLowerCase","item","errP","PostalCode","getInfo","cp","Expo","expo","getMessagesBatches","messages","isExpoPushToken","chunkPushNotifications","sendExpoNotification","chunks","tickets","chunk","ticketChunk","sendPushNotificationsAsync","checkTickets","receiptIds","ticket","receiptIdChunks","chunkPushNotificationReceiptIds","receipts","getPushNotificationReceiptsAsync","receiptId","SuburbConfig","SuburbStreet","CryptoJS","pjson","Mongoose","statusName","st","encryption","AES","encrypt","cryptoKey","decryption","bytes","decrypt","enc","Utf8","suburbObj","SaveSuburb","UpdateStatus","suburbAddStatusByName","UpdateStatusByName","GetSuburbByUserId","GetSuburb","_code","Math","random","toUpperCase","SaveSuburbInvite","subInv","AddSuburbInvite","subInvite","GetSuburbBasicInfo","sucess","suburbData","saveConfig","SaveConfig","SaveSuburbConfig","updateConfig","UpdateConfig","GetSuburbConfig","selectedStreet","saveStreet","SaveStreet","updateStreet","UpdateStreet","GlobalConfig","AddressService","userObj","resG","score","encryptPassword","resEncrypt","encryptedPassword","hash","find","findById","isPasTemp","updatePass","terms","GetTermsAndCons","userTerms","signedTerms","latestTerms","parseFloat","reduce","i","n","signed","updateTerms","updateUserTerms","permissions","validateWithPayload","validPath","p","toLocaleLowerCase","jwt","validApiRequest","auth","stringify","checkApiAuth","baseUrl","mongoose","AddressSchema","Schema","type","String","Date","statics","insertMany","value","lean","exec","existing","e","sort","findOne","model","GlobalConfigSchema","termsAndConditions","Decimal128","SaveInitialConfig","Menu","Role","models","mConn","connect","DB_CONNECTION","useNewUrlParser","useUnifiedTopology","connection","on","bind","MenuSchema","required","link","parentId","ref","position","Number","Boolean","getMenuById","menuId","updateMenu","objMenu","$set","deleteMenu","deleteMany","getChildMenus","getChildMenusRecursively","parents","_this","getThisLevelChilds","elements","childs","child","getInnerChilds","getParentMenusRecursively","getThisLevel","getMoreParents","getMenus","PostalCodeSchema","d_codigo","d_asenta","d_tipo_asenta","D_mnpio","d_estado","d_ciudad","d_CP","c_estado","c_oficina","c_CP","c_tipo_asenta","c_mnpio","id_asenta_cpcons","d_zona","c_cve_ciudad","regCp","RegExp","RoleSchema","siteAdministration","sysAdministrator","deleteRole","roleId","setRoleMenu","Array","isArray","$addToSet","$each","multi","deleteRoleMenu","roles","$in","$pullAll","getRoleMenus","populate","RFIdSchema","ChildMenuSchema","label","color","navigate","isHome","iconName","iconFamily","DropdownSchema","FieldSchema","field","mandatory","mandatoryMessage","childMenus","ScreenSchema","Mixed","fields","GuestSchema","vehicle","plates","additionalInformation","arriveOn","leaveOn","count","PushTokenSchema","SuburbFileSchema","SuburbStatusSchema","suburbConfig","suburbStreet","SuburbSchema","suburbInvites","updateOne","userInviteId","GetSuburbByName","configId","streetId","SuburbConfigSchema","imageUrl","screens","SuburbInviteSchema","usedBy","updatedTranstime","userInviteObj","userInvite","$and","suburbStreetSchema","bcrypt","base64","UserSchema","unique","loginAttempts","temporaryDisabled","disabledSince","lastAccess","favorites","limitedSince","limitedReason","_secretKey","JWT_SECRET","_getExpDate","expTimeByMin","EXP_TOKEN","add","unix","_getValidApis","_getValidMenus","_validateExpDate","expDate","currentTime","methods","_password","pass","decode","compareValue","wait","getDisabledSince","increaseLoginAttempts","compare","start","end","diff","reset","_suburb","userName","exp","validApis","sign","setUserRole","deleteUserRole","getUserRoles","getCleanResult","mergeArrayObjects","currentFavs","newFavs","firstMerge","assign","a2","fm","items","b","slice","mergePushTokens","currentPushTokens","newPushToken","tokens","exists","extractUsersFromDoc","mUsers","_loginName","_facebookId","_googleId","_appleId","mergedFavs","findOneAndUpdate","new","filterFavs","f","mergedPushTokens","objUser","deleteOne","rfId","currentRfids","mergedRfids","filteredRfids","_token","verify","decoded","saltRounds","genSalt","salt","select","_user","HashPassword","encode","tempHashPassword","Router","siteAuth","postalCodes","signup","handleFiles","multer","pushNotification","analytics","vision","upload","dest","userAdmin","any","upload2","blobFilesService","target","API_PAYMENTS_URL","pathRewrite","getMap","proxyMap","urlParts","foundMap","innerArray","apply","Function","call","uri","element","getQueryParams","queryParams","API_PAYMENTS_KEY","rewriteURL","protocol","host","completeUrl","regex","replaced","replace","proxy","apiRoutes","proxyReqPathResolver","redirectTo","debug","http","port","normalizePort","PORT","set","server","createServer","listen","onError","onListening","val","parseInt","isNaN","syscall","exit","addr"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;AClFA,MAAMA,KAAK,GAAGC,mBAAO,CAAC,oBAAD,CAArB;;AACA,MAAM;AAAEC,aAAF;AAAeC;AAAf,IAAkCF,mBAAO,CAAC,yCAAD,CAA/C;;AAEA,MAAMG,WAAW,GAAG,CAACC,MAAD,EAASC,GAAT,EAAcC,OAAd,EAAuBC,QAAvB,KAAoC;AACtD,MAAIC,IAAI,GAAG,EAAE,GAAGD;AAAL,GAAX;AACA,SAAOR,KAAK,CAAC;AACXK,UADW;AAEXC,OAFW;AAGXI,QAAI,EAAEH,OAHK;AAIXI,WAAO,EAAEF;AAJE,GAAD,CAAL,CAMJG,IANI,CAMEC,GAAD,IAAS;AACb,UAAMC,MAAM,GAAGX,cAAc,CAACU,GAAD,CAA7B;AACA,WAAOE,OAAO,CAACC,OAAR,CAAgBF,MAAhB,CAAP;AACD,GATI,EAUJG,KAVI,CAUGC,GAAD,IAAS;AACd;AACA,WAAOH,OAAO,CAACI,MAAR,CAAejB,WAAW,CAACgB,GAAD,CAA1B,CAAP;AACD,GAbI,CAAP;AAcD,CAhBD;;AAkBA,MAAME,GAAG,GAAG,CAACd,GAAD,EAAMC,OAAN,EAAeI,OAAf,KAA2B;AACrC,MAAIU,WAAW,GAAG,EAAlB;;AACA,MAAId,OAAO,IAAIe,MAAM,CAACC,IAAP,CAAYhB,OAAZ,EAAqBiB,MAArB,GAA8B,CAA7C,EAAgD;AAC9CH,eAAW,IAAI,GAAf;AACA,QAAII,GAAG,GAAGH,MAAM,CAACC,IAAP,CAAYhB,OAAZ,EAAqBiB,MAA/B;AAAA,QACEE,GAAG,GAAG,CADR;;AAEA,SAAK,IAAIC,GAAT,IAAgBpB,OAAhB,EAAyB;AACvBmB,SAAG;AACHL,iBAAW,IAAK,GAAEM,GAAI,IAAGpB,OAAO,CAACoB,GAAD,CAAP,CAAaC,QAAb,EAAwB,EAAjD;AACA,UAAIH,GAAG,GAAGC,GAAV,EAAeL,WAAW,IAAI,GAAf;AAChB;AACF;;AACD,SAAOjB,WAAW,CAAC,KAAD,EAAS,GAAEE,GAAI,GAAEe,WAAY,EAA7B,EAAgC,IAAhC,EAAsCV,OAAtC,CAAlB;AACD,CAbD;;AAeA,MAAMkB,aAAa,GAAG,CAACvB,GAAD,EAAMC,OAAN,EAAeI,OAAf,KAA2B;AAC/C,SAAOP,WAAW,CAAC,QAAD,EAAWE,GAAX,EAAgBC,OAAhB,EAAyBI,OAAzB,CAAlB;AACD,CAFD;;AAIA,MAAMmB,IAAI,GAAG,CAACxB,GAAD,EAAMC,OAAN,EAAeI,OAAf,KAA2B;AACtC,SAAOP,WAAW,CAAC,MAAD,EAASE,GAAT,EAAcC,OAAd,EAAuBI,OAAvB,CAAlB;AACD,CAFD;;AAIA,MAAMoB,GAAG,GAAG,CAACzB,GAAD,EAAMC,OAAN,EAAeI,OAAf,KAA2B;AACrC,SAAOP,WAAW,CAAC,KAAD,EAAQE,GAAR,EAAaC,OAAb,EAAsBI,OAAtB,CAAlB;AACD,CAFD;;AAIA,MAAMqB,KAAK,GAAG,CAAC1B,GAAD,EAAMC,OAAN,EAAeI,OAAf,KAA2B;AACvC,SAAOP,WAAW,CAAC,OAAD,EAAUE,GAAV,EAAeC,OAAf,EAAwBI,OAAxB,CAAlB;AACD,CAFD;;AAIA,MAAMsB,QAAQ,GAAG,OAAO3B,GAAP,EAAY4B,QAAZ,EAAsBvB,OAAtB,KAAkC;AACjD,MAAI;AACF,QAAIF,IAAI,GAAG,EACT,GAAGE,OADM;AAET,sBAAgB;AAFP,KAAX;AAIA,QAAIE,GAAG,GAAG,MAAMb,KAAK,CAAC8B,IAAN,CAAWxB,GAAX,EAAgB4B,QAAhB,EAA0B;AAAEvB,aAAO,EAAEF;AAAX,KAA1B,CAAhB;AACA,WAAON,cAAc,CAACU,GAAD,CAArB;AACD,GAPD,CAOE,OAAOK,GAAP,EAAY;AACZ,WAAOhB,WAAW,CAACgB,GAAD,CAAlB;AACD;AACF,CAXD;;AAaAiB,MAAM,CAACC,OAAP,GAAiB;AACfhB,KADe;AAEfiB,QAAM,EAAER,aAFO;AAGfC,MAHe;AAIfG,UAJe;AAKfF,KALe;AAMfC;AANe,CAAjB,C;;;;;;;;;;;ACjEAI,OAAO,CAACjC,cAAR,GAA0BmC,QAAD,IAAc;AACrC,MACEA,QAAQ,CAACC,MAAT,KAAoB,GAApB,IACAD,QAAQ,CAACC,MAAT,KAAoB,GADpB,IAEAD,QAAQ,CAACE,UAAT,KAAwB,IAFxB,IAGAF,QAAQ,CAACE,UAAT,KAAwB,SAJ1B,EAME,OAAOF,QAAQ,CAAC5B,IAAhB;;AACF,MAAI4B,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B;AACA;AACA,UAAME,KAAK,GAAGH,QAAQ,CAACE,UAAT,EAAd;AACA,UAAM,IAAIE,KAAJ,CAAUD,KAAV,CAAN;AACD;;AACD,QAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AACD,CAfD,C,CAiBA;;;AACAN,OAAO,CAAClC,WAAR,GAAuBuC,KAAD,IAAW;AAC/B;AACAE,SAAO,CAACF,KAAR,CAAc,sBAAsBA,KAApC;AACA,SAAOA,KAAK,IAAIA,KAAK,CAACH,QAAf,IAA2BG,KAAK,CAACH,QAAN,CAAe5B,IAA1C,GACH+B,KAAK,CAACH,QAAN,CAAe5B,IADZ,GAEH+B,KAFJ;AAGD,CAND,C;;;;;;;;;;;AClBA,MAAMG,MAAM,GAAG3C,mBAAO,CAAC,sBAAD,CAAtB;;AACA,MAAM4C,OAAO,GAAG5C,mBAAO,CAAC,wBAAD,CAAvB;;AACA,MAAM6C,MAAM,GAAG7C,mBAAO,CAAC,sBAAD,CAAtB;;AACA,MAAM8C,UAAU,GAAG9C,mBAAO,CAAC,gCAAD,CAA1B;;AACA,MAAM+C,IAAI,GAAG/C,mBAAO,CAAC,kBAAD,CAApB;;AAEA2C,MAAM,CAACK,MAAP;;AAEA,MAAMC,SAAS,GAAGjD,mBAAO,CAAC,uCAAD,CAAP,CAAoBiD,SAAtC;;AACA,IAAIC,MAAM,GAAGlD,mBAAO,CAAC,+CAAD,CAApB;;AAGA,IAAImD,GAAG,GAAGP,OAAO,EAAjB;AAGAO,GAAG,CAACC,GAAJ,CAAQN,UAAU,CAACO,UAAX,CAAsB;AAAEC,UAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAH,GAAG,CAACC,GAAJ,CAAQN,UAAU,CAACS,IAAX,CAAgB;AAACC,OAAK,EAAE;AAAR,CAAhB,CAAR;AAGAL,GAAG,CAACC,GAAJ,CAAQR,OAAO,CAACW,IAAR,EAAR;AACAJ,GAAG,CAACC,GAAJ,CAAQL,IAAI,EAAZ;AAEAI,GAAG,CAACC,GAAJ,CAAQP,MAAM,CAAC,KAAD,CAAd;AACAM,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaF,MAAb;AAEAD,SAAS;AAETf,MAAM,CAACC,OAAP,GAAiBgB,GAAjB,C;;;;;;;;;;;AC3BA,MAAMM,QAAQ,GAAGzD,mBAAO,CAAC,yCAAD,CAAP,CAAmB0D,SAApC;AAEA;;;;;AAGAvB,OAAO,CAACwB,KAAR,GAAgB,CACd;AACEC,MAAI,EAAE,WADR;AAEEC,MAAI,EAAE,eAFR;AAGEC,MAAI,EAAE,0BAHR;AAIEC,SAAO,EAAE,IAJX;AAKEC,gBAAc,EAAE,CACdP,QAAQ,CAACQ,KADK,EAEdR,QAAQ,CAACS,WAFK,EAGdT,QAAQ,CAACU,KAHK,EAIdV,QAAQ,CAACW,KAJK,EAKdX,QAAQ,CAACY,QALK,CALlB;AAYEC,OAAK,EAAE;AAZT,CADc,EAed;AACEV,MAAI,EAAE,SADR;AAEEC,MAAI,EAAE,gBAFR;AAGEC,MAAI,EAAE,sBAHR;AAIEC,SAAO,EAAE,IAJX;AAKEC,gBAAc,EAAE,CACdP,QAAQ,CAACQ,KADK,EAEdR,QAAQ,CAACS,WAFK,EAGdT,QAAQ,CAACU,KAHK,EAIdV,QAAQ,CAACW,KAJK,CALlB;AAWEE,OAAK,EAAE;AAXT,CAfc,EA4Bd;AACEV,MAAI,EAAE,UADR;AAEEC,MAAI,EAAE,iBAFR;AAGEC,MAAI,EAAE,kBAHR;AAIEC,SAAO,EAAE,IAJX;AAKEC,gBAAc,EAAE,CAACP,QAAQ,CAACW,KAAV,EAAiBX,QAAQ,CAACQ,KAA1B,EAAiCR,QAAQ,CAACU,KAA1C,CALlB;AAMEG,OAAK,EAAE;AANT,CA5Bc,EAoCd;AACEV,MAAI,EAAE,cADR;AAEEE,MAAI,EAAE,kBAFR;AAGED,MAAI,EAAE,sBAHR;AAIEE,SAAO,EAAE,KAJX;AAKEC,gBAAc,EAAE,CAACP,QAAQ,CAACS,WAAV,EAAuBT,QAAQ,CAACU,KAAhC,CALlB;AAMEG,OAAK,EAAE;AANT,CApCc,EA4Cd;AACEV,MAAI,EAAE,SADR;AAEEC,MAAI,EAAE,gBAFR;AAGEC,MAAI,EAAE,iBAHR;AAIEC,SAAO,EAAE,IAJX;AAKEC,gBAAc,EAAE,CAACP,QAAQ,CAACS,WAAV,EAAuBT,QAAQ,CAACU,KAAhC,CALlB;AAMEG,OAAK,EAAE;AANT,CA5Cc,EAoDd;AACEV,MAAI,EAAE,yBADR;AAEEC,MAAI,EAAE,iBAFR;AAGEC,MAAI,EAAE,iBAHR;AAIEC,SAAO,EAAE,IAJX;AAKEC,gBAAc,EAAE,CAACP,QAAQ,CAACS,WAAV,EAAuBT,QAAQ,CAACU,KAAhC,CALlB;AAMEG,OAAK,EAAE;AANT,CApDc,EA4Dd;AACEV,MAAI,EAAE,SADR;AAEEC,MAAI,EAAE,iBAFR;AAGEC,MAAI,EAAE,oBAHR;AAIEC,SAAO,EAAE,IAJX;AAKEC,gBAAc,EAAE,CAACP,QAAQ,CAACU,KAAV,CALlB;AAMEG,OAAK,EAAE;AANT,CA5Dc,EAoEd;AACEV,MAAI,EAAE,gBADR;AAEEC,MAAI,EAAE,sBAFR;AAGEC,MAAI,EAAE,oBAHR;AAIEC,SAAO,EAAE,KAJX;AAKEC,gBAAc,EAAE,CAACP,QAAQ,CAACU,KAAV,EAAiBV,QAAQ,CAACS,WAA1B,EAAuCT,QAAQ,CAACW,KAAhD,CALlB;AAMEE,OAAK,EAAE;AANT,CApEc,EA4Ed;AACEV,MAAI,EAAE,gBADR;AAEEC,MAAI,EAAE,oBAFR;AAGEC,MAAI,EAAE,oBAHR;AAIEC,SAAO,EAAE,KAJX;AAKEC,gBAAc,EAAE,CACdP,QAAQ,CAACU,KADK,EAEdV,QAAQ,CAACS,WAFK,EAGdT,QAAQ,CAACS,WAHK,CALlB;AAUEI,OAAK,EAAE;AAVT,CA5Ec,CAAhB,C;;;;;;;;;;;ACLAnC,OAAO,CAACuB,SAAR,GAAoB;AAClBU,OAAK,EAAE,OADW;AAElBD,OAAK,EAAE,OAFW;AAGlBD,aAAW,EAAE,aAHK;AAIlBD,OAAK,EAAE,OAJW;AAKlBI,UAAQ,EAAE;AALQ,CAApB;AAQAlC,OAAO,CAACoC,YAAR,GAAuB,CACrB;AACEjC,QAAM,EAAE,SADV;AAEEkC,aAAW,EACT;AAHJ,CADqB,EAMrB;AACElC,QAAM,EAAE,UADV;AAEEkC,aAAW,EAAE;AAFf,CANqB,EAUrB;AACElC,QAAM,EAAE,UADV;AAEEkC,aAAW,EAAE;AAFf,CAVqB,EAcrB;AACElC,QAAM,EAAE,UADV;AAEEkC,aAAW,EAAE;AAFf,CAdqB,CAAvB,C;;;;;;;;;;;ACRA,MAAMC,GAAG,GAAGzE,mBAAO,CAAC,kDAAD,CAAnB;;AAEA,MAAM0E,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAjC;AACA,MAAMC,MAAM,GAAGH,OAAO,CAACC,GAAR,CAAYG,iBAA3B;;AAEA5C,OAAO,CAAC6C,eAAR,GAA0B,OAAOC,GAAP,EAAYrE,GAAZ,KAAoB;AAC5C,MAAI;AACF,QAAI;AAAEsE,cAAF;AAAYC,eAAZ;AAAuBC,aAAvB;AAAgCC;AAAhC,QAA2CJ,GAAG,CAACK,KAAnD;AACA,QAAI,CAACD,MAAL,EAAaA,MAAM,GAAG,CAAT;AACb,QAAIhD,QAAQ,GAAG,MAAMoC,GAAG,CAACtD,GAAJ,CAAS,GAAEuD,YAAa,gBAAxB,EAAyC;AAC5Da,UAAI,EAAET,MADsD;AAE5DI,cAF4D;AAG5DC,eAH4D;AAI5DC,aAJ4D;AAK5DC;AAL4D,KAAzC,CAArB;AAOAzE,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuBlB,QAAvB;AACD,GAXD,CAWE,OAAOpB,GAAP,EAAY;AACZyB,WAAO,CAACF,KAAR,CAAcvB,GAAd;AACAL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CAlBD,C;;;;;;;;;;;ACLA,MAAMC,MAAM,GAAGf,OAAO,CAACC,GAAR,CAAYe,YAA3B;AACA,MAAMb,MAAM,GAAGH,OAAO,CAACC,GAAR,CAAYgB,YAA3B;;AACA,MAAMtF,OAAO,GAAGN,mBAAO,CAAC,wBAAD,CAAvB;;AACA,MAAM6F,IAAI,GAAG7F,mBAAO,CAAC,wDAAD,CAApB;AAEA;;;;;;;AAKAmC,OAAO,CAAC2D,WAAR,GAAsB,OAAOb,GAAP,EAAYrE,GAAZ,KAAoB;AACxC,MAAI;AACF,QAAIP,GAAG,GAAI,GAAEqF,MAAO,cAAaZ,MAAM,GAAI,SAAQA,MAAO,EAAnB,GAAuB,EAAG,EAAjE;AACAG,OAAG,CACAc,IADH,CAEIzF,OAAO,CAAC;AAAED,SAAG,EAAEA;AAAP,KAAD,EAAe,CAACmC,KAAD,EAAQH,QAAR,EAAkB2D,IAAlB,KAA2B;AAC/C,UAAIxD,KAAJ,EAAW;AACTE,eAAO,CAACuD,GAAR,CACG,yCAAwC5F,GAAI,IAD/C,EAEEmC,KAFF;AAIA,YAAIiD,OAAO,GAAG,mBAAd;;AACA,YAAIjD,KAAK,IAAIA,KAAK,CAAC+C,IAAN,KAAe,cAA5B,EAA4C;AAC1CE,iBAAO,GAAGA,OAAO,CAACS,MAAR,CAAe,oBAAf,CAAV;AACD,SAFD,MAEO,IAAI1D,KAAK,IAAIA,KAAK,CAAC+C,IAAN,KAAe,YAA5B,EAA0C;AAC/CE,iBAAO,GAAGA,OAAO,CAACS,MAAR,CAAe,qCAAf,CAAV;AACD,SAFM,MAEA;AACLT,iBAAO,GAAGA,OAAO,CAACS,MAAR,CAAe,iBAAf,CAAV;AACD;;AACDjB,WAAG,CAACrE,GAAJ,CAAQ0B,MAAR,CAAe,GAAf,EAAoBiB,IAApB,CAAyB;AACvB4C,sBAAY,EAAEV,OAAO,IAAI,EADF;AAEvBW,mBAAS,EAAEX,OAAO,IAAI;AAFC,SAAzB;AAID,OAjBD,MAiBO;AACL,YAAIpD,QAAQ,CAACgE,UAAT,GAAsB,GAA1B,EACER,IAAI,CAACS,iBAAL,CACErB,GAAG,CAACK,KAAJ,CAAUiB,MADZ,EAEEC,IAAI,CAACC,KAAL,CAAWpE,QAAQ,CAAC2D,IAApB,EAA0B,CAA1B,EAA6B3F,GAF/B;AAIH;AACF,KAzBM,CAFX,EA6BG0F,IA7BH,CA6BQnF,GA7BR,EAFE,CAgCF;AACD,GAjCD,CAiCE,OAAOK,GAAP,EAAY;AACZyB,WAAO,CAACF,KAAR,CAAcvB,GAAd;AACAL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CAxCD,C;;;;;;;;;;;ACVA,MAAMiB,YAAY,GAAG1G,mBAAO,CAAC,wDAAD,CAA5B;;AACA,MAAM2G,aAAa,GAAG3G,mBAAO,CAAC,4DAAD,CAA7B,C,CACA;;;AACA,MAAM4G,EAAE,GAAG5G,mBAAO,CAAC,cAAD,CAAlB,C,CACA;;;AACA,MAAM6G,YAAY,GAAG7G,mBAAO,CAAC,sCAAD,CAA5B;;AACA,MAAM8G,MAAM,GAAG9G,mBAAO,CAAC,sCAAD,CAAtB;;AAEA,MAAM+G,WAAW,GAAG,CAACC,YAAD,EAAeC,YAAf,KAAgC;AAClD,MAAIC,GAAG,GAAGD,YAAY,CAACE,WAAb,CAAyB,GAAzB,CAAV;AACA,SAAQ,GAAEH,YAAa,IAAGC,YAAY,CAACG,SAAb,CAAuBF,GAAG,GAAG,CAA7B,CAAgC,EAA1D;AACD,CAHD;;AAKA,MAAMG,iBAAiB,GAAIC,IAAD,IAAU;AAClC,QAAMC,OAAO,GAAGV,YAAY,CAACW,YAAb,CAA0B;AACxCC,SAAK,EAAE9C,OAAO,CAACC,GAAR,CAAY8C;AADqB,GAA1B,CAAhB;AAIA,SAAO,IAAI5G,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtCqG,WAAO,CACL;AACEI,cAAQ,EAAE,cADZ;AAEEC,gBAAU,EAAE;AACV/D,YAAI,EAAG,YAAWkD,WAAW,CAACO,IAAI,CAACO,QAAN,EAAgBP,IAAI,CAACQ,YAArB,CAAmC;AADtD,OAFd;AAKEC,gBAAU,EAAEnB,EAAE,CAACoB,gBAAH,CAAqB,GAAEV,IAAI,CAACW,WAAY,IAAGX,IAAI,CAACO,QAAS,EAAzD;AALd,KADK,EAQL,CAAC5G,GAAD,EAAMJ,MAAN,EAAcwB,QAAd,KAA2B;AACzB,UAAI,CAACpB,GAAL,EAAUF,OAAO,CAACF,MAAD,CAAP,CAAV,KACKK,MAAM,CAACD,GAAD,CAAN;AACN,KAXI,CAAP;AAaD,GAdM,CAAP;AAeD,CApBD;;AAsBA,MAAMiH,aAAa,GAAIC,SAAD,IAAe;AACnC;AACA,MAAIC,MAAM,GAAGxB,EAAE,CAACyB,YAAH,CAAgBF,SAAhB,CAAb,CAFmC,CAGnC;;AACA,SAAO,IAAIG,MAAM,CAACC,IAAX,CAAgBH,MAAhB,EAAwB,QAAxB,EAAkCzG,QAAlC,CAA2C,QAA3C,CAAP,CAJmC,CAI0B;AAC9D,CALD;;AAOA,MAAM6G,mBAAmB,GAAIC,KAAD,IAAW;AACrC,MAAIC,WAAW,GAAG,EAAlB;AACAD,OAAK,CAACE,OAAN,CAAerB,IAAD,IAAU;AACtBoB,eAAW,CAACE,IAAZ,CAAiB;AACff,cAAQ,EAAG,GAAEP,IAAI,CAACQ,YAAa,EADhB;AAEfe,aAAO,EAAEX,aAAa,CAAE,GAAEZ,IAAI,CAACW,WAAY,IAAGX,IAAI,CAACO,QAAS,EAAtC;AAFP,KAAjB;AAID,GALD;AAMA,SAAOa,WAAP;AACD,CATD;;AAWA,MAAMI,SAAS,GAAG,OAAOL,KAAP,EAAcM,IAAd,EAAoBC,MAApB,EAA4B9D,QAA5B,KAAyC;AACzD,MAAI;AACF4B,UAAM,CAACmC,SAAP,CAAiBtE,OAAO,CAACC,GAAR,CAAYsE,gBAA7B;AAEA,UAAMC,GAAG,GAAG;AACVC,QAAE,EAAEzE,OAAO,CAACC,GAAR,CAAYyE,YAAZ,CAAyBC,KAAzB,CAA+B,GAA/B,CADM;AAEVf,UAAI,EAAE,qBAFI;AAGVgB,aAAO,EAAE,6CAHC;AAIVC,UAAI,EAAG,wBAJG;AAKVC,UAAI,EAAG,sBAAqBV,IAAK,+BAA8BC,MAAO,iGAAgG9D,QAAS,aALrK;AAMVwD,iBAAW,EAAEF,mBAAmB,CAACC,KAAD;AANtB,KAAZ;AAQA,UAAM3B,MAAM,CAAC4C,IAAP,CAAYP,GAAZ,CAAN;AACD,GAZD,CAYE,OAAOQ,EAAP,EAAW;AACX,UAAMA,EAAN;AACD;AACF,CAhBD;;AAkBA,MAAMC,oBAAoB,GAAInB,KAAD,IAAW;AACtCA,OAAK,CAACE,OAAN,CAAerB,IAAD,IAAU;AACtBV,MAAE,CAACiD,MAAH,CAAW,GAAEvC,IAAI,CAACW,WAAY,IAAGX,IAAI,CAACO,QAAS,EAA/C,EAAmD5G,GAAD,IAAS;AACzD,UAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTyB,aAAO,CAACuD,GAAR,CACG,aAAYqB,IAAI,CAACW,WAAY,IAAGX,IAAI,CAACO,QAAS,oBADjD;AAGD,KALD;AAMD,GAPD;AAQD,CATD;;AAWA,MAAMiC,iBAAiB,GAAG,OAAOrB,KAAP,EAAchI,IAAd,KAAuB;AAC/C,MAAI;AACF,QAAI;AACF8F,YADE;AAEF3C,UAFE;AAGFmG,cAHE;AAIFC,eAJE;AAKFC,WALE;AAMFC,gBANE;AAOFC,aAPE;AAQFC,gBARE;AASFC;AATE,QAUA5J,IAVJ;AAWA,QAAI6J,YAAY,GAAG,MAAM5D,YAAY,CAAC6D,iBAAb,CAA+BF,cAA/B,CAAzB;AACA,QAAIG,KAAK,GAAG,EAAZ;AACA/B,SAAK,CAACE,OAAN,CAAerB,IAAD,IAAU;AACtBkD,WAAK,CAAC5B,IAAN,CAAWvB,iBAAiB,CAACC,IAAD,CAA5B;AACD,KAFD;AAGA,QAAImD,aAAa,GAAG,MAAM3J,OAAO,CAAC4J,GAAR,CAAYF,KAAZ,CAA1B;AAEA,QAAIG,UAAU,GAAG,MAAMhE,aAAa,CAACgE,UAAd,CAAyB;AAC9C/G,UAAI,EAAEwG,UADwC;AAE9CQ,cAAQ,EAAET,OAFoC;AAG9CD,gBAAU,EAAEA,UAHkC;AAI9CW,YAAM,EAAE,IAJsC;AAK9CC,gBAAU,EAAE,CAACvE,MAAD,CALkC;AAM9CjE,YAAM,EAAE,CAACqE,aAAa,CAACoE,eAAd,CAA8B,SAA9B,CAAD,CANsC;AAO9CtC,WAAK,EAAEA,KAAK,CAACuC,GAAN,CAAWC,GAAD,KAAU;AACzBC,gBAAQ,EAAED,GAAG,CAACpD,QADW;AAEzBZ,oBAAY,EAAEgE,GAAG,CAACnD,YAFO;AAGzBqD,kBAAU,EAAE,mBAHa;AAIzBC,gBAAQ,EAAEH,GAAG,CAACG;AAJW,OAAV,CAAV;AAPuC,KAAzB,CAAvB;AAeA,QAAIC,UAAU,GAAG,MAAM3E,YAAY,CAAC2E,UAAb,CAAwB;AAC7CC,SAAG,EAAE/E,MADwC;AAE7C3C,UAF6C;AAG7CmG,cAH6C;AAI7CC,eAJ6C;AAK7CC,WAL6C;AAM7CY,YAAM,EAAE;AANqC,KAAxB,CAAvB;AASA,UAAM/B,SAAS,CAACL,KAAD,EAAS,GAAE7E,IAAK,IAAGmG,QAAS,EAA5B,EAA+BK,UAA/B,EAA2CO,UAAU,CAACY,EAAtD,CAAf;AAEA3B,wBAAoB,CAACnB,KAAD,CAApB;AACA,WAAOkC,UAAP;AACD,GA/CD,CA+CE,OAAOhB,EAAP,EAAW;AACX,UAAMA,EAAN;AACD;AACF,CAnDD;;AAqDAxH,OAAO,CAACqJ,UAAR,GAAqB,OAAOvG,GAAP,EAAYrE,GAAZ,EAAiB6K,IAAjB,KAA0B;AAC7C,MAAI;AACF,QAAI;AACFlF,YADE;AAEF3C,UAFE;AAGFmG,cAHE;AAIFC,eAJE;AAKFC,WALE;AAMFC,gBANE;AAOFC,aAPE;AAQFC,gBARE;AASFC;AATE,QAUApF,GAAG,CAACe,IAVR;AAWA,QAAI0F,YAAY,GAAG,MAAM5B,iBAAiB,CAAC7E,GAAG,CAACwD,KAAL,EAAY;AACpDlC,YADoD;AAEpD3C,UAFoD;AAGpDmG,cAHoD;AAIpDC,eAJoD;AAKpDC,WALoD;AAMpDC,gBANoD;AAOpDC,aAPoD;AAQpDC,gBARoD;AASpDC;AAToD,KAAZ,CAA1C;AAWAzJ,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AAAEkC,aAAO,EAAE;AAAX,KAArB;AACD,GAxBD,CAwBE,OAAOkE,EAAP,EAAW;AACX/I,OAAG,CACA0B,MADH,CACU,GADV,EAEGiB,IAFH,CAEQ;AAAEkC,aAAO,EAAEkE,EAAE,CAAClE,OAAH,IAAc;AAAzB,KAFR;AAGD;AACF,CA9BD;;AAgCAtD,OAAO,CAACwJ,iBAAR,GAA4B,OAAO1B,KAAP,EAAc2B,YAAd,EAA4BnD,KAAK,GAAG,EAApC,KAA2C;AACrE,MAAI;AACF3B,UAAM,CAACmC,SAAP,CAAiBtE,OAAO,CAACC,GAAR,CAAYsE,gBAA7B;AAEA,UAAMC,GAAG,GAAG;AACVC,QAAE,EAAEa,KADM;AACC;AACX1B,UAAI,EAAE,qBAFI;AAGVgB,aAAO,EAAE,oCAHC;AAIVC,UAAI,EAAG,oCAJG;AAKVC,UAAI,EAAG,4CAA2CmC,YAAa,YALrD;AAMVlD,iBAAW,EAAEF,mBAAmB,CAACC,KAAD;AANtB,KAAZ;AAQA,UAAM3B,MAAM,CAAC4C,IAAP,CAAYP,GAAZ,CAAN;AACD,GAZD,CAYE,OAAOQ,EAAP,EAAW;AACX,UAAMA,EAAN;AACD;AACF,CAhBD,C;;;;;;;;;;;ACvKA,MAAMkC,WAAW,GAAG7L,mBAAO,CAAC,wDAAD,CAA3B;AAIA;;;;;AAGAmC,OAAO,CAAC2J,cAAR,GAAyB,OAAO7G,GAAP,EAAYrE,GAAZ,EAAiB6K,IAAjB,KAA0B;AAC/C,MAAIhE,KAAK,GAAGxC,GAAG,CAACvE,OAAJ,CAAY,eAAZ,CAAZ;;AACA,MAAI;AACA,UAAMG,MAAM,GAAG,MAAMgL,WAAW,CAACC,cAAZ,CAA2BrE,KAA3B,CAArB;AACA7G,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB1C,MAAvB;AACH,GAHD,CAGE,OAAOI,GAAP,EAAY;AACVL,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuBtC,GAAvB;AACH;AACJ,CARD,C;;;;;;;;;;;ACPA,MAAM8K,iBAAiB,GAAG/L,mBAAO,CAAC,oEAAD,CAAjC;;AAEAmC,OAAO,CAAC6J,iBAAR,GAA4B,OAAO/G,GAAP,EAAYrE,GAAZ,EAAiB6K,IAAjB,KAA0B;AAClD,MAAI;AACA,QAAI5K,MAAM,GAAG,MAAMkL,iBAAiB,CAACE,SAAlB,CAA4BhH,GAAG,CAACK,KAAJ,CAAU4E,UAAtC,CAAnB;AACAtJ,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB1C,MAArB;AACH,GAHD,CAIA,OAAOI,GAAP,EAAY;AACRL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBtC,GAArB;AACH;AACJ,CARD,C;;;;;;;;;;;ACFA,MAAMiL,uBAAuB,GAAGlM,mBAAO,CAAC,gFAAD,CAAvC;;AACA,MAAM;AACJmM,iBADI;AAEJC,eAFI;AAGJC;AAHI,IAIFrM,mBAAO,CAAC,wDAAD,CAJX;;AAMAmC,OAAO,CAACmK,oBAAR,GAA+B,OAAOrH,GAAP,EAAYrE,GAAZ,EAAiB6K,IAAjB,KAA0B;AACvD,MAAI;AACF,QAAI5K,MAAM,GAAG,MAAMqL,uBAAuB,CAACK,oBAAxB,CACjB,CAAC,2CAAD,CADiB,EAEjB;AACEC,WAAK,EAAE,SADT;AAEExG,UAAI,EAAE,gCAFR;AAGEvF,UAAI,EAAE;AAAEgM,gBAAQ,EAAE;AAAZ,OAHR;AAIEC,WAAK,EAAE,oBAJT;AAKEC,cAAQ,EAAE;AALZ,KAFiB,CAAnB;AAUA/L,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB1C,MAArB;AACD,GAZD,CAYE,OAAOI,GAAP,EAAY;AACZL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBtC,GAArB;AACD;AACF,CAhBD;;AAkBAkB,OAAO,CAACyK,sBAAR,GAAiC,OAAO3H,GAAP,EAAYrE,GAAZ,KAAoB;AACnD,MAAI;AACF,QAAI;AAAE2F,YAAF;AAAUnC;AAAV,QAAoBa,GAAG,CAACe,IAA5B;AACAtD,WAAO,CAACuD,GAAR,CAAY,cAAZ;AACA,QAAI8C,IAAI,GAAG,MAAMoD,eAAe,CAAC5F,MAAD,CAAhC;AACA,QAAIsG,UAAU,GAAG9D,IAAI,CAAC8D,UAAL,CAAgB7B,GAAhB,CAAqB8B,CAAD,IAAOA,CAAC,CAACrF,KAA7B,CAAjB;AACA/E,WAAO,CAACuD,GAAR,CAAY,aAAZ,EAA2B4G,UAA3B;AAEAnK,WAAO,CAACuD,GAAR,CAAY,uBAAZ;AACA,QAAIpF,MAAM,GAAG,MAAMqL,uBAAuB,CAACK,oBAAxB,CACjBM,UADiB,EAEjB;AACEL,WAAK,EAAE,SADT;AAEExG,UAAI,EAAE5B,KAAK,CAAC2I,SAAN,GACD,eAAc3I,KAAK,CAACR,IAAK,cADxB,GAED,eAAcQ,KAAK,CAACR,IAAK,cAJhC;AAKEnD,UAAI,EAAE;AAAEuM,gBAAQ,EAAE;AAAZ,OALR;AAMEN,WAAK,EAAG,QAAO3D,IAAI,CAACnF,IAAK;AAN3B,KAFiB,CAAnB;AAWAhD,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB1C,MAArB;AACD,GApBD,CAoBE,OAAOI,GAAP,EAAY;AACZyB,WAAO,CAACuD,GAAR,CAAY,8BAAZ,EAA4ChF,GAA5C;AACAL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBtC,GAArB;AACD;AACF,CAzBD;;AA2BAkB,OAAO,CAAC8K,6BAAR,GAAwC,OAAOhI,GAAP,EAAYrE,GAAZ,KAAoB;AAC1D,MAAI;AACF,QAAI;AAAEsE,cAAF;AAAYqB,YAAZ;AAAoB2G;AAApB,QAAoCjI,GAAG,CAACe,IAA5C;AACA,QAAImH,KAAK,GAAG,MAAMf,aAAa,CAAClH,QAAD,CAA/B,CAFE,CAGF;AACA;;AAEA,QAAI6D,IAAI,GAAG,MAAMoD,eAAe,CAAC5F,MAAD,CAAhC;AACA,QAAI6G,QAAQ,GAAG,EAAf;AACAD,SAAK,CAACxE,OAAN,CAAe0E,CAAD,IAAO;AACnBD,cAAQ,CAACxE,IAAT,CACEsD,uBAAuB,CAACK,oBAAxB,CACEc,CAAC,CAACR,UAAF,CAAa7B,GAAb,CAAkB8B,CAAD,IAAOA,CAAC,CAACrF,KAA1B,CADF,EAEE;AACE+E,aAAK,EAAE,SADT;AAEExG,YAAI,EAAG,cAAa+C,IAAI,CAACnF,IAAK,qBAAoBmF,IAAI,CAACuE,MAAO,IAAGvE,IAAI,CAACwE,YAAa,uBAAsBL,WAAY,GAFvH;AAGEzM,YAAI,EAAE;AACJuM,kBAAQ,EAAE;AAAEQ,iBAAK,EAAE,iBAAT;AAA4BC,kBAAM,EAAE;AAApC,WADN;AAEJC,eAAK,EAAE;AAAEJ,kBAAM,EAAEvE,IAAI,CAACuE,MAAf;AAAuBC,wBAAY,EAAExE,IAAI,CAACwE;AAA1C;AAFH,SAHR;AAOEb,aAAK,EAAG;AAPV,OAFF,CADF;AAcD,KAfD;AAgBA,QAAIiB,iBAAiB,GAAG,MAAM7M,OAAO,CAAC4J,GAAR,CAAY0C,QAAZ,CAA9B;AACAxM,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBoK,iBAArB;AACD,GA1BD,CA0BE,OAAO1M,GAAP,EAAY;AACZyB,WAAO,CAACuD,GAAR,CAAY,8BAAZ,EAA4ChF,GAA5C;AACAL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBtC,GAArB;AACD;AACF,CA/BD;;AAiCAkB,OAAO,CAACyL,sCAAR,GAAiD,OAAO3I,GAAP,EAAYrE,GAAZ,KAAoB;AACnE,MAAI;AACF,QAAI;AAAEsE,cAAF;AAAY2I,eAAZ;AAAuBvL,YAAvB;AAA+BwL,aAA/B;AAAwCC;AAAxC,QAAwD9I,GAAG,CAACe,IAAhE;AACA,QAAImH,KAAK,GAAG,MAAMd,mBAAmB,CAACnH,QAAD,EAAW2I,SAAX,CAArC;AACA,QAAIT,QAAQ,GAAG,EAAf;AACAD,SAAK,CAACxE,OAAN,CAAe0E,CAAD,IAAO;AACnBD,cAAQ,CAACxE,IAAT,CACEsD,uBAAuB,CAACK,oBAAxB,CACEc,CAAC,CAACR,UAAF,CAAa7B,GAAb,CAAkB8B,CAAD,IAAOA,CAAC,CAACrF,KAA1B,CADF,EAEE;AACE+E,aAAK,EAAE,SADT;AAEExG,YAAI,EACF1D,MAAM,KAAK,UAAX,GACK,cAAayL,WAAY,mBAD9B,GAEIzL,MAAM,KAAK,UAAX,GACC,cAAayL,WAAY,8CAA6CD,OAAQ,EAD/E,GAEC,WAAUC,WAAY,yBAP/B;AAQEtN,YAAI,EAAE;AACJuM,kBAAQ,EAAE;AACRQ,iBAAK,EAAE,UADC;AAERC,kBAAM,EAAE;AAFA,WADN;AAKJC,eAAK,EAAE;AACLM,kBAAM,EAAE1L;AADH;AALH,SARR;AAiBEoK,aAAK,EACHpK,MAAM,KAAK,UAAX,GACI,eADJ,GAEIA,MAAM,KAAK,UAAX,GACA,gBADA,GAEA;AAtBR,OAFF,CADF;AA6BD,KA9BD;AAgCA,QAAIqL,iBAAiB,GAAG,MAAM7M,OAAO,CAAC4J,GAAR,CAAY0C,QAAZ,CAA9B;AACAxM,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBoK,iBAArB;AACD,GAtCD,CAsCE,OAAO1M,GAAP,EAAY;AACZyB,WAAO,CAACuD,GAAR,CAAY,8BAAZ,EAA4ChF,GAA5C;AACAL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBtC,GAArB;AACD;AACF,CA3CD;;AA6CAkB,OAAO,CAAC8L,mCAAR,GAA8C,OAAOhJ,GAAP,EAAYrE,GAAZ,KAAoB;AAChE,MAAI;AACF,UAAM;AAAEsE,cAAF;AAAYqB,YAAZ;AAAoB2H;AAApB,QAAsCjJ,GAAG,CAACe,IAAhD;AACA,UAAMmI,UAAU,GAAG,MAAM/B,aAAa,CAAClH,QAAD,CAAtC;AAEA,UAAM6D,IAAI,GAAG,MAAMoD,eAAe,CAAC5F,MAAD,CAAlC;AACA,QAAI6G,QAAQ,GAAG,EAAf;AACAe,cAAU,CAACxF,OAAX,CAAoB0E,CAAD,IAAO;AACxBD,cAAQ,CAACxE,IAAT,CACEsD,uBAAuB,CAACK,oBAAxB,CACEc,CAAC,CAACR,UAAF,CAAa7B,GAAb,CAAkB8B,CAAD,IAAOA,CAAC,CAACrF,KAA1B,CADF,EAEE;AACE+E,aAAK,EAAE,SADT;AAEExG,YAAI,EAAG,cAAa+C,IAAI,CAACnF,IAAK,qBAAoBmF,IAAI,CAACuE,MAAO,IAAGvE,IAAI,CAACwE,YAAa,6CAFrF;AAGE9M,YAAI,EAAE;AACJuM,kBAAQ,EAAE;AAAEQ,iBAAK,EAAE,aAAT;AAAwBC,kBAAM,EAAE;AAAhC,WADN;AAEJC,eAAK,EAAE;AACLJ,kBAAM,EAAEvE,IAAI,CAACuE,MADR;AAELC,wBAAY,EAAExE,IAAI,CAACwE,YAFd;AAGLW;AAHK;AAFH,SAHR;AAWExB,aAAK,EAAG;AAXV,OAFF,CADF;AAkBD,KAnBD;AAqBA,QAAIiB,iBAAiB,GAAG,MAAM7M,OAAO,CAAC4J,GAAR,CAAY0C,QAAZ,CAA9B;AACAxM,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBoK,iBAArB;AACD,GA7BD,CA6BE,OAAO1M,GAAP,EAAY;AACZyB,WAAO,CAACuD,GAAR,CAAY,8BAAZ,EAA4ChF,GAA5C;AACAL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBtC,GAArB;AACD;AACF,CAlCD;;AAoCA,MAAMmN,2BAA2B,GAAG,CAAC9L,MAAD,EAASwL,OAAT,KAAqB;AACvD,UAAQxL,MAAR;AACE,SAAK,UAAL;AACE,aAAO,iCAAP;;AACF,SAAK,UAAL;AACE,aAAQ,4DAA2DwL,OAAQ,EAA3E;;AACF,SAAK,SAAL;AACE,aAAO,sCAAP;;AACF;AACE,aAAO,0CAAP;AARJ;AAUD,CAXD;;AAaA3L,OAAO,CAACkM,0CAAR,GAAqD,OAAOpJ,GAAP,EAAYrE,GAAZ,KAAoB;AACvE,MAAI;AACF,UAAM;AAAEsE,cAAF;AAAY2I,eAAZ;AAAuBvL,YAAvB;AAA+BwL,aAA/B;AAAwCI;AAAxC,QAA0DjJ,GAAG,CAACe,IAApE;AACA,QAAIoH,QAAQ,GAAG,EAAf;AACA,QAAID,KAAK,GAAG,MAAMd,mBAAmB,CAACnH,QAAD,EAAW2I,SAAX,CAArC;AACAV,SAAK,CAACxE,OAAN,CAAeI,IAAD,IAAU;AACtBqE,cAAQ,CAACxE,IAAT,CACEsD,uBAAuB,CAACK,oBAAxB,CACExD,IAAI,CAAC8D,UAAL,CAAgB7B,GAAhB,CAAqB8B,CAAD,IAAOA,CAAC,CAACrF,KAA7B,CADF,EAEE;AACE+E,aAAK,EAAE,SADT;AAEExG,YAAI,EAAEoI,2BAA2B,CAAC9L,MAAD,EAASwL,OAAT,CAFnC;AAGEpB,aAAK,EAAE,wCAHT;AAIEjM,YAAI,EAAE;AACJuM,kBAAQ,EAAE;AAAEQ,iBAAK,EAAE,aAAT;AAAwBC,kBAAM,EAAE;AAAhC,WADN;AAEJC,eAAK,EAAE;AACLJ,kBAAM,EAAEvE,IAAI,CAACuE,MADR;AAELC,wBAAY,EAAExE,IAAI,CAACwE,YAFd;AAGLW;AAHK;AAFH;AAJR,OAFF,CADF;AAkBD,KAnBD;AAqBA,QAAIP,iBAAiB,GAAG,MAAM7M,OAAO,CAAC4J,GAAR,CAAY0C,QAAZ,CAA9B;AACAxM,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBoK,iBAArB;AACD,GA3BD,CA2BE,OAAO1M,GAAP,EAAY;AACZyB,WAAO,CAACuD,GAAR,CAAY,8BAAZ,EAA4ChF,GAA5C;AACAL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBtC,GAArB;AACD;AACF,CAhCD,C;;;;;;;;;;;ACnLA,MAAM8H,IAAI,GAAG/I,mBAAO,CAAC,mDAAD,CAApB;;AAEAmC,OAAO,CAACmM,MAAR,GAAiB,CAACrJ,GAAD,EAAMrE,GAAN,EAAW6K,IAAX,KAAoB;AACnC,MACExG,GAAG,CAACe,IAAJ,CAASyB,KAAT,KAAmB8G,SAAnB,IACAtJ,GAAG,CAACe,IAAJ,CAASyB,KAAT,KAAmB,EADnB,IAEAxC,GAAG,CAACe,IAAJ,CAASyB,KAAT,KAAmB,IAHrB,EAIE;AACA7G,OAAG,CAAC8I,IAAJ,CAAS;AACPlE,aAAO,EAAE,KADF;AAEPC,aAAO,EAAE;AAFF,KAAT;AAIA;AACD;;AACD,MAAI;AACFwE,SADE;AAEFrG,QAFE;AAGFmG,YAHE;AAIFC,aAJE;AAKFwE,cALE;AAMFC,YANE;AAOFC,WAPE;AAQFC,YARE;AASFlH;AATE,MAUAxC,GAAG,CAACe,IAVR;;AAWA,MAAIwI,UAAJ,EAAgB;AACdvJ,OAAG,CAACe,IAAJ,GAAW;AACTiE,WADS;AAETrG,UAFS;AAGTmG,cAHS;AAIT6E,eAAS,EAAEJ,UAJF;AAKTxE,eALS;AAMTwE,gBANS;AAOTC,cAPS;AAQTC,aARS;AASTC,cATS;AAUTlH;AAVS,KAAX;AAYAsB,QAAI,CAAC8F,gBAAL,CAAsB5J,GAAtB,EAA2BrE,GAA3B,EAAgC6K,IAAhC;AACD,GAdD,MAcO,IAAIgD,QAAJ,EAAc;AACnBxJ,OAAG,CAACe,IAAJ,GAAW;AACTiE,WADS;AAETrG,UAFS;AAGTmG,cAHS;AAIT6E,eAAS,EAAEH,QAJF;AAKTzE,eALS;AAMTwE,gBANS;AAOTC,cAPS;AAQTC,aARS;AASTC,cATS;AAUTlH;AAVS,KAAX;AAYAsB,QAAI,CAAC+F,cAAL,CAAoB7J,GAApB,EAAyBrE,GAAzB,EAA8B6K,IAA9B;AACD,GAdM,MAcA,IAAIiD,OAAJ,EAAa;AAClBzJ,OAAG,CAACe,IAAJ,GAAW;AACTiE,WADS;AAETrG,UAFS;AAGTmG,cAHS;AAIT6E,eAAS,EAAEF,OAJF;AAKT1E,eALS;AAMTwE,gBANS;AAOTC,cAPS;AAQTC,aARS;AASTC,cATS;AAUTlH;AAVS,KAAX;AAYAsB,QAAI,CAACgG,aAAL,CAAmB9J,GAAnB,EAAwBrE,GAAxB,EAA6B6K,IAA7B;AACD,GAdM,MAcA;AACLxG,OAAG,CAACe,IAAJ,GAAW;AACTiE,WADS;AAETrG,UAFS;AAGTmG,cAHS;AAIT6E,eAAS,EAAE3E,KAJF;AAKTD,eALS;AAMTwE,gBANS;AAOTC,cAPS;AAQTC,aARS;AASTC,cATS;AAUTlH;AAVS,KAAX;AAYAsB,QAAI,CAACiG,aAAL,CAAmB/J,GAAnB,EAAwBrE,GAAxB,EAA6B6K,IAA7B;AACD,GA/EkC,CAgFnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,CA3HD,C;;;;;;;;;;;ACFA,MAAM5F,IAAI,GAAG7F,mBAAO,CAAC,4CAAD,CAApB;;AACA,MAAMiP,eAAe,GAAGjP,mBAAO,CAAC,gEAAD,CAA/B;;AACA,MAAMD,KAAK,GAAGC,mBAAO,CAAC,oBAAD,CAAP,CAAiBkP,OAA/B;;AACA,MAAM3E,iBAAiB,GAAGvK,mBAAO,CAAC,0CAAD,CAAP,CAAyBuK,iBAAnD;;AAEA,MAAM4E,kBAAkB,GAAIpG,IAAD,IAAU;AACnC,SAAOA,IAAI,CAAC8B,MAAZ;AACD,CAFD;;AAIA,MAAMuE,YAAY,GAAG,CAACC,SAAD,EAAYV,QAAZ,EAAsBW,WAAW,GAAG,KAApC,KAA8C;AACjE,SAAO,IAAIxO,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC2E,QAAI,CAAC0J,QAAL,CAAcF,SAAd,EAAyB1O,IAAzB,CAA8B,CAAC6O,KAAD,EAAQvO,GAAR,KAAgB;AAC5C,UAAIuO,KAAJ,EAAW;AACT,YAAIC,SAAS,GAAGD,KAAK,CAACE,gBAAN,CAAuBf,QAAvB,EAAiCW,WAAjC,CAAhB;AACAG,iBAAS,CAAC9O,IAAV,CACGE,MAAD,IAAY;AACV;AACA,cAAI4G,KAAK,GAAG+H,KAAK,CAACG,iBAAN,EAAZ;AACA5O,iBAAO,CAAC;AAAEyE,mBAAO,EAAE,IAAX;AAAiBC,mBAAO,EAAEgC;AAA1B,WAAD,CAAP;AACD,SALH,EAMGxG,GAAD,IAAS;AACPC,gBAAM,CAAC;AACLsE,mBAAO,EAAE,KADJ;AAELC,mBAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAFnB,WAAD,CAAN;AAID,SAXH;AAaD,OAfD,MAgBEvE,MAAM,CAAC;AACL0O,cAAM,EAAE,KADH;AAELnK,eAAO,EAAE;AAFJ,OAAD,CAAN;AAIH,KArBD;AAsBD,GAvBM,CAAP;AAwBD,CAzBD;;AA2BAtD,OAAO,CAAC0N,YAAR,GAAuB,OAAO5K,GAAP,EAAYrE,GAAZ,KAAoB;AACzC,MAAI;AACF,UAAM;AAAEmI,UAAF;AAAQ4F;AAAR,QAAqB1J,GAAG,CAACe,IAA/B;AACA,UAAMsJ,WAAW,GAAG,KAApB;AACA,UAAMzO,MAAM,GAAG,MAAMuO,YAAY,CAACrG,IAAD,EAAO4F,QAAP,EAAiBW,WAAjB,CAAjC;AACA1O,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB1C,MAArB;AACD,GALD,CAKE,OAAOI,GAAP,EAAY;AACZL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE;AAA/B,KAArB;AACD;AACF,CATD;;AAWAtD,OAAO,CAAC2N,SAAR,GAAoB,OAAO7K,GAAP,EAAYrE,GAAZ,EAAiB6K,IAAjB,KAA0B;AAC5C,MAAI;AACF;AACA,QAAI;AAAE1C,UAAF;AAAQ4F,cAAR;AAAkBoB,kBAAlB;AAAgCT,iBAAW,GAAG;AAA9C,QAAwDrK,GAAG,CAACe,IAAhE;AAEA,QAAIsE,YAAY,GAAG,MAAMC,iBAAiB,CAACwF,YAAD,CAA1C;;AACA,QAAIzF,YAAJ,EAAkB;AAChB,UAAI0F,GAAG,GAAG,MAAMZ,YAAY,CAACrG,IAAD,EAAO4F,QAAP,EAAiBW,WAAjB,CAA5B,CADgB,CAC2C;;AAE3D,UAAIU,GAAJ,EAAS;AACP,YAAIA,GAAG,CAACxK,OAAR,EAAiB;AACf;AACA;AACA;AACA,cAAIyK,QAAQ,GAAG,CAAC,MAAMpK,IAAI,CAAC0J,QAAL,CAAcxG,IAAd,CAAP,EAA4BmH,QAA5B,EAAf;AAEAtP,aAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB,EACrB,GAAGyM,GADkB;AAErB/F,iBAAK,EAAEgG,QAAQ,CAAChG,KAFK;AAGrBrG,gBAAI,EAAEqM,QAAQ,CAACrM,IAHM;AAIrBuM,qBAAS,EAAEF,QAAQ,CAACG,SAJC;AAKrB7E,cAAE,EAAE0E,QAAQ,CAAC3E,GAAT,CAAa3J,QAAb;AALiB,WAAvB;AAOD,SAbD,MAcEf,GAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEiC,iBAAO,EAAE,KAAX;AAAkBC,iBAAO,EAAE;AAA3B,SAAvB;AACH,OAhBD,MAgBO;AACL7E,WAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEiC,iBAAO,EAAE,KAAX;AAAkBC,iBAAO,EAAE;AAA3B,SAAvB;AACD;AACF,KAtBD,MAsBO7E,GAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAE;AAA3B,KAAvB;AACR,GA5BD,CA4BE,OAAOxE,GAAP,EAAY;AACZyB,WAAO,CAACuD,GAAR,CAAY,OAAZ,EAAqBhF,GAArB;AACAL,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEkE,WAAK,EAAE,IAAT;AAAehC,aAAO,EAAExE;AAAxB,KAAvB;AACD;AACF,CAjCD;;AAmCAkB,OAAO,CAACkO,oBAAR,GAA+B,OAAOpL,GAAP,EAAYrE,GAAZ,KAAoB;AACjD,MAAI;AACF,QAAI;AAAE2K,QAAF;AAAMwE;AAAN,QAAuB9K,GAAG,CAACK,KAA/B,CADE,CAEF;AACA;;AACA,QAAI0K,GAAG,GAAG,MAAMnK,IAAI,CAACyK,mBAAL,CAAyB/E,EAAzB,CAAhB;;AACA,QAAIyE,GAAJ,EAAS;AACP,UAAIb,kBAAkB,CAACa,GAAG,CAACO,IAAL,CAAtB,EAAkC;AAChC,YAAI9I,KAAK,GAAGuI,GAAG,CAACL,iBAAJ,EAAZ;AACA/O,WAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEkE;AAAF,SAAvB;AACD,OAHD,MAIE7G,GAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBkE,aAAK,EAAE,IADc;AAErBhC,eAAO,EACL;AAHmB,OAAvB;AAKH,KAVD,MAUO;AACL7E,SAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEkE,aAAK,EAAE;AAAT,OAAvB;AACD,KAjBC,CAkBF;;AACD,GAnBD,CAmBE,OAAOxG,GAAP,EAAY;AACZyB,WAAO,CAACuD,GAAR,CAAY,OAAZ,EAAqBhF,GAArB;AACAL,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEkE,WAAK,EAAE;AAAT,KAAvB;AACD;AACF,CAxBD;;AA0BAtF,OAAO,CAACqO,kBAAR,GAA6B,OAAOvL,GAAP,EAAYrE,GAAZ,KAAoB;AAC/C,MAAI;AACF,QAAI;AAAE2K,QAAF;AAAMwE;AAAN,QAAuB9K,GAAG,CAACK,KAA/B;AACA,QAAIgF,YAAY,GAAG,MAAMC,iBAAiB,CAACwF,YAAD,CAA1C;;AACA,QAAIzF,YAAJ,EAAkB;AAChB,UAAI0F,GAAG,GAAG,MAAMnK,IAAI,CAAC4K,iBAAL,CAAuBlF,EAAvB,CAAhB;;AACA,UAAIyE,GAAJ,EAAS;AACP,YAAIb,kBAAkB,CAACa,GAAG,CAACO,IAAL,CAAtB,EAAkC;AAChC,cAAI9I,KAAK,GAAGuI,GAAG,CAACL,iBAAJ,EAAZ;AACA/O,aAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEkE;AAAF,WAAvB;AACD,SAHD,MAIE7G,GAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBkE,eAAK,EAAE,IADc;AAErBhC,iBAAO,EACL;AAHmB,SAAvB;AAKH,OAVD,MAUO;AACL7E,WAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEkE,eAAK,EAAE;AAAT,SAAvB;AACD;AACF,KAfD,MAeO7G,GAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEkE,WAAK,EAAE;AAAT,KAAvB;AACR,GAnBD,CAmBE,OAAOxG,GAAP,EAAY;AACZyB,WAAO,CAACuD,GAAR,CAAY,OAAZ,EAAqBhF,GAArB;AACAL,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEkE,WAAK,EAAE;AAAT,KAAvB;AACD;AACF,CAxBD;;AA0BAtF,OAAO,CAACuO,iBAAR,GAA4B,OAAOzL,GAAP,EAAYrE,GAAZ,KAAoB;AAC9C,MAAI;AACF,QAAI;AAAE2K,QAAF;AAAMwE;AAAN,QAAuB9K,GAAG,CAACK,KAA/B;AACA,QAAIgF,YAAY,GAAG,MAAMC,iBAAiB,CAACwF,YAAD,CAA1C;;AACA,QAAIzF,YAAJ,EAAkB;AAChB,UAAI0F,GAAG,GAAG,MAAMnK,IAAI,CAAC8K,gBAAL,CAAsBpF,EAAtB,CAAhB;;AACA,UAAIyE,GAAJ,EAAS;AACP,YAAIb,kBAAkB,CAACa,GAAG,CAACO,IAAL,CAAtB,EAAkC;AAChC,cAAI9I,KAAK,GAAGuI,GAAG,CAACL,iBAAJ,EAAZ;AACA/O,aAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEkE;AAAF,WAAvB;AACD,SAHD,MAIE7G,GAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBkE,eAAK,EAAE,IADc;AAErBhC,iBAAO,EACL;AAHmB,SAAvB;AAKH,OAVD,MAUO;AACL7E,WAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEkE,eAAK,EAAE;AAAT,SAAvB;AACD;AACF,KAfD,MAeO7G,GAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEkE,WAAK,EAAE;AAAT,KAAvB;AACR,GAnBD,CAmBE,OAAOxG,GAAP,EAAY;AACZyB,WAAO,CAACuD,GAAR,CAAY,OAAZ,EAAqBhF,GAArB;AACAL,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEkE,WAAK,EAAE;AAAT,KAAvB;AACD;AACF,CAxBD;;AA0BAtF,OAAO,CAACyO,YAAR,GAAuB,CAAC3L,GAAD,EAAMrE,GAAN,EAAW6K,IAAX,KAAoB;AACzC,MAAIhE,KAAK,GAAGxC,GAAG,CAACvE,OAAJ,CAAY,eAAZ,CAAZ;AACA,SAAO,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC2E,QAAI,CAAC+K,YAAL,CAAkBnJ,KAAlB,EAAyB9G,IAAzB,CACGkQ,OAAD,IAAa;AACX,UAAIA,OAAJ,EACEjQ,GAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEuN,aAAK,EAAE,IAAT;AAAerL,eAAO,EAAE;AAAxB,OAFR,EADF,KAKE7E,GAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkB;AAChBwO,aAAK,EAAE,KADS;AAEhBrL,eAAO,EAAE;AAFO,OAAlB;AAIH,KAXH,EAYGxE,GAAD,IAASL,GAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBrB,GAAlB,CAZX;AAcD,GAfM,CAAP;AAgBD,CAlBD;;AAoBAkB,OAAO,CAAC4O,iBAAR,GAA4B,CAAC9L,GAAD,EAAMrE,GAAN,EAAW6K,IAAX,KAAoB;AAC9C,MAAI;AAAEhE,SAAF;AAASsB,QAAT;AAAelF;AAAf,MAAwBoB,GAAG,CAACe,IAAhC,CAD8C,CAE9C;;AACAiJ,iBAAe,CAAC+B,eAAhB,CAAgCnN,IAAhC,EAAsC4D,KAAtC,EAA6CsB,IAA7C,EAAmDpI,IAAnD,CACGE,MAAD,IAAY;AACVD,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEuN,WAAK,EAAE,IAAT;AAAerL,aAAO,EAAE;AAAxB,KAAvB;AACD,GAHH,EAIGxE,GAAD,IAAS;AACPL,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuBtC,GAAvB;AACD,GANH;AAQD,CAXD;;AAaAkB,OAAO,CAAC8O,MAAR,GAAiB,CAAChM,GAAD,EAAMrE,GAAN,EAAW6K,IAAX,KAAoB;AACnC,MAAIxG,GAAG,CAACiM,OAAR,EACEjM,GAAG,CAACiM,OAAJ,CAAYC,OAAZ,CAAqBlQ,GAAD,IAAS;AAC3B,QAAIA,GAAJ,EACEL,GAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBiC,aAAO,EAAE,KADY;AAErBC,aAAO,EACLxE,GAAG,CAACwE,OAAJ,IAAe;AAHI,KAAvB;AAKF7E,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEiC,aAAO,EAAE,IAAX;AAAiBC,aAAO,EAAE;AAA1B,KAAvB;AACD,GARD;AASH,CAXD,C;;;;;;;;;;;ACjMA,MAAMkB,aAAa,GAAG3G,mBAAO,CAAC,4DAAD,CAA7B;;AACA,MAAMoR,cAAc,GAAGpR,mBAAO,CAAC,8DAAD,CAA9B;;AACA,MAAMqR,WAAW,GAAGrR,mBAAO,CAAC,wDAAD,CAA3B;;AACA,MAAM0D,SAAS,GAAG1D,mBAAO,CAAC,oDAAD,CAAP,CAA8B0D,SAAhD;;AACA,MAAM4N,MAAM,GAAGtR,mBAAO,CAAC,sBAAD,CAAtB;;AACA,MAAMuR,QAAQ,GAAGvR,mBAAO,CAAC,0BAAD,CAAP,CAAoBwR,KAApB,CAA0BD,QAA3C;;AACA,MAAMhH,iBAAiB,GAAGvK,mBAAO,CAAC,0CAAD,CAAP,CAAyBuK,iBAAnD;;AAEApI,OAAO,CAACsP,aAAR,GAAwB,OAAOxM,GAAP,EAAYrE,GAAZ,EAAiB6K,IAAjB,KAA0B;AAChD,MAAI;AACF,QAAI;AAAEvG,cAAF;AAAYwM,eAAZ;AAAuBC;AAAvB,QAAmC1M,GAAG,CAACe,IAA3C;AACA,QAAIgD,MAAM,GAAG,MAAMrC,aAAa,CAACiL,aAAd,CAA4B1M,QAA5B,CAAnB;AACA,QAAI5C,MAAM,GAAGqE,aAAa,CAACoE,eAAd,CAA8B2G,SAA9B,CAAb;;AACA,QAAI1I,MAAM,IAAI1G,MAAd,EAAsB;AACpB,UAAIuP,SAAS,GAAG,MAAMlL,aAAa,CAACmL,eAAd,CAA8B5M,QAA9B,EAAwC,EAC5D,GAAG5C,MADyD;AAE5DqP,eAF4D;AAG5DvB,iBAAS,EAAEkB,MAAM,CAACS,GAAP;AAHiD,OAAxC,CAAtB;;AAKA,UAAIF,SAAJ,EAAe;AACb,YAAIvP,MAAM,CAACA,MAAP,KAAkB,UAAtB,EACE,MAAM+O,WAAW,CAAChG,UAAZ,CAAuB;AAC3BC,aAAG,EAAEtC,MAAM,CAAC8B,UAAP,CAAkB,CAAlB,EAAqBS,EADC;AAE3B9H,kBAAQ,EAAEC,SAAS,CAACQ,WAFO;AAG3BkM,mBAAS,EAAEkB,MAAM,CAACS,GAAP;AAHgB,SAAvB,CAAN;AAKFnR,WAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,iBAAO,EAAE,IADU;AAEnBC,iBAAO,EAAG,uEAAsEnD,MAAM,CAACA,MAAO;AAF3E,SAArB;AAID;AACF,KAlBD,MAmBE1B,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,aAAO,EAAE,KADU;AAEnBC,aAAO,EAAE;AAFU,KAArB;AAIH,GA3BD,CA2BE,OAAOkE,EAAP,EAAW;AACX/I,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,aAAO,EAAE,KADU;AAEnBC,aAAO,EAAEkE,EAAE,CAAClE,OAAH,IAAc;AAFJ,KAArB;AAID;AACF,CAlCD;;AAoCAtD,OAAO,CAAC6P,kBAAR,GAA6B,CAAC/M,GAAD,EAAMrE,GAAN,EAAW6K,IAAX,KAAoB;AAC/C,MAAIlF,MAAM,GAAGtB,GAAG,CAACK,KAAJ,CAAUiG,EAAvB;AACA5E,eAAa,CAACsL,oBAAd,CAAmC1L,MAAnC,EAA2C5F,IAA3C,CACGE,MAAD,IAAY;AACVD,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB1C,MAAvB;AACD,GAHH,EAIGI,GAAD,IAAS;AACPL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,aAAO,EAAE,KADU;AAEnBC,aAAO,EACLxE,GAAG,CAACwE,OAAJ,IAAe;AAHE,KAArB;AAKD,GAVH;AAYD,CAdD;;AAgBAtD,OAAO,CAACyP,aAAR,GAAwB,CAAC3M,GAAD,EAAMrE,GAAN,EAAW6K,IAAX,KAAoB;AAC1C,MAAIvG,QAAQ,GAAGD,GAAG,CAACK,KAAJ,CAAUJ,QAAzB;AACAyB,eAAa,CAACiL,aAAd,CAA4B1M,QAA5B,EAAsCvE,IAAtC,CACGE,MAAD,IAAY;AACVD,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB1C,MAArB;AACD,GAHH,EAIGI,GAAD,IAAS;AACPL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,aAAO,EAAE,KADU;AAEnBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAFL,KAArB;AAID,GATH;AAWD,CAbD;;AAeAtD,OAAO,CAAC+P,eAAR,GAA0B,CAACjN,GAAD,EAAMrE,GAAN,EAAW6K,IAAX,KAAoB;AAC5C,MAAI;AAAEvG,YAAF;AAAYtB,QAAZ;AAAkB0J,UAAlB;AAA0BC,gBAA1B;AAAwC9J;AAAxC,MAAqDwB,GAAG,CAACe,IAA7D;AACAW,eAAa,CACVuL,eADH,CACmBhN,QADnB,EAC6BtB,IAD7B,EACmC0J,MADnC,EAC2CC,YAD3C,EACyD9J,QADzD,EAEG9C,IAFH,CAGKE,MAAD,IAAY;AACVD,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB1C,MAArB;AACD,GALL,EAMKI,GAAD,IAAS;AACPL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,aAAO,EAAE,KADU;AAEnBC,aAAO,EACLxE,GAAG,CAACwE,OAAJ,IAAe;AAHE,KAArB;AAKD,GAZL;AAcD,CAhBD;;AAkBAtD,OAAO,CAACgQ,eAAR,GAA0B,OAAOlN,GAAP,EAAYrE,GAAZ,EAAiB6K,IAAjB,KAA0B;AAClD,MAAI;AACF,QAAI;AAAElG,UAAF;AAAQwK;AAAR,QAAyB9K,GAAG,CAACK,KAAjC;AACA,QAAI8M,MAAM,GAAG,MAAMzL,aAAa,CAACwL,eAAd,CAA8B5M,IAA9B,CAAnB;AACA,QAAI+E,YAAY,GAAG,MAAMC,iBAAiB,CAACwF,YAAD,CAA1C;;AACA,QAAIzF,YAAJ,EAAkB;AAChB1J,SAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB6O,MAArB;AACD,KAFD,MAEOxR,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAE;AAA3B,KAArB;AACR,GAPD,CAOE,OAAOxE,GAAP,EAAY;AACZL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,aAAO,EAAE,KADU;AAEnBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAFL,KAArB;AAID;AACF,CAdD;;AAgBAtD,OAAO,CAACkQ,UAAR,GAAqB,CAACpN,GAAD,EAAMrE,GAAN,KAAc;AACjC,MAAIsE,QAAQ,GAAGD,GAAG,CAACK,KAAJ,CAAUJ,QAAzB;;AACA,MAAIA,QAAJ,EAAc;AACZmM,eAAW,CAACiB,gBAAZ,CAA6BpN,QAA7B,EAAuCvE,IAAvC,CACGwM,KAAD,IAAW;AACT,UAAIoF,OAAO,GAAGpF,KAAK,CAACnC,GAAN,CAAWgF,GAAD,IAASA,GAAG,CAAC1C,MAAvB,CAAd;AACA,YAAMkF,eAAe,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQF,OAAR,CAAJ,CAAxB;AACA3R,SAAG,CACA0B,MADH,CACU,GADV,EAEGiB,IAFH,CAGIiP,eAAe,CACZxE,MADH,CACWX,CAAD,IAAO,OAAOA,CAAP,KAAa,WAD9B,EAEGrC,GAFH,CAEQ0H,CAAD,KAAQ;AAAEpF,cAAM,EAAEoF;AAAV,OAAR,CAFP,CAHJ;AAOD,KAXH,EAYGzR,GAAD,IAAS;AACPL,SAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,eAAO,EAAE,KADU;AAEnBC,eAAO,EACLxE,GAAG,CAACwE,OAAJ,IACA;AAJiB,OAArB;AAMD,KAnBH;AAqBD,GAtBD,MAuBE7E,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,WAAO,EAAE,KADU;AAEnBC,WAAO,EAAE;AAFU,GAArB;AAIH,CA7BD;;AA+BAtD,OAAO,CAACwQ,gBAAR,GAA2B,CAAC1N,GAAD,EAAMrE,GAAN,KAAc;AACvC,MAAI;AAAEsE,YAAF;AAAYoI;AAAZ,MAAuBrI,GAAG,CAACK,KAA/B;;AACA,MAAIJ,QAAJ,EAAc;AACZmM,eAAW,CAACuB,sBAAZ,CAAmC1N,QAAnC,EAA6CoI,MAA7C,EAAqD3M,IAArD,CACGwM,KAAD,IAAW;AACT,UAAI0F,aAAa,GAAG1F,KAAK,CAACnC,GAAN,CAAWgF,GAAD,IAASA,GAAG,CAACzC,YAAvB,CAApB;AACA,YAAMuF,qBAAqB,GAAG,CAAC,GAAG,IAAIL,GAAJ,CAAQI,aAAR,CAAJ,CAA9B;AACAjS,SAAG,CACA0B,MADH,CACU,GADV,EAEGiB,IAFH,CAGIuP,qBAAqB,CAClB9E,MADH,CACWX,CAAD,IAAO,OAAOA,CAAP,KAAa,WAD9B,EAEGrC,GAFH,CAEQ0H,CAAD,KAAQ;AAAEnF,oBAAY,EAAEmF;AAAhB,OAAR,CAFP,CAHJ;AAOD,KAXH,EAYGzR,GAAD,IAAS;AACPL,SAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,eAAO,EAAE,KADU;AAEnBC,eAAO,EACLxE,GAAG,CAACwE,OAAJ,IAAe;AAHE,OAArB;AAKD,KAlBH;AAoBD,GArBD,MAsBE7E,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,WAAO,EAAE,KADU;AAEnBC,WAAO,EAAE;AAFU,GAArB;AAIH,CA5BD;;AA8BAtD,OAAO,CAAC4Q,gBAAR,GAA2B,CAAC9N,GAAD,EAAMrE,GAAN,KAAc;AACvC,MAAI;AAAEsE,YAAF;AAAYlC;AAAZ,MAAuBiC,GAAG,CAACe,IAA/B;;AACA,MAAIuL,QAAQ,CAACV,OAAT,CAAiB3L,QAAjB,CAAJ,EAAgC;AAC9ByB,iBAAa,CACVoM,gBADH,CACoB7N,QADpB,EAC8BlC,MAD9B,EAEGrC,IAFH,CAESqS,GAAD,IAAS;AACbpS,SAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,eAAO,EAAE,IADU;AAEnBC,eAAO,EACL;AAHiB,OAArB;AAKD,KARH,EASGzE,KATH,CASUC,GAAD,IAAS;AACdL,SAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,eAAO,EAAE,KADU;AAEnBC,eAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAFL,OAArB;AAID,KAdH;AAeD,GAhBD,MAiBE7E,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,WAAO,EAAE,KADU;AAEnBC,WAAO,EAAE;AAFU,GAArB;AAIH,CAvBD;;AAyBAtD,OAAO,CAAC8Q,eAAR,GAA0B,CAAChO,GAAD,EAAMrE,GAAN,KAAc;AACtC,MAAI;AAAEsE;AAAF,MAAeD,GAAG,CAACK,KAAvB;;AACA,MAAIiM,QAAQ,CAACV,OAAT,CAAiB3L,QAAjB,CAAJ,EAAgC;AAC9ByB,iBAAa,CACVsM,eADH,CACmB/N,QADnB,EAEGvE,IAFH,CAESqC,MAAD,IAAY;AAChBpC,SAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB,EAAE,GAAGP;AAAL,OAArB;AACD,KAJH,EAKGhC,KALH,CAKUC,GAAD,IAAS;AACdL,SAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,eAAO,EAAE,KADU;AAEnBC,eAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAFL,OAArB;AAID,KAVH;AAWD,GAZD,MAaE7E,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,WAAO,EAAE,KADU;AAEnBC,WAAO,EAAE;AAFU,GAArB;AAIH,CAnBD;;AAqBAtD,OAAO,CAAC+Q,gBAAR,GAA2B,OAAOjO,GAAP,EAAYrE,GAAZ,KAAoB;AAC7C,MAAI;AACF,QAAI;AAAEsE,cAAF;AAAYoI;AAAZ,QAAuBrI,GAAG,CAACe,IAA/B;;AACA,QAAIuL,QAAQ,CAACV,OAAT,CAAiB3L,QAAjB,CAAJ,EAAgC;AAC9B,UAAI8N,GAAG,GAAG,MAAM5B,cAAc,CAAC8B,gBAAf,CAAgChO,QAAhC,EAA0CoI,MAA1C,CAAhB;AAEA1M,SAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,eAAO,EAAE,IADU;AAEnBC,eAAO,EAAE;AAFU,OAArB;AAID,KAPD,MAQE7E,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,aAAO,EAAE,KADU;AAEnBC,aAAO,EAAE;AAFU,KAArB;AAIH,GAdD,CAcE,OAAOxE,GAAP,EAAY;AACZL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,aAAO,EAAE,KADU;AAEnBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAFL,KAArB;AAID;AACF,CArBD;;AAuBAtD,OAAO,CAACgR,gBAAR,GAA2B,OAAOlO,GAAP,EAAYrE,GAAZ,KAAoB;AAC7C,MAAI;AACF,QAAI;AAAEsE;AAAF,QAAeD,GAAG,CAACK,KAAvB;;AACA,QAAIiM,QAAQ,CAACV,OAAT,CAAiB3L,QAAjB,CAAJ,EAAgC;AAC9B,UAAIqN,OAAO,GAAG,MAAMnB,cAAc,CAAC+B,gBAAf,CAAgCjO,QAAhC,CAApB;AACAtE,SAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB,EAAE,GAAGgP;AAAL,OAArB;AACD,KAHD,MAIE3R,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,aAAO,EAAE,KADU;AAEnBC,aAAO,EAAE;AAFU,KAArB;AAIH,GAVD,CAUE,OAAOxE,GAAP,EAAY;AACZL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,aAAO,EAAE,KADU;AAEnBC,aAAO,EACLxE,GAAG,CAACwE,OAAJ,IAAe;AAHE,KAArB;AAKD;AACF,CAlBD;;AAoBAtD,OAAO,CAACmQ,gBAAR,GAA2B,OAAOrN,GAAP,EAAYrE,GAAZ,KAAoB;AAC7C,MAAI;AACF,QAAI;AAAEsE;AAAF,QAAeD,GAAG,CAACK,KAAvB;;AACA,QAAIiM,QAAQ,CAACV,OAAT,CAAiB3L,QAAjB,CAAJ,EAAgC;AAC9B,UAAIiI,KAAK,GAAG,MAAMxG,aAAa,CAAC2L,gBAAd,CAA+BpN,QAA/B,CAAlB;AACAtE,SAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB4J,KAArB;AACD,KAHD,MAIEvM,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,aAAO,EAAE,KADU;AAEnBC,aAAO,EAAE;AAFU,KAArB;AAIH,GAVD,CAUE,OAAOxE,GAAP,EAAY;AACZL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBkC,aAAO,EACLxE,GAAG,CAACwE,OAAJ,IAAe;AAFE,KAArB;AAID;AACF,CAjBD;;AAmBAtD,OAAO,CAACiR,gBAAR,GAA2B,OAAOnO,GAAP,EAAYrE,GAAZ,KAAoB;AAC7C,MAAI;AACF,QAAI;AAAEsE;AAAF,QAAeD,GAAG,CAACK,KAAvB;;AACA,QAAIiM,QAAQ,CAACV,OAAT,CAAiB3L,QAAjB,CAAJ,EAAgC;AAC9B,UAAImO,IAAI,GAAG,MAAMjC,cAAc,CAACgC,gBAAf,CAAgClO,QAAhC,CAAjB,CAD8B,CAE9B;;AACAtE,SAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB8P,IAArB;AACD,KAJD,MAKEzS,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,aAAO,EAAE,KADU;AAEnBC,aAAO,EAAE;AAFU,KAArB;AAIH,GAXD,CAWE,OAAOxE,GAAP,EAAY;AACZL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBkC,aAAO,EACLxE,GAAG,CAACwE,OAAJ,IAAe;AAFE,KAArB;AAID;AACF,CAlBD;;AAoBAtD,OAAO,CAACmR,sBAAR,GAAiC,OAAOrO,GAAP,EAAYrE,GAAZ,KAAoB;AACnD,MAAI;AACF,QAAI;AAAEsE;AAAF,QAAeD,GAAG,CAACK,KAAvB;;AACA,QAAIiM,QAAQ,CAACV,OAAT,CAAiB3L,QAAjB,CAAJ,EAAgC;AAC9B,UAAImO,IAAI,GAAG,MAAMjC,cAAc,CAACkC,sBAAf,CAAsCpO,QAAtC,CAAjB;AACAtE,SAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB8P,IAArB;AACD,KAHD,MAIEzS,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,aAAO,EAAE,KADU;AAEnBC,aAAO,EAAE;AAFU,KAArB;AAIH,GAVD,CAUE,OAAOxE,GAAP,EAAY;AACZL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBkC,aAAO,EACLxE,GAAG,CAACwE,OAAJ,IAAe;AAFE,KAArB;AAID;AACF,CAjBD;;AAmBAtD,OAAO,CAACoR,2BAAR,GAAsC,OAAOtO,GAAP,EAAYrE,GAAZ,KAAoB;AACxD,MAAI;AACF,UAAM;AAAEsE;AAAF,QAAeD,GAAG,CAACK,KAAzB;;AACA,QAAIiM,QAAQ,CAACV,OAAT,CAAiB3L,QAAjB,CAAJ,EAAgC;AAC9B,YAAMsO,SAAS,GAAG,MAAMpC,cAAc,CAACkC,sBAAf,CAAsCpO,QAAtC,CAAxB;AACA,YAAMiI,KAAK,GAAG,MAAMkE,WAAW,CAACiB,gBAAZ,CAA6BpN,QAA7B,CAApB;AAEA,YAAMuO,aAAa,GAAGD,SAAS,CAACxI,GAAV,CAAe0I,CAAD,IAAO;AACzC,YAAIC,YAAY,GAAGxG,KAAK,CAACa,MAAN,CAAcX,CAAD,IAC9BA,CAAC,CAACQ,SAAF,GAAcR,CAAC,CAACQ,SAAF,CAAYlM,QAAZ,OAA2B+R,CAAC,CAACpI,GAAF,CAAM3J,QAAN,EAAzC,GAA4D,KAD3C,CAAnB;AAGA,eAAO;AACLiS,iBAAO,EAAE,EAAE,GAAGF;AAAL,WADJ;AAELvG,eAAK,EAAEwG,YAAY,CAAC3I,GAAb,CAAkB6I,EAAD,KAAS;AAC/BtI,cAAE,EAAEsI,EAAE,CAACvI,GAAH,CAAO3J,QAAP,EAD2B;AAE/BiC,gBAAI,EAAEiQ,EAAE,CAACjQ,IAFsB;AAG/BiH,kBAAM,EAAEgJ,EAAE,CAAChJ,MAHoB;AAI/BiJ,mBAAO,EAAE,OAAOD,EAAE,CAACC,OAAV,KAAsB,WAAtB,GAAoCD,EAAE,CAACC,OAAvC,GAAiD;AAJ3B,WAAT,CAAjB;AAFF,SAAP;AASD,OAbqB,CAAtB;AAeAlT,SAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBkQ,aAArB;AACD,KApBD,MAqBE7S,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,aAAO,EAAE,KADU;AAEnBC,aAAO,EAAE;AAFU,KAArB;AAIH,GA3BD,CA2BE,OAAOxE,GAAP,EAAY;AACZL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBkC,aAAO,EACLxE,GAAG,CAACwE,OAAJ,IAAe;AAFE,KAArB;AAID;AACF,CAlCD;;AAoCAtD,OAAO,CAAC4R,wBAAR,GAAmC,OAAO9O,GAAP,EAAYrE,GAAZ,KAAoB;AACrD,MAAI;AACF,UAAM;AAAEsE,cAAF;AAAY2I,eAAZ;AAAuBiG;AAAvB,QAAmC7O,GAAG,CAACe,IAA7C;;AACA,QAAIuL,QAAQ,CAACV,OAAT,CAAiB3L,QAAjB,CAAJ,EAAgC;AAC9B,YAAMiI,KAAK,GAAG,MAAMkE,WAAW,CAAChF,mBAAZ,CAAgCnH,QAAhC,EAA0C2I,SAA1C,CAApB;AAEA,UAAIrD,KAAK,GAAG,EAAZ;AACA2C,WAAK,CAACxE,OAAN,CAAe0E,CAAD,IAAO;AACnB7C,aAAK,CAAC5B,IAAN,CAAWyI,WAAW,CAAC2C,aAAZ,CAA0B3G,CAAC,CAAC/B,GAAF,CAAM3J,QAAN,EAA1B,EAA4CmS,OAA5C,CAAX;AACD,OAFD;AAGA,YAAMhT,OAAO,CAAC4J,GAAR,CAAYF,KAAZ,CAAN;AACA5J,SAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB4J,KAAK,CAACnC,GAAN,CAAWqC,CAAD,KAAQ,EAAE,GAAGA,CAAL;AAAQyG;AAAR,OAAR,CAAV,CAArB;AACD,KATD,MAUElT,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,aAAO,EAAE,KADU;AAEnBC,aAAO,EAAE;AAFU,KAArB;AAIH,GAhBD,CAgBE,OAAOxE,GAAP,EAAY;AACZL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBkC,aAAO,EACLxE,GAAG,CAACwE,OAAJ,IACA;AAHiB,KAArB;AAKD;AACF,CAxBD;;AA0BAtD,OAAO,CAAC8R,uBAAR,GAAkC,OAAOhP,GAAP,EAAYrE,GAAZ,KAAoB;AACpD,MAAI;AACF,UAAM;AAAEsE;AAAF,QAAeD,GAAG,CAACK,KAAzB;;AACA,QAAIiM,QAAQ,CAACV,OAAT,CAAiB3L,QAAjB,CAAJ,EAAgC;AAC9B,YAAMsO,SAAS,GAAG,MAAMpC,cAAc,CAACkC,sBAAf,CAAsCpO,QAAtC,CAAxB;AACA,YAAMiI,KAAK,GAAG,MAAMkE,WAAW,CAACiB,gBAAZ,CAA6BpN,QAA7B,CAApB;AACA,YAAMuO,aAAa,GAAGD,SAAS,CAACxI,GAAV,CAAe0I,CAAD,IAAO;AACzC,YAAIC,YAAY,GAAGxG,KAAK,CAACa,MAAN,CAAcX,CAAD,IAC9BA,CAAC,CAACQ,SAAF,GAAcR,CAAC,CAACQ,SAAF,CAAYlM,QAAZ,OAA2B+R,CAAC,CAACpI,GAAF,CAAM3J,QAAN,EAAzC,GAA4D,KAD3C,CAAnB;AAGA,eAAO;AACLiS,iBAAO,EAAE,EAAE,GAAGF;AAAL,WADJ;AAELpR,gBAAM,EAAE;AACNuI,kBAAM,EAAE8I,YAAY,CAACO,IAAb,CAAmB7G,CAAD,IAAOA,CAAC,CAACxC,MAA3B,CADF;AAENiJ,mBAAO,EAAEH,YAAY,CAClB3F,MADM,CACEX,CAAD,IAAOA,CAAC,CAACxC,MADV,EAENqJ,IAFM,CAEA7G,CAAD,IACJ,OAAOA,CAAC,CAACyG,OAAT,KAAqB,WAArB,GAAmCzG,CAAC,CAACyG,OAArC,GAA+C,KAH1C,CAFH;AAONK,iBAAK,EAAER,YAAY,CAAC3I,GAAb,CAAkBqC,CAAD,IAAOA,CAAC,CAAC8G,KAAF,IAAW,EAAnC,EAAuCC,IAAvC;AAPD;AAFH,SAAP;AAYD,OAhBqB,CAAtB;AAkBAxT,SAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqBkQ,aAArB;AACD,KAtBD,MAsBO;AACL7S,SAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBiC,eAAO,EAAE,KADU;AAEnBC,eAAO,EAAE;AAFU,OAArB;AAID;AACF,GA9BD,CA8BE,OAAOxE,GAAP,EAAY;AACZL,OAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBiB,IAAhB,CAAqB;AACnBkC,aAAO,EACLxE,GAAG,CAACwE,OAAJ,IACA;AAHiB,KAArB;AAKD;AACF,CAtCD,C;;;;;;;;;;;AC3XA,MAAM4L,WAAW,GAAGrR,mBAAO,CAAC,wDAAD,CAA3B;;AACA,MAAM0D,SAAS,GAAG1D,mBAAO,CAAC,oDAAD,CAAP,CAA8B0D,SAAhD;;AACA,MAAM2Q,YAAY,GAAGrU,mBAAO,CAAC,4DAAD,CAA5B;;AACA,MAAMuK,iBAAiB,GAAGvK,mBAAO,CAAC,0CAAD,CAAP,CAAyBuK,iBAAnD;;AACA,MAAM+J,UAAU,GAAGtU,mBAAO,CAAC,kEAAD,CAA1B;;AACAmC,OAAO,CAAC2M,cAAR,GAAyB,CAAC7J,GAAD,EAAMrE,GAAN,EAAW6K,IAAX,KAAoB;AAC3C;AACA,MAAI;AACF7H,QADE;AAEFmG,YAFE;AAGF6E,aAHE;AAIF3E,SAJE;AAKF0E,YALE;AAMF3E,aANE;AAOFwE,cAPE;AAQFC,YARE;AASFC,WATE;AAUFjH;AAVE,MAWAxC,GAAG,CAACe,IAXR,CAF2C,CAc3C;;AACAqL,aAAW,CAAC9G,iBAAZ,CAA8B9C,KAA9B,EAAqC9G,IAArC,CACG4T,IAAD,IAAU;AACR;AACAlD,eAAW,CACRmD,QADH,CACY;AACR5Q,UADQ;AAERmG,cAFQ;AAGR6E,eAHQ;AAIR3E,WAJQ;AAKR0E,cALQ;AAMR3E,eANQ;AAORwE,gBAPQ;AAQRC,cARQ;AASRC,aATQ;AAUR+F,mBAAa,EAAE;AAVP,KADZ,EAaG9T,IAbH,CAcK+T,OAAD,IAAa;AACX9T,SAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBiC,eAAO,EAAE,IADY;AAErBC,eAAO,EAAE7E,GAAG,CAAC6E,OAAJ,IAAe;AAFH,OAAvB;AAID,KAnBL,EAoBKxE,GAAD,IAAS;AACPL,SAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,eAAO,EAAE,KAAX;AAAkBC,eAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,OAFR;AAGD,KAxBL;AA0BD,GA7BH,EA8BGxE,GAAD,IAAS;AACPL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD,GAlCH;AAoCD,CAnDD;;AAqDAtD,OAAO,CAAC0M,gBAAR,GAA2B,CAAC5J,GAAD,EAAMrE,GAAN,EAAW6K,IAAX,KAAoB;AAC7C,MAAI;AACF7H,QADE;AAEFmG,YAFE;AAGF6E,aAHE;AAIF3E,SAJE;AAKF0E,YALE;AAMF3E,aANE;AAOFwE,cAPE;AAQFC,YARE;AASFC,WATE;AAUFjH;AAVE,MAWAxC,GAAG,CAACe,IAXR,CAD6C,CAa7C;;AACAqL,aAAW,CAAC9G,iBAAZ,CAA8B9C,KAA9B,EAAqC9G,IAArC,CACG4T,IAAD,IAAU;AACR;AACAlD,eAAW,CACRmD,QADH,CACY;AACR5Q,UADQ;AAERmG,cAFQ;AAGR6E,eAHQ;AAIR3E,WAJQ;AAKR0E,cALQ;AAMR3E,eANQ;AAORwE,gBAPQ;AAQRE,aARQ;AASRD,cATQ;AAURgG,mBAAa,EAAE;AAVP,KADZ,EAaG9T,IAbH,CAcK+T,OAAD,IAAa;AACX9T,SAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBiC,eAAO,EAAE,IADY;AAErBC,eAAO,EAAE7E,GAAG,CAAC6E,OAAJ,IAAe;AAFH,OAAvB;AAID,KAnBL,EAoBKxE,GAAD,IAAS;AACPL,SAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,eAAO,EAAE,KAAX;AAAkBC,eAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,OAFR;AAGD,KAxBL;AA0BD,GA7BH,EA8BGxE,GAAD,IAAS;AACPL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD,GAlCH;AAoCD,CAlDD;;AAoDAtD,OAAO,CAAC4M,aAAR,GAAwB,CAAC9J,GAAD,EAAMrE,GAAN,EAAW6K,IAAX,KAAoB;AAC1C,MAAI;AACF7H,QADE;AAEFmG,YAFE;AAGF6E,aAHE;AAIF3E,SAJE;AAKF0E,YALE;AAMF3E,aANE;AAOFwE,cAPE;AAQFC,YARE;AASFC,WATE;AAUFjH;AAVE,MAWAxC,GAAG,CAACe,IAXR,CAD0C,CAa1C;;AACAqL,aAAW,CAAC9G,iBAAZ,CAA8B9C,KAA9B,EAAqC9G,IAArC,CACG4T,IAAD,IAAU;AACR;AACAlD,eAAW,CACRmD,QADH,CACY;AACR5Q,UADQ;AAERmG,cAFQ;AAGR6E,eAHQ;AAIR3E,WAJQ;AAKR0E,cALQ;AAMR3E,eANQ;AAORwE,gBAPQ;AAQRC,cARQ;AASRC,aATQ;AAUR+F,mBAAa,EAAE;AAVP,KADZ,EAaG9T,IAbH,CAcK+T,OAAD,IAAa;AACX9T,SAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBiC,eAAO,EAAE,IADY;AAErBC,eAAO,EAAE7E,GAAG,CAAC6E,OAAJ,IAAe;AAFH,OAAvB;AAID,KAnBL,EAoBKxE,GAAD,IAAS;AACPL,SAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,eAAO,EAAE,KAAX;AAAkBC,eAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,OAFR;AAGD,KAxBL;AA0BD,GA7BH,EA8BGxE,GAAD,IAAS;AACPL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD,GAlCH;AAoCD,CAlDD;;AAoDAtD,OAAO,CAACmE,iBAAR,GAA4B,CAACrB,GAAD,EAAMrE,GAAN,KAAc;AACxC,MAAI;AAAE2F,UAAF;AAAUoO;AAAV,MAAuB1P,GAAG,CAACe,IAA/B;AACAqL,aAAW,CACR/K,iBADH,CACqBC,MADrB,EAC6BoO,QAD7B,EAEGhU,IAFH,CAESiU,OAAD,IAAa;AACjBhU,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,IAAX;AAAiBC,aAAO,EAAE;AAA1B,KAFR;AAGD,GANH,EAOGzE,KAPH,CAOUC,GAAD,IAAS;AACdL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD,GAXH;AAYD,CAdD;;AAgBAtD,OAAO,CAAC6M,aAAR,GAAwB,CAAC/J,GAAD,EAAMrE,GAAN,EAAW6K,IAAX,KAAoB;AAC1C,MAAI;AACF7H,QADE;AAEFmG,YAFE;AAGF6E,aAHE;AAIF3E,SAJE;AAKF0E,YALE;AAMF3E,aANE;AAOFwE,cAPE;AAQFC,YARE;AASFC,WATE;AAUFjH;AAVE,MAWAxC,GAAG,CAACe,IAXR,CAD0C,CAa1C;;AACAqL,aAAW,CAAC9G,iBAAZ,CAA8B9C,KAA9B,EAAqC9G,IAArC,CACG4T,IAAD,IAAU;AACR;AACAlD,eAAW,CACRwD,oBADH,CACwB;AACpBjR,UADoB;AAEpBmG,cAFoB;AAGpB6E,eAHoB;AAIpB3E,WAJoB;AAKpB0E,cAAQ,EAAEA,QALU;AAMpB3E,eANoB;AAOpBwE,gBAPoB;AAQpBC,cARoB;AASpBC,aAToB;AAUpB+F,mBAAa,EAAE;AAVK,KADxB,EAaG9T,IAbH,CAcK+T,OAAD,IAAa;AACX9T,SAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBiC,eAAO,EAAE,IADY;AAErBC,eAAO,EAAE7E,GAAG,CAAC6E,OAAJ,IAAe;AAFH,OAAvB;AAID,KAnBL,EAoBKxE,GAAD,IAAS;AACPL,SAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,eAAO,EAAE,KAAX;AAAkBC,eAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,OAFR;AAGD,KAxBL;AA0BD,GA7BH,EA8BGxE,GAAD,IAAS;AACPL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD,GAlCH;AAoCD,CAlDD;;AAoDAtD,OAAO,CAAC2S,oBAAR,GAA+B,OAAO7P,GAAP,EAAYrE,GAAZ,KAAoB;AACjD,MAAI;AACF,QAAI;AAAEqJ,WAAF;AAAS8F;AAAT,QAA0B9K,GAAG,CAACe,IAAlC;AACA,QAAIsE,YAAY,GAAG,MAAMC,iBAAiB,CAACwF,YAAD,CAA1C;;AAEA,QAAIzF,YAAJ,EAAkB;AAChB,UAAIyK,QAAQ,GAAG,MAAM1D,WAAW,CAAC2D,kBAAZ,CAA+B/K,KAA/B,CAArB;;AAEA,UAAI8K,QAAJ,EAAc;AACZ,YAAIE,QAAQ,GAAG,MAAMX,UAAU,CAAC3I,iBAAX,CAA6B1B,KAA7B,EAAoC8K,QAApC,CAArB;AAEAnU,WAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBkC,iBAAO,EAAE;AADY,SAAvB;AAGD,OAND,MAMO;AACL7E,WAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBkC,iBAAO,EAAE;AADY,SAAvB;AAGD;AACF,KAdD,MAeE7E,GAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBkC,aAAO,EAAE;AADY,KAAvB;AAGH,GAtBD,CAsBE,OAAOxE,GAAP,EAAY;AACZyB,WAAO,CAACuD,GAAR,CAAY,OAAZ,EAAqBhF,GAArB;AACAL,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBkC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AADH,KAAvB;AAGD;AACF,CA7BD;;AA+BAtD,OAAO,CAAC+S,gBAAR,GAA2B,OAAOjQ,GAAP,EAAYrE,GAAZ,EAAiB6K,IAAjB,KAA0B;AACnD,MAAI;AACF,UAAM;AAAE7H,UAAF;AAAQmG,cAAR;AAAkB6E,eAAlB;AAA6B3E,WAA7B;AAAoCD;AAApC,QAAkD/E,GAAG,CAACe,IAA5D;AACA,UAAMvC,QAAQ,GAAGC,SAAS,CAACuB,GAAG,CAACkQ,MAAJ,CAAW1R,QAAZ,CAA1B;;AACA,QAAI,CAACA,QAAL,EAAe;AACb7C,SAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEiC,eAAO,EAAE,KAAX;AAAkBC,eAAO,EAAE;AAA3B,OAAvB;AACA;AACD;;AACD,UAAM5E,MAAM,GAAG,MAAMwQ,WAAW,CAACmD,QAAZ,CAAqB;AACxC5Q,UADwC;AAExCmG,cAFwC;AAGxC6E,eAHwC;AAIxC3E,WAJwC;AAKxCD,eALwC;AAMxCyK,mBAAa,EAAE,KANyB;AAOxChR;AAPwC,KAArB,CAArB;AASA7C,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBiC,aAAO,EAAE,IADY;AAErBC,aAAO,EAAE5E,MAAM,CAAC4E,OAAP,IAAkB;AAFN,KAAvB;AAID,GApBD,CAoBE,OAAOxE,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CA1BD;;AA4BAtD,OAAO,CAACiT,kBAAR,GAA6B,OAAOnQ,GAAP,EAAYrE,GAAZ,KAAoB;AAC/C,MAAI;AACF,QAAI;AACFgD,UADE;AAEFmG,cAFE;AAGF6E,eAHE;AAIF3E,WAJE;AAKF0E,cALE;AAMF3E,eANE;AAOFwE,gBAPE;AAQFC,cARE;AASFC,aATE;AAUFiG,cAVE;AAWFzP,cAXE;AAYFoI,YAZE;AAaFC,kBAbE;AAcFhI,UAdE;AAeF9B,cAfE;AAgBFsM,kBAhBE,CAgBY;;AAhBZ,QAiBA9K,GAAG,CAACe,IAjBR;AAkBA,QAAIsE,YAAY,GAAG,MAAMC,iBAAiB,CAACwF,YAAD,CAA1C;;AACA,QAAIzF,YAAJ,EAAkB;AAChB,UAAI+K,OAAO,GAAG,MAAMhB,YAAY,CAACiB,eAAb,CAA6B/P,IAA7B,CAApB;AACA,UAAIgQ,IAAI,GAAG,IAAX;;AACA,UAAI5G,QAAQ,IAAIA,QAAQ,CAAC6G,IAAT,OAAoB,EAApC,EAAwC;AACtCD,YAAI,GAAG,MAAMlE,WAAW,CAACwD,oBAAZ,CAAiC;AAC5CjR,cAD4C;AAE5CmG,kBAF4C;AAG5C6E,mBAH4C;AAI5C3E,eAJ4C;AAK5C0E,kBAL4C;AAM5C3E,mBAN4C;AAO5C2K,kBAP4C;AAQ5CnG,oBAR4C;AAS5CC,kBAT4C;AAU5CC,iBAV4C;AAW5C1F,gBAAM,EAAE9D,QAXoC;AAY5CoI,gBAZ4C;AAa5CC,sBAb4C;AAc5C9J,kBAd4C;AAe5CgR,uBAAa,EAAE,KAf6B,CAetB;;AAfsB,SAAjC,CAAb;AAiBD,OAlBD,MAkBO;AACLc,YAAI,GAAG,MAAMlE,WAAW,CAACmD,QAAZ,CAAqB;AAChC5Q,cADgC;AAEhCmG,kBAFgC;AAGhC6E,mBAHgC;AAIhC3E,eAJgC;AAKhC0E,kBALgC;AAMhC3E,mBANgC;AAOhC2K,kBAPgC;AAQhCnG,oBARgC;AAShCC,kBATgC;AAUhCC,iBAVgC;AAWhC1F,gBAAM,EAAE9D,QAXwB;AAYhCoI,gBAZgC;AAahCC,sBAbgC;AAchC9J,kBAdgC;AAehCgR,uBAAa,EAAE;AAfiB,SAArB,CAAb;AAiBD;;AACD,UAAIgB,UAAU,GAAG,MAAMpB,YAAY,CAACqB,sBAAb,CACrBnQ,IADqB,EAErBgQ,IAAI,CAACtF,QAAL,CAAcM,IAAd,CAAmBjF,GAAnB,CAAuB3J,QAAvB,EAFqB,CAAvB;AAKAf,SAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBiC,eAAO,EAAE,IADY;AAErBC,eAAO,EAAEgQ,UAAU,CAAChQ,OAAX,IAAsB;AAFV,OAAvB;AAID,KAjDD,MAiDO7E,GAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAE;AAA3B,KAAvB;AACR,GAtED,CAsEE,OAAOxE,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CA5ED;;AA8EAtD,OAAO,CAACwT,aAAR,GAAwB,OAAO1Q,GAAP,EAAYrE,GAAZ,EAAiB6K,IAAjB,KAA0B;AAChD,MAAI;AACF,UAAMhI,QAAQ,GAAGC,SAAS,CAACuB,GAAG,CAACkQ,MAAJ,CAAW1R,QAAZ,CAA1B;;AACA,QAAI,CAACA,QAAL,EAAe;AACb7C,SAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEiC,eAAO,EAAE,KAAX;AAAkBC,eAAO,EAAE;AAA3B,OAAvB;AACA;AACD;;AACD,UAAM5E,MAAM,GAAG,MAAMwQ,WAAW,CAACsE,aAAZ,CAA0BlS,QAA1B,CAArB;AACA7C,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AAAEiC,aAAO,EAAE,IAAX;AAAiB/E,UAAI,EAAEI;AAAvB,KAAvB;AACD,GARD,CAQE,OAAOI,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CAdD;;AAgBAtD,OAAO,CAACyT,WAAR,GAAsB,OAAO3Q,GAAP,EAAYrE,GAAZ,EAAiB6K,IAAjB,KAA0B;AAC9C,MAAI;AACF4F,eAAW,CAACwE,cAAZ,CAA2B5Q,GAAG,CAACK,KAAJ,CAAUmC,KAArC,EAA4C9G,IAA5C,CACGE,MAAD,IAAY;AACVD,SAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB1C,MAAvB;AACD,KAHH,EAIGI,GAAD,IAAS;AACPL,SAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,eAAO,EAAE,KAAX;AAAkBC,eAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,OAFR;AAGD,KARH;AAUD,GAXD,CAWE,OAAOxE,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CAjBD;;AAmBAtD,OAAO,CAAC2T,WAAR,GAAsB,OAAO7Q,GAAP,EAAYrE,GAAZ,EAAiB6K,IAAjB,KAA0B;AAC9C,MAAI;AACF,QAAI5K,MAAM,GAAG,MAAMwQ,WAAW,CAACyE,WAAZ,CAAwB7Q,GAAG,CAACK,KAAJ,CAAUiG,EAAlC,CAAnB;AACA3K,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB1C,MAAvB;AACD,GAHD,CAGE,OAAOI,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CATD;;AAWAtD,OAAO,CAAC4T,WAAR,GAAsB,OAAO9Q,GAAP,EAAYrE,GAAZ,EAAiB6K,IAAjB,KAA0B;AAC9C,MAAI;AACF,QAAIuK,QAAQ,GAAG,MAAM3E,WAAW,CAAC4E,gBAAZ,CAA6BhR,GAAG,CAACK,KAAJ,CAAUiB,MAAvC,CAArB;AACA3F,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuByS,QAAvB;AACD,GAHD,CAGE,OAAO/U,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CATD;;AAWAtD,OAAO,CAAC+T,WAAR,GAAsB,OAAOjR,GAAP,EAAYrE,GAAZ,EAAiB6K,IAAjB,KAA0B;AAC9C,MAAI;AACF,QAAI;AAAE0K,UAAF;AAAQ5P;AAAR,QAAmBtB,GAAG,CAACe,IAA3B;AACA,QAAIgQ,QAAQ,GAAG,MAAM3E,WAAW,CAAC+E,iBAAZ,CAA8B7P,MAA9B,EAAsC4P,IAAtC,CAArB;AACAvV,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuByS,QAAvB;AACD,GAJD,CAIE,OAAO/U,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CAVD;;AAYAtD,OAAO,CAACkU,cAAR,GAAyB,OAAOpR,GAAP,EAAYrE,GAAZ,EAAiB6K,IAAjB,KAA0B;AACjD,MAAI;AACF,QAAI;AAAE0K,UAAF;AAAQ5P;AAAR,QAAmBtB,GAAG,CAACe,IAA3B;AACA,QAAIgQ,QAAQ,GAAG,MAAM3E,WAAW,CAACiF,mBAAZ,CAAgC/P,MAAhC,EAAwC4P,IAAxC,CAArB;AACAvV,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuByS,QAAvB;AACD,GAJD,CAIE,OAAO/U,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CAVD;;AAYAtD,OAAO,CAACoU,gBAAR,GAA2B,OAAOtR,GAAP,EAAYrE,GAAZ,EAAiB6K,IAAjB,KAA0B;AACnD,MAAI;AACF,QAAI;AAAE+K,eAAF;AAAajQ;AAAb,QAAwBtB,GAAG,CAACe,IAAhC;AACA,QAAI6G,UAAU,GAAG,MAAMwE,WAAW,CAACkF,gBAAZ,CAA6BhQ,MAA7B,EAAqCiQ,SAArC,CAAvB;AACA5V,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuBsJ,UAAvB;AACD,GAJD,CAIE,OAAO5L,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CAVD;;AAYAtD,OAAO,CAACsU,iBAAR,GAA4B,OAAOxR,GAAP,EAAYrE,GAAZ,KAAoB;AAC9C,MAAI;AACF,QAAI;AAAEsE,cAAF;AAAYoI,YAAZ;AAAoBC;AAApB,QAAqCtI,GAAG,CAACK,KAA7C;AACA,QAAI6H,KAAK,GAAG,MAAMkE,WAAW,CAACoF,iBAAZ,CAChBvR,QADgB,EAEhBoI,MAFgB,EAGhBC,YAHgB,CAAlB;AAKA3M,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB4J,KAAvB;AACD,GARD,CAQE,OAAOlM,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CAdD;;AAgBAtD,OAAO,CAACuU,cAAR,GAAyB,OAAOzR,GAAP,EAAYrE,GAAZ,EAAiB6K,IAAjB,KAA0B;AACjD,MAAI;AACF,QAAI;AAAElF;AAAF,QAAatB,GAAG,CAACe,IAArB;AACA,QAAI2Q,cAAc,GAAG,MAAMtF,WAAW,CAACqF,cAAZ,CAA2BnQ,MAA3B,CAA3B;AACA3F,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuBoT,cAAvB;AACD,GAJD,CAIE,OAAO1V,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CAVD;;AAYAtD,OAAO,CAACyU,kBAAR,GAA6B,OAAO3R,GAAP,EAAYrE,GAAZ,KAAoB;AAC/C,MAAI;AACF,QAAI;AAAE2F;AAAF,QAAatB,GAAG,CAACK,KAArB;AACA,QAAIuR,eAAe,GAAG,MAAMxF,WAAW,CAACuF,kBAAZ,CAA+BrQ,MAA/B,CAA5B;AACA3F,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuBsT,eAAvB;AACD,GAJD,CAIE,OAAO5V,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CAVD;;AAYAtD,OAAO,CAAC2U,cAAR,GAAyB,OAAO7R,GAAP,EAAYrE,GAAZ,KAAoB;AAC3C,MAAI;AACF,QAAI;AAAEmI,UAAF;AAAQ4F;AAAR,QAAqB1J,GAAG,CAACK,KAA7B;AACA,QAAIyR,IAAI,GAAGzO,MAAM,CAACC,IAAP,CAAYoG,QAAZ,EAAsB,QAAtB,CAAX;AACA,QAAIqI,eAAe,GAAGD,IAAI,CAACpV,QAAL,CAAc,OAAd,CAAtB;AACA,QAAIsV,UAAU,GAAG,MAAM5F,WAAW,CAACyF,cAAZ,CAA2B/N,IAA3B,EAAiCiO,eAAjC,CAAvB;AACApW,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB0T,UAAvB;AACD,GAND,CAME,OAAOhW,GAAP,EAAY;AACZL,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBiC,aAAO,EAAE,KADY;AAErBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAFH,KAAvB;AAID;AACF,CAbD;;AAeAtD,OAAO,CAAC+U,cAAR,GAAyB,OAAOjS,GAAP,EAAYrE,GAAZ,KAAoB;AAC3C,MAAI;AACF,QAAI;AAAE2F,YAAF;AAAUoI,cAAV;AAAoB/C;AAApB,QAAqC3G,GAAG,CAACe,IAA7C;AACA,QAAI+Q,IAAI,GAAGzO,MAAM,CAACC,IAAP,CAAYoG,QAAZ,EAAsB,QAAtB,CAAX;AACA,QAAIqI,eAAe,GAAGD,IAAI,CAACpV,QAAL,CAAc,OAAd,CAAtB;AAEA,QAAIwV,KAAK,GAAG7O,MAAM,CAACC,IAAP,CAAYqD,YAAZ,EAA0B,QAA1B,CAAZ;AACA,QAAIwL,mBAAmB,GAAGD,KAAK,CAACxV,QAAN,CAAe,OAAf,CAA1B;AAEA,QAAIsV,UAAU,GAAG,MAAM5F,WAAW,CAAC6F,cAAZ,CACrB3Q,MADqB,EAErByQ,eAFqB,EAGrBI,mBAHqB,CAAvB;AAKAxW,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB0T,UAAvB;AACD,GAdD,CAcE,OAAOhW,GAAP,EAAY;AACZL,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBiC,aAAO,EAAE,KADY;AAErBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAFH,KAAvB;AAID;AACF,CArBD;;AAuBAtD,OAAO,CAACkV,qBAAR,GAAgC,OAAOpS,GAAP,EAAYrE,GAAZ,KAAoB;AAClD,MAAI;AACF,QAAI;AAAE2F,YAAF;AAAU+Q,qBAAV;AAA2BC;AAA3B,QAA2CtS,GAAG,CAACe,IAAnD;AACAsR,mBAAe,GAAGhP,MAAM,CAACC,IAAP,CAAY+O,eAAZ,EAA6B,QAA7B,EAAuC3V,QAAvC,CAAgD,OAAhD,CAAlB;AACA4V,eAAW,GAAGjP,MAAM,CAACC,IAAP,CAAYgP,WAAZ,EAAyB,QAAzB,EAAmC5V,QAAnC,CAA4C,OAA5C,CAAd;AACA,QAAId,MAAM,GAAG,MAAMwQ,WAAW,CAACgG,qBAAZ,CACjB9Q,MADiB,EAEjB+Q,eAFiB,EAGjBC,WAHiB,CAAnB;AAKA3W,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB1C,MAAvB;AACD,GAVD,CAUE,OAAOI,GAAP,EAAY;AACZL,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBiC,aAAO,EAAE,KADY;AAErBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAFH,KAAvB;AAID;AACF,CAjBD;;AAmBAtD,OAAO,CAACqV,aAAR,GAAwB,OAAOvS,GAAP,EAAYrE,GAAZ,KAAoB;AAC1C,MAAI;AACF,QAAI;AAAE2F,YAAF;AAAUkR;AAAV,QAA2BxS,GAAG,CAACe,IAAnC;AACA,QAAI0R,MAAM,GAAG,MAAMrG,WAAW,CAACmG,aAAZ,CAA0BjR,MAA1B,EAAkCkR,YAAlC,CAAnB;AACA7W,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuBmU,MAAvB;AACD,GAJD,CAIE,OAAOzW,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CAVD;;AAYAtD,OAAO,CAACwV,cAAR,GAAyB,OAAO1S,GAAP,EAAYrE,GAAZ,KAAoB;AAC3C,MAAI;AACF,QAAI;AAAE2F,YAAF;AAAU9C;AAAV,QAAuBwB,GAAG,CAACe,IAA/B;AACA,QAAI0R,MAAM,GAAG,MAAMrG,WAAW,CAACsG,cAAZ,CAA2BpR,MAA3B,EAAmC9C,QAAnC,CAAnB;AACA7C,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuBmU,MAAvB;AACD,GAJD,CAIE,OAAOzW,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CAVD;;AAYAtD,OAAO,CAACyV,iBAAR,GAA4B,OAAO3S,GAAP,EAAYrE,GAAZ,KAAoB;AAC9C,MAAI;AACF,QAAI;AAAE2F,YAAF;AAAUsR;AAAV,QAAsB5S,GAAG,CAACe,IAA9B;AACA,QAAI0R,MAAM,GAAG,MAAMrG,WAAW,CAACuG,iBAAZ,CAA8BrR,MAA9B,EAAsCsR,OAAtC,CAAnB;AACAjX,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuBmU,MAAvB;AACD,GAJD,CAIE,OAAOzW,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CAVD;;AAYAtD,OAAO,CAAC6R,aAAR,GAAwB,OAAO/O,GAAP,EAAYrE,GAAZ,KAAoB;AAC1C,MAAI;AACF,QAAI;AAAE2F,YAAF;AAAUuN;AAAV,QAAsB7O,GAAG,CAACe,IAA9B;AACA,QAAI0R,MAAM,GAAG,MAAMrG,WAAW,CAAC2C,aAAZ,CAA0BzN,MAA1B,EAAkCuN,OAAlC,CAAnB;AACAlT,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuBmU,MAAvB;AACD,GAJD,CAIE,OAAOzW,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CAVD;;AAYAtD,OAAO,CAAC2V,kBAAR,GAA6B,OAAO7S,GAAP,EAAYrE,GAAZ,KAAoB;AAC/C,MAAI;AACF,QAAI;AAAE2F;AAAF,QAAatB,GAAG,CAACK,KAArB;AACA,QAAIyS,SAAS,GAAG,MAAM1G,WAAW,CAACyG,kBAAZ,CAA+BvR,MAA/B,CAAtB;AACA3F,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuBwU,SAAvB;AACD,GAJD,CAIE,OAAO9W,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CAVD;;AAYAtD,OAAO,CAAC6V,WAAR,GAAsB,OAAO/S,GAAP,EAAYrE,GAAZ,KAAoB;AACxC,MAAI;AACF,QAAI;AAAE2F,YAAF;AAAU0R;AAAV,QAAmBhT,GAAG,CAACe,IAA3B;AACA,QAAI0R,MAAM,GAAG,MAAMrG,WAAW,CAAC2G,WAAZ,CAAwBzR,MAAxB,EAAgC0R,IAAhC,CAAnB;AACArX,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuBmU,MAAvB;AACD,GAJD,CAIE,OAAOzW,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CAVD;;AAYAtD,OAAO,CAAC+V,cAAR,GAAyB,OAAOjT,GAAP,EAAYrE,GAAZ,KAAoB;AAC3C,MAAI;AACF,QAAI;AAAE2F,YAAF;AAAU0R;AAAV,QAAmBhT,GAAG,CAACe,IAA3B;AACA,QAAI0R,MAAM,GAAG,MAAMrG,WAAW,CAAC6G,cAAZ,CAA2B3R,MAA3B,EAAmC0R,IAAnC,CAAnB;AACArX,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuBmU,MAAvB;AACD,GAJD,CAIE,OAAOzW,GAAP,EAAY;AACZL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CAVD,C;;;;;;;;;;;ACrnBA,MAAM;AACJ0S;AADI,IAEFnY,mBAAO,CAAC,wFAAD,CAFX;;AAGA,MAAM;AAAEoY;AAAF,IAAmCpY,mBAAO,CAAC,wDAAD,CAAhD;;AACA,MAAMqY,iBAAiB,GAAG1T,OAAO,CAACC,GAAR,CAAY0T,UAAtC;AACA,MAAMC,sBAAsB,GAAG5T,OAAO,CAACC,GAAR,CAAY4T,eAA3C;;AAEArW,OAAO,CAACsW,UAAR,GAAqB,OAAOxT,GAAP,EAAYrE,GAAZ,KAAoB;AACvC,MAAI;AACF,QAAIH,IAAI,GAAGwE,GAAG,CAACwD,KAAJ,CAAU,CAAV,CAAX;AACA,UAAMiQ,2BAA2B,GAAG,IAAIN,4BAAJ,CAClCC,iBADkC,CAApC;AAGA,UAAMM,MAAM,GAAG,IAAIR,oBAAJ,CACbO,2BADa,EAEbH,sBAFa,CAAf;AAKA,UAAMK,OAAO,GAAG,CACd;AACA;AAFc,KAAhB;AAIA,QAAIvW,QAAQ,GAAG,MAAMsW,MAAM,CAACE,4BAAP,CACnB,IADmB,EAEnBpY,IAAI,CAACqY,MAFc,EAGnBF,OAHmB,CAArB;AAKAhY,OAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuBlB,QAAvB;AACD,GApBD,CAoBE,OAAOpB,GAAP,EAAY;AACZyB,WAAO,CAACF,KAAR,CAAcvB,GAAd;AACAL,OAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBC,aAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,KAFR;AAGD;AACF,CA3BD,C;;;;;;;;;;;ACPA,MAAMsT,OAAO,GAAG/Y,mBAAO,CAAC,kDAAD,CAAvB;;AACA,MAAMgZ,MAAM,GAAGhZ,mBAAO,CAAC,gDAAD,CAAtB;;AACA,MAAM6F,IAAI,GAAG7F,mBAAO,CAAC,4CAAD,CAApB;;AAEA,MAAMoT,gBAAgB,GAAG,MAAOlO,QAAP,IAAoB;AAC3C,MAAI;AACF,QAAI+T,eAAe,GAAG,MAAMD,MAAM,CAACE,gBAAP,CAAwBhU,QAAxB,CAA5B;AACA,QAAIkI,QAAQ,GAAG,EAAf;AACA6L,mBAAe,CAAC1G,OAAhB,CAAwB5J,OAAxB,CAAiCiL,OAAD,IAAa;AAC3CxG,cAAQ,CAACxE,IAAT,CACEmQ,OAAO,CAACI,gBAAR,CAAyBjU,QAAzB,EAAmC0O,OAAO,CAACtG,MAA3C,EAAmDsG,OAAO,CAACwF,OAA3D,CADF;AAGD,KAJD;AAKA,QAAIC,cAAc,GAAG,MAAMvY,OAAO,CAAC4J,GAAR,CAAY0C,QAAZ,CAA3B;AACA,QAAIkM,WAAW,GAAG,MAAMzT,IAAI,CAACyM,gBAAL,CAAsBpN,QAAtB,CAAxB;AACAxC,WAAO,CAACuD,GAAR,CAAYqT,WAAZ;AACA,QAAIC,kBAAkB,GAAG,EAAzB;AACAF,kBAAc,GAAG,GAAGnT,MAAH,CAAU,GAAGmT,cAAb,CAAjB;AACAC,eAAW,CAAC3Q,OAAZ,CAAqBI,IAAD,IAAU;AAC5B,UAAI6K,OAAO,GAAGyF,cAAc,CAACrL,MAAf,CACX0F,CAAD,IAAOA,CAAC,CAAC9P,IAAF,KAAWmF,IAAI,CAACuE,MAAhB,IAA0BoG,CAAC,CAAC8F,MAAF,KAAazQ,IAAI,CAACwE,YADvC,CAAd;AAGAqG,aAAO,GAAGA,OAAO,CAACrS,MAAR,GAAiB,CAAjB,GAAqBqS,OAAO,CAAC,CAAD,CAAP,CAAWtI,GAAX,CAAe3J,QAAf,EAArB,GAAiD,EAA3D;AACA,UAAIiS,OAAJ,EACE2F,kBAAkB,CAAC3Q,IAAnB,CACE/C,IAAI,CAACwF,UAAL,CAAgB,EACd,GAAGtC,IADW;AAEduC,WAAG,EAAEvC,IAAI,CAACuC,GAAL,CAAS3J,QAAT,EAFS;AAGdkM,iBAAS,EAAE+F;AAHG,OAAhB,CADF;AAOH,KAbD;AAcA,QAAI6F,SAAS,GAAG,MAAM3Y,OAAO,CAAC4J,GAAR,CAAY6O,kBAAZ,CAAtB;AACA,WAAOF,cAAP;AACD,GA7BD,CA6BE,OAAOpY,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAjCD;;AAmCA,MAAMkS,gBAAgB,GAAG,MAAOjO,QAAP,IAAoB;AAC3C,MAAI;AACF,WAAO,MAAM6T,OAAO,CAACW,kBAAR,CAA2BxU,QAA3B,CAAb;AACD,GAFD,CAEE,OAAOjE,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQA,MAAMiS,gBAAgB,GAAG,OAAOhO,QAAP,EAAiBoI,MAAjB,KAA4B;AACnD,MAAI;AACF,WAAO,MAAMyL,OAAO,CAACI,gBAAR,CACXjU,QADW,EAEXoI,MAAM,CAACA,MAFI,EAGXA,MAAM,CAAC8L,OAHI,CAAb;AAKD,GAND,CAME,OAAOnY,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAVD;;AAYA,MAAM0Y,yBAAyB,GAAG,OAAOC,UAAP,EAAmBJ,MAAnB,KAA8B;AAC9D,MAAI;AACF,WAAO,MAAMT,OAAO,CAACc,yBAAR,CAAkCD,UAAlC,EAA8CJ,MAA9C,CAAb;AACD,GAFD,CAEE,OAAOvY,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQA,MAAMqS,sBAAsB,GAAG,MAAOpO,QAAP,IAAoB;AACjD,MAAI;AACF,WAAO,MAAM6T,OAAO,CAACe,oBAAR,CAA6B5U,QAA7B,CAAb;AACD,GAFD,CAEE,OAAOjE,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQAiB,MAAM,CAACC,OAAP,GAAiB;AACfiR,kBADe;AAEfD,kBAFe;AAGfD,kBAHe;AAIfyG,2BAJe;AAKfrG;AALe,CAAjB,C;;;;;;;;;;;AC3EA,MAAMzN,IAAI,GAAG7F,mBAAO,CAAC,4CAAD,CAApB;;AACA,MAAM0D,SAAS,GAAG1D,mBAAO,CAAC,oDAAD,CAAP,CAA8B0D,SAAhD;;AACA,MAAM3D,KAAK,GAAGC,mBAAO,CAAC,oBAAD,CAAP,CAAiBkP,OAA/B;;AAEA,MAAM6K,OAAO,GAAG,CACd,gBADc,EAEd,mBAFc,EAGd,uBAHc,EAId,sBAJc,EAKd,qBALc,EAMd,uBANc,EAOd,oBAPc,EAQd,oBARc,EASd,2BATc,EAUd,uBAVc,EAWd,aAXc,EAYd,wBAZc,EAad,mBAbc,EAcd,kBAdc,EAed,6BAfc,EAgBd,wBAhBc,EAiBd,2BAjBc,EAkBd,uBAlBc,EAkBW;AACzB,8BAnBc,CAAhB;AAyBA,MAAMC,UAAU,GAAG,CACjB,8BADiB,EACe;AAChC,wCAFiB,EAEyB;AAC1C,oCAHiB,EAGqB;AACtC,qCAJiB,EAKjB,yBALiB,EAMjB,kCANiB,EAOjB,4CAPiB,CAAnB;AAUA,MAAMC,YAAY,GAAG,CAAC,2BAAD,CAArB;AAEA9X,OAAO,CAAC+X,IAAR,GAAe,MAAMA,IAAN,CAAW;AACxBC,eAAa,CAAC1S,KAAD,EAAQ;AACnB,QAAIsB,IAAI,GAAGlD,IAAX;AAEA,QAAIuU,GAAG,GAAGrR,IAAI,CAAC6H,YAAL,CAAkBnJ,KAAlB,CAAV;AACA,WAAO,IAAI3G,OAAJ,CACL,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACnBkZ,SAAG,CAACzZ,IAAJ,CAAS,UAAUkQ,OAAV,EAAmB;AAC1B,YAAIA,OAAJ,EAAa9P,OAAO,CAAC;AAAE+P,eAAK,EAAE,IAAT;AAAerL,iBAAO,EAAE;AAAxB,SAAD,CAAP,CAAb,KAEE1E,OAAO,CAAC;AACN+P,eAAK,EAAE,KADD;AAENrL,iBAAO,EAAE;AAFH,SAAD,CAAP;AAIH,OAPD;AAQD,KAVI,EAWJxE,GAAD,IAASC,MAAM,CAAC;AAAE4P,WAAK,EAAE,KAAT;AAAgBrL,aAAO,EAAE;AAAzB,KAAD,CAXV,CAAP;AAaD;;AAED4U,mBAAiB,CAAC5S,KAAD,EAAQ;AACvB,QAAIsB,IAAI,GAAGlD,IAAX;AACA,QAAIyU,UAAU,GAAGvR,IAAI,CAACwR,eAAL,CAAqB9S,KAArB,CAAjB;AACA,WAAO,IAAI3G,OAAJ,CACL,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACnBoZ,gBAAU,CAAC3Z,IAAX,CAAiB6Z,OAAD,IAAa;AAC3B,YAAIA,OAAO,CAAC/W,QAAR,KAAqBC,SAAS,CAACS,KAAnC,EACEjD,MAAM,CAAC;AACL4P,eAAK,EAAE,KADF;AAELrL,iBAAO,EACL;AAHG,SAAD,CAAN,CADF,KAMK1E,OAAO,CAAC;AAAE+P,eAAK,EAAE,IAAT;AAAerL,iBAAO,EAAE;AAAxB,SAAD,CAAP;AACN,OARD;AASD,KAXI,EAYJxE,GAAD,IAAS;AACPyB,aAAO,CAACuD,GAAR,CAAYhF,GAAZ;AACAC,YAAM,CAAC;AACL4P,aAAK,EAAE,KADF;AAELrL,eAAO,EAAE;AAFJ,OAAD,CAAN;AAID,KAlBI,CAAP;AAoBD;;AAEDgV,WAAS,CAACC,OAAD,EAAU;AACjB,WAAOX,OAAO,CAACY,OAAR,CAAgBD,OAAhB,MAA6B,CAAC,CAArC;AACD;;AAEDE,cAAY,CAACF,OAAD,EAAU;AACpB,WAAOV,UAAU,CAACW,OAAX,CAAmBD,OAAnB,MAAgC,CAAC,CAAxC;AACD;;AAEDG,gBAAc,CAACH,OAAD,EAAU;AACtB,WAAOT,YAAY,CAACU,OAAb,CAAqBD,OAArB,MAAkC,CAAC,CAAnC,GAAuC,IAAvC,GAA8C,KAArD;AACD;;AAEDI,oBAAkB,CAACJ,OAAD,EAAUjT,KAAV,EAAiB3C,MAAjB,EAAyB;AACzC,QAAI,KAAK2V,SAAL,CAAeC,OAAf,CAAJ,EACE,OAAO,IAAI5Z,OAAJ,CAAaC,OAAD,IACjBA,OAAO,CAAC;AAAE+P,WAAK,EAAE,IAAT;AAAerL,aAAO,EAAE;AAAxB,KAAD,CADF,CAAP,CADF,KAIK,IAAI,KAAKmV,YAAL,CAAkBF,OAAlB,CAAJ,EAAgC;AACnC;AACA,aAAO,IAAI5Z,OAAJ,CAAaC,OAAD,IAAa;AAC9B4D,eAAO,CAACC,GAAR,CAAYmW,iBAAZ,KAAkCjW,MAAlC,GACI/D,OAAO,CAAC;AAAE+P,eAAK,EAAE,IAAT;AAAerL,iBAAO,EAAE;AAAxB,SAAD,CADX,GAEIvE,MAAM,CAAC;AAAE4P,eAAK,EAAE,KAAT;AAAgBrL,iBAAO,EAAE;AAAzB,SAAD,CAFV;AAGD,OAJM,CAAP;AAKD,KAPI,MAOE,IAAI,KAAKoV,cAAL,CAAoBH,OAApB,CAAJ,EAAkC;AACvC,aAAO,IAAI5Z,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,aAAKmZ,iBAAL,CAAuB5S,KAAvB,EACG9G,IADH,CACSC,GAAD,IAAS;AACb,cAAIuZ,aAAa,GAAG,KAAKA,aAAL,CAAmB1S,KAAnB,CAApB;AACA0S,uBAAa,CACVxZ,IADH,CACSC,GAAD,IAASG,OAAO,CAACH,GAAD,CADxB,EAEGI,KAFH,CAEUC,GAAD,IAASC,MAAM,CAACD,GAAD,CAFxB;AAGD,SANH,EAOGD,KAPH,CAOUC,GAAD,IAAS;AACdC,gBAAM,CAACD,GAAD,CAAN;AACD,SATH;AAUD,OAXM,CAAP;AAYD,KAbM,MAaA;AACL,aAAO,KAAKkZ,aAAL,CAAmB1S,KAAnB,CAAP;AACD;AACF;;AArFuB,CAA1B;;AAwFAtF,OAAO,CAACoI,iBAAR,GAA4B,MAAO9C,KAAP,IAAiB;AAC3C,MAAI;AACF,UAAMuT,SAAS,GAAGrW,OAAO,CAACC,GAAR,CAAYqW,gBAA9B;AACA,UAAMC,eAAe,GAAI,0DAAyDF,SAAU,aAAYvT,KAAM,EAA9G;AACA,QAAIpF,QAAQ,GAAG,MAAMtC,KAAK,CAAC8B,IAAN,CACnBqZ,eADmB,EAEnB,EAFmB,EAGnB;AACExa,aAAO,EAAE;AACP,wBAAgB;AADT;AADX,KAHmB,CAArB;AAUA,QAAIya,aAAa,GAAG9Y,QAAQ,CAAC5B,IAA7B;AACA,WAAO0a,aAAa,CAAC3V,OAArB;AACD,GAfD,CAeE,OAAOvE,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAnBD,C;;;;;;;;;;;ACjIA,MAAM4E,IAAI,GAAG7F,mBAAO,CAAC,4CAAD,CAApB;;AACA,MAAM2D,KAAK,GAAG3D,mBAAO,CAAC,gEAAD,CAAP,CAAoC2D,KAAlD;AAEA;;;;;AAGAxB,OAAO,CAAC2J,cAAR,GAAyB,MAAOsP,SAAP,IAAqB;AAC5C,SAAO,IAAIta,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,QAAIoZ,UAAU,GAAGzU,IAAI,CAAC0U,eAAL,CAAqBa,SAArB,CAAjB;AACAd,cAAU,CAAC3Z,IAAX,CAAgB6Z,OAAO,IAAI;AACzB,YAAM;AAAE/W,gBAAF;AAAYmL;AAAZ,UAA0B4L,OAAhC;AAEA,UAAIa,SAAS,GAAG1X,KAAK,CAACqK,MAAN,CAAasN,IAAI,IAAI;AACnC,YAAIC,KAAK,GAAGD,IAAI,CAACtX,cAAL,CAAoBgK,MAApB,CAA2BwN,CAAC,IAAIA,CAAC,CAACC,WAAF,OAAoBhY,QAAQ,CAACgY,WAAT,EAApD,CAAZ;AACA,eAAOF,KAAK,CAACha,MAAN,GAAe,CAAtB;AACD,OAHe,EAGbyJ,GAHa,CAGT0Q,IAAI,KAAK;AAAE9X,YAAI,EAAE8X,IAAI,CAAC9X,IAAb;AAAmBC,YAAI,EAAE6X,IAAI,CAAC7X,IAA9B;AAAoCE,eAAO,EAAE2X,IAAI,CAAC3X,OAAlD;AAA2DD,YAAI,EAAE4X,IAAI,CAAC5X,IAAtE;AAA4EQ,aAAK,EAAEoX,IAAI,CAACpX;AAAxF,OAAL,CAHK,CAAhB;AAMAvD,aAAO,CAACsa,SAAD,CAAP;AACD,KAVD,EAUGM,IAAI,IAAI;AACTza,YAAM,CAAC;AAAE4P,aAAK,EAAE,KAAT;AAAgBrL,eAAO,EAAE;AAAzB,OAAD,CAAN;AACD,KAZD;AAaD,GAfM,CAAP;AAgBD,CAjBD,C;;;;;;;;;;;ACNA,MAAMmW,UAAU,GAAG5b,mBAAO,CAAC,wDAAD,CAA1B;;AAGAmC,OAAO,CAAC8J,SAAR,GAAoB,MAAO/B,UAAP,IAAsB;AACtC,SAAO,IAAIpJ,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACpC,QAAIgJ,UAAU,CAAC3I,MAAX,GAAoB,CAAxB,EAA2B;AACvBsa,aAAO,GAAGD,UAAU,CAAC3P,SAAX,CAAqB/B,UAArB,CAAV;AACA2R,aAAO,CAAClb,IAAR,CAAamb,EAAE,IAAI;AACf/a,eAAO,CAAC+a,EAAD,CAAP;AACH,OAFD,EAEG7a,GAAG,IAAI;AACNC,cAAM,CAAC;AAAE4P,eAAK,EAAE,KAAT;AAAgBrL,iBAAO,EAAE;AAAzB,SAAD,CAAN;AACH,OAJD;AAKH,KAPD,MAQK;AACDvE,YAAM,CAAC;AAAE4P,aAAK,EAAE,KAAT;AAAgBrL,eAAO,EAAE;AAAzB,OAAD,CAAN;AACH;AACJ,GAZM,CAAP;AAaH,CAdD,C;;;;;;;;;;;ACHA,MAAMsW,IAAI,GAAG/b,mBAAO,CAAC,wCAAD,CAAP,CAA2B+b,IAAxC;;AAEA,IAAIC,IAAI,GAAG,IAAID,IAAJ,EAAX;;AAEA,MAAME,kBAAkB,GAAG,CAACpP,UAAD,EAAapH,OAAb,KAAyB;AAClD,MAAIyW,QAAQ,GAAG,EAAf;AACArP,YAAU,CAAClE,OAAX,CAAoBlB,KAAD,IAAW;AAC5B,QAAI,CAACsU,IAAI,CAACI,eAAL,CAAqB1U,KAArB,CAAL,EAAkC;AAChC/E,aAAO,CAACF,KAAR,CAAe,cAAaiF,KAAM,4BAAlC,EADgC,CAEhC;AACD;;AAEDyU,YAAQ,GAAG,CAAC,GAAGA,QAAJ,EAAc,EAAE,GAAGzW,OAAL;AAAc2D,QAAE,EAAE3B;AAAlB,KAAd,CAAX;AACD,GAPD;AAQA,SAAOuU,IAAI,CAACI,sBAAL,CAA4BF,QAA5B,CAAP;AACD,CAXD;;AAaA,MAAMG,oBAAoB,GAAG,MAAOC,MAAP,IAAkB;AAC7C,MAAI;AACF;AACA;AACA;AACA;AACA,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,KAAT,IAAkBF,MAAlB,EAA0B;AACxB,UAAI;AACF,YAAIG,WAAW,GAAG,MAAMT,IAAI,CAACU,0BAAL,CAAgCF,KAAhC,CAAxB;AACA9Z,eAAO,CAACuD,GAAR,CAAYwW,WAAZ;AACAF,eAAO,CAAC3T,IAAR,CAAa,GAAG6T,WAAhB,EAHE,CAIF;AACA;AACA;AACA;AACD,OARD,CAQE,OAAOja,KAAP,EAAc;AACdE,eAAO,CAACF,KAAR,CAAcA,KAAd;AACD;AACF;;AACD,WAAO+Z,OAAP,CAnBE,CAoBF;AACD,GArBD,CAqBE,OAAOtb,GAAP,EAAY;AACZyB,WAAO,CAACuD,GAAR,CAAY,8BAAZ,EAA4ChF,GAA5C;AACA,UAAMA,GAAN;AACD;AACF,CA1BD;;AA4BA,MAAM0b,YAAY,GAAG,MAAOJ,OAAP,IAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAIK,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAIC,MAAT,IAAmBN,OAAnB,EAA4B;AAC1B;AACA;AACA,QAAIM,MAAM,CAACtR,EAAX,EAAe;AACbqR,gBAAU,CAAChU,IAAX,CAAgBiU,MAAM,CAACtR,EAAvB;AACD;AACF;;AAED,MAAIuR,eAAe,GAAGd,IAAI,CAACe,+BAAL,CAAqCH,UAArC,CAAtB,CAzBsC,CA0BtC;AACA;AACA;;AACA,OAAK,IAAIJ,KAAT,IAAkBM,eAAlB,EAAmC;AACjC,QAAI;AACF,UAAIE,QAAQ,GAAG,MAAMhB,IAAI,CAACiB,gCAAL,CAAsCT,KAAtC,CAArB;AACA9Z,aAAO,CAACuD,GAAR,CAAY+W,QAAZ,EAFE,CAIF;AACA;;AACA,WAAK,IAAIE,SAAT,IAAsBF,QAAtB,EAAgC;AAC9B,YAAI;AAAE1a,gBAAF;AAAUmD,iBAAV;AAAmBkM;AAAnB,YAA+BqL,QAAQ,CAACE,SAAD,CAA3C;;AACA,YAAI5a,MAAM,KAAK,IAAf,EAAqB,CACnB;AACD,SAFD,MAEO,IAAIA,MAAM,KAAK,OAAf,EAAwB;AAC7BI,iBAAO,CAACF,KAAR,CACG,8CAA6CiD,OAAQ,EADxD;;AAGA,cAAIkM,OAAO,IAAIA,OAAO,CAACnP,KAAvB,EAA8B;AAC5B;AACA;AACA;AACAE,mBAAO,CAACF,KAAR,CAAe,qBAAoBmP,OAAO,CAACnP,KAAM,EAAjD;AACD;AACF;AACF;AACF,KAtBD,CAsBE,OAAOA,KAAP,EAAc;AACdE,aAAO,CAACF,KAAR,CAAcA,KAAd;AACD;AACF,GAvDqC,CAwDtC;;AACD,CAzDD;;AA2DA,MAAM+J,oBAAoB,GAAG,OAAOM,UAAP,EAAmBpH,OAAnB,KAA+B;AAC1D,MAAI;AACF/C,WAAO,CAACuD,GAAR,CAAY,mBAAZ;AACA,QAAIqW,MAAM,GAAGL,kBAAkB,CAACpP,UAAD,EAAapH,OAAb,CAA/B;AACA/C,WAAO,CAACuD,GAAR,CAAY,QAAZ,EAAsBqW,MAAtB;AAEA5Z,WAAO,CAACuD,GAAR,CAAY,yBAAZ;AACA,QAAIsW,OAAO,GAAG,MAAMF,oBAAoB,CAACC,MAAD,CAAxC;AACA5Z,WAAO,CAACuD,GAAR,CAAY,qBAAZ;AACA,UAAM0W,YAAY,CAACJ,OAAD,CAAlB;AACD,GATD,CASE,OAAO5S,EAAP,EAAW;AACXjH,WAAO,CAACuD,GAAR,CAAY,6BAAZ,EAA2C0D,EAA3C;AACA,UAAMA,EAAN;AACD;AACF,CAdD;;AAgBAzH,MAAM,CAACC,OAAP,GAAiB;AACfoK;AADe,CAAjB,C;;;;;;;;;;;ACxHA,MAAMyM,MAAM,GAAGhZ,mBAAO,CAAC,gDAAD,CAAtB;;AACA,MAAMuE,YAAY,GAAGvE,mBAAO,CAAC,oDAAD,CAAP,CAA8BuE,YAAnD;;AACA,MAAM8P,YAAY,GAAGrU,mBAAO,CAAC,4DAAD,CAA5B;;AACA,MAAM6F,IAAI,GAAG7F,mBAAO,CAAC,4CAAD,CAApB;;AACA,MAAMmd,YAAY,GAAGnd,mBAAO,CAAC,4DAAD,CAA5B;;AACA,MAAMod,YAAY,GAAGpd,mBAAO,CAAC,4DAAD,CAA5B;;AACA,MAAMuR,QAAQ,GAAGvR,mBAAO,CAAC,0BAAD,CAAP,CAAoBwR,KAApB,CAA0BD,QAA3C;;AAEA,MAAM8L,QAAQ,GAAGrd,mBAAO,CAAC,4BAAD,CAAxB;;AAEA,IAAIsd,KAAK,GAAGtd,mBAAO,CAAC,0CAAD,CAAnB;;AACA,MAAM;AAAEud;AAAF,IAAevd,mBAAO,CAAC,0BAAD,CAA5B;;AAEA,MAAM+K,eAAe,GAAIyS,UAAD,IAAgB;AACtC,MAAIlb,MAAM,GAAGiC,YAAY,CAACyJ,MAAb,CAAqByP,EAAD,IAAQA,EAAE,CAACnb,MAAH,KAAckb,UAA1C,CAAb;AACA,SAAOlb,MAAM,CAAC,CAAD,CAAb;AACD,CAHD;;AAKA,MAAMob,UAAU,GAAIjd,IAAD,IAAU;AAC3B,MAAI,CAACA,IAAL,EAAW,OAAO,EAAP;AACX,SAAO4c,QAAQ,CAACM,GAAT,CAAaC,OAAb,CAAqBnd,IAArB,EAA2B6c,KAAK,CAACO,SAAjC,EAA4Clc,QAA5C,EAAP;AACD,CAHD;;AAKA,MAAMmc,UAAU,GAAIrd,IAAD,IAAU;AAC3B,MAAI,CAACA,IAAL,EAAW,OAAO,EAAP;AACX,MAAIsd,KAAK,GAAGV,QAAQ,CAACM,GAAT,CAAaK,OAAb,CAAqBvd,IAArB,EAA2B6c,KAAK,CAACO,SAAjC,CAAZ;AACA,SAAOE,KAAK,CAACpc,QAAN,CAAe0b,QAAQ,CAACY,GAAT,CAAaC,IAA5B,CAAP;AACD,CAJD;;AAMA,MAAMvT,UAAU,GAAIwT,SAAD,IAAe;AAChC,SAAO,IAAIrd,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC8X,UAAM,CAACoF,UAAP,CAAkBD,SAAlB,EAA6Bxd,IAA7B,CAAkC,CAACqS,GAAD,EAAM/R,GAAN,KAAc;AAC9C,UAAI,CAACA,GAAL,EACEF,OAAO,CAAC;AACNyE,eAAO,EAAE,IADH;AAENC,eAAO,EAAE,wCAFH;AAGN8F,UAAE,EAAEyH,GAAG,CAACzH;AAHF,OAAD,CAAP,CADF,KAOErK,MAAM,CAAC;AACLsE,eAAO,EAAE,KADJ;AAELC,eAAO,EACLxE,GAAG,CAACwE,OAAJ,IAAe;AAHZ,OAAD,CAAN;AAKH,KAbD;AAcD,GAfM,CAAP;AAgBD,CAjBD;;AAmBA,MAAMqM,eAAe,GAAG,CAACvG,EAAD,EAAKjJ,MAAL,KAAgB;AACtC,SAAO,IAAIxB,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC8X,UAAM,CAACqF,YAAP,CAAoB9S,EAApB,EAAwBjJ,MAAxB,EAAgC3B,IAAhC,CAAqC,CAACqS,GAAD,EAAM/R,GAAN,KAAc;AACjD,UAAI,CAACA,GAAL,EACEF,OAAO,CAAC;AACNyE,eAAO,EAAE,IADH;AAENC,eAAO,EAAE;AAFH,OAAD,CAAP,CADF,KAMEvE,MAAM,CAAC;AACLsE,eAAO,EAAE,KADJ;AAELC,eAAO,EACLxE,GAAG,CAACwE,OAAJ,IACA;AAJG,OAAD,CAAN;AAMH,KAbD;AAcD,GAfM,CAAP;AAgBD,CAjBD;;AAmBA,MAAM6Y,qBAAqB,GAAG,CAAC1a,IAAD,EAAOsG,UAAP,EAAmB5H,MAAnB,KAA8B;AAC1D,SAAO,IAAIxB,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC8X,UAAM,CAACuF,kBAAP,CAA0B3a,IAA1B,EAAgCsG,UAAhC,EAA4C5H,MAA5C,EAAoD3B,IAApD,CAAyD,CAACqS,GAAD,EAAM/R,GAAN,KAAc;AACrE,UAAI,CAACA,GAAL,EACEF,OAAO,CAAC;AACNyE,eAAO,EAAE,IADH;AAENC,eAAO,EAAE;AAFH,OAAD,CAAP,CADF,KAMEvE,MAAM,CAAC;AACLsE,eAAO,EAAE,KADJ;AAELC,eAAO,EACLxE,GAAG,CAACwE,OAAJ,IACA;AAJG,OAAD,CAAN;AAMH,KAbD;AAcD,GAfM,CAAP;AAgBD,CAjBD;;AAmBA,MAAMwM,oBAAoB,GAAI1L,MAAD,IAAY;AACvC,SAAO,IAAIzF,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC8X,UAAM,CAACwF,iBAAP,CAAyBjY,MAAzB,EAAiC5F,IAAjC,CAAsC,CAACqS,GAAD,EAAM/R,GAAN,KAAc;AAClD,UAAI,CAACA,GAAL,EAAUF,OAAO,CAACiS,GAAD,CAAP,CAAV,KAEE9R,MAAM,CAAC;AACLsE,eAAO,EAAE,KADJ;AAELC,eAAO,EACLxE,GAAG,CAACwE,OAAJ,IACA;AAJG,OAAD,CAAN;AAMH,KATD;AAUD,GAXM,CAAP;AAYD,CAbD;;AAeA,MAAMmM,aAAa,GAAI1M,QAAD,IAAc;AAClC,SAAO,IAAIpE,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC8X,UAAM,CAACyF,SAAP,CAAiBvZ,QAAjB,EACGvE,IADH,CACQ,CAACqS,GAAD,EAAM/R,GAAN,KAAc;AAClB,UAAI,CAACA,GAAL,EAAUF,OAAO,CAACiS,GAAD,CAAP,CAAV,KAEE9R,MAAM,CAAC;AACLsE,eAAO,EAAE,KADJ;AAELC,eAAO,EACLxE,GAAG,CAACwE,OAAJ,IAAe;AAHZ,OAAD,CAAN;AAKH,KATH,EAUGzE,KAVH,CAUUC,GAAD,IAASC,MAAM,CAACD,GAAD,CAVxB;AAWD,GAZM,CAAP;AAaD,CAdD;;AAgBA,MAAMiR,eAAe,GAAG,CAAChN,QAAD,EAAWtB,IAAX,EAAiB0J,MAAjB,EAAyBC,YAAzB,EAAuC9J,QAAvC,KAAoD;AAC1E,SAAO,IAAI3C,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,QAAIwd,KAAK,GACPC,IAAI,CAACC,MAAL,GAAcjd,QAAd,CAAuB,EAAvB,EAA2ByF,SAA3B,CAAqC,CAArC,EAAwC,CAAxC,EAA2CyX,WAA3C,KACAF,IAAI,CAACC,MAAL,GAAcjd,QAAd,CAAuB,EAAvB,EAA2ByF,SAA3B,CAAqC,CAArC,EAAwC,CAAxC,EAA2CyX,WAA3C,EAFF;;AAGAnc,WAAO,CAACuD,GAAR,CAAYyX,UAAU,CAACpQ,MAAD,CAAtB;AACA+G,gBAAY,CAACyK,gBAAb,CAA8B;AAC5BvZ,UAAI,EAAEmZ,KADsB;AAE5BxZ,cAF4B;AAG5BtB,UAH4B;AAI5B0J,YAAM,EAAEoQ,UAAU,CAACpQ,MAAD,CAJU;AAK5BC,kBAAY,EAAEmQ,UAAU,CAACnQ,YAAD,CALI;AAM5B9J;AAN4B,KAA9B,EAOG9C,IAPH,CAOQ,CAACoe,MAAD,EAAS9d,GAAT,KAAiB;AACvB,UAAI,CAACA,GAAL,EAAU;AACR+X,cAAM,CAACgG,eAAP,CAAuB9Z,QAAvB,EAAiC6Z,MAAM,CAACzT,GAAP,CAAW3J,QAAX,EAAjC,EAAwDhB,IAAxD,CACE,CAACqS,GAAD,EAAM/R,GAAN,KAAc;AACZ,cAAI,CAACA,GAAL,EAAUF,OAAO,CAACge,MAAD,CAAP,CAAV,KAEE7d,MAAM,CAAC;AACLsE,mBAAO,EAAE,KADJ;AAELC,mBAAO,EACLxE,GAAG,CAACwE,OAAJ,IACA;AAJG,WAAD,CAAN;AAMH,SAVH;AAYD,OAbD,MAcEvE,MAAM,CAAC;AACLsE,eAAO,EAAE,KADJ;AAELC,eAAO,EACLxE,GAAG,CAACwE,OAAJ,IACA;AAJG,OAAD,CAAN;AAMH,KA5BD;AA6BD,GAlCM,CAAP;AAmCD,CApCD;;AAsCA,MAAM0M,eAAe,GAAI5M,IAAD,IAAU;AAChC,SAAO,IAAIzE,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtCmT,gBAAY,CAACiB,eAAb,CAA6B/P,IAA7B,EACG5E,IADH,CACQ,CAACse,SAAD,EAAYhe,GAAZ,KAAoB;AACxB,UAAI,CAACA,GAAL,EAAU;AACR+X,cAAM,CAACkG,kBAAP,CAA0BD,SAAS,CAAC/Z,QAAV,CAAmBvD,QAAnB,EAA1B,EAAyDhB,IAAzD,CACE,CAACqI,MAAD,EAAS/H,GAAT,KAAiB;AACf,cAAI,CAACA,GAAL,EAAU;AACR,kBAAM;AAAEqM,oBAAF;AAAUC,0BAAV;AAAwB,iBAAGG;AAA3B,gBAAqCuR,SAAS,CAAC1O,IAArD;AACA,kBAAM1P,MAAM,GAAG;AACbmI,oBAAM,EAAE,EACN,GAAGA;AADG,eADK;AAIboJ,oBAAM,EAAE;AACN9E,sBAAM,EAAEwQ,UAAU,CAACxQ,MAAD,CADZ;AAENC,4BAAY,EAAEuQ,UAAU,CAACvQ,YAAD,CAFlB;AAGN,mBAAGG;AAHG;AAJK,aAAf;AAUA3M,mBAAO,CAACF,MAAD,CAAP;AACD,WAbD,MAaO;AACLK,kBAAM,CAAC;AACLsE,qBAAO,EAAE,KADJ;AAELC,qBAAO,EACLxE,GAAG,CAACwE,OAAJ,IACA;AAJG,aAAD,CAAN;AAMD;AACF,SAvBH;AAyBD,OA1BD,MA2BEvE,MAAM,CAAC;AACLsE,eAAO,EAAE,KADJ;AAELC,eAAO,EACLxE,GAAG,CAACwE,OAAJ,IACA;AAJG,OAAD,CAAN;AAMH,KAnCH,EAoCGzE,KApCH,CAoCUC,GAAD,IAAS;AACdC,YAAM,CAAC;AACLie,cAAM,EAAE,KADH;AAEL1Z,eAAO,EACLxE,GAAG,CAACwE,OAAJ,IACA;AAJG,OAAD,CAAN;AAMD,KA3CH;AA4CD,GA7CM,CAAP;AA8CD,CA/CD;;AAiDA,MAAMsN,gBAAgB,GAAG,OAAO7N,QAAP,EAAiBlC,MAAjB,KAA4B;AACnD,MAAI;AACF,QAAIoc,UAAU,GAAG,MAAMpG,MAAM,CAACyF,SAAP,CAAiBvZ,QAAjB,CAAvB;;AACA,QAAI,CAACqM,QAAQ,CAACV,OAAT,CAAiBuO,UAAU,CAACpc,MAA5B,CAAL,EAA0C;AACxC,UAAIqc,UAAU,GAAG,MAAMlC,YAAY,CAACmC,UAAb,CAAwBtc,MAAxB,CAAvB;AACA,YAAMgW,MAAM,CAACuG,gBAAP,CAAwBra,QAAxB,EAAkCma,UAAU,CAAC/T,GAA7C,CAAN;AACA,aAAO;AACL9F,eAAO,EAAE,IADJ;AAELC,eAAO,EAAE,0CAFJ;AAGL8F,UAAE,EAAE8T,UAAU,CAAC9T;AAHV,OAAP;AAKD,KARD,MAQO;AACL,UAAIiU,YAAY,GAAG,MAAMrC,YAAY,CAACsC,YAAb,CACvBL,UAAU,CAACpc,MAAX,CAAkBrB,QAAlB,EADuB,EAEvBqB,MAFuB,CAAzB;AAIA,aAAO;AACLwC,eAAO,EAAE,IADJ;AAELC,eAAO,EAAE;AAFJ,OAAP;AAID;AACF,GApBD,CAoBE,OAAOxE,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAxBD;;AA0BA,MAAMgS,eAAe,GAAG,MAAO/N,QAAP,IAAoB;AAC1C,MAAI;AACF,WAAO,MAAM8T,MAAM,CAAC0G,eAAP,CAAuBxa,QAAvB,CAAb;AACD,GAFD,CAEE,OAAOjE,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQA,MAAMiS,gBAAgB,GAAG,OAAOhO,QAAP,EAAiBoI,MAAjB,KAA4B;AACnD,MAAI;AACF,QAAI8R,UAAU,GAAG,MAAMpG,MAAM,CAACE,gBAAP,CAAwBhU,QAAxB,CAAvB;AACA,QAAIya,cAAc,GAAGP,UAAU,CAAC7M,OAAX,GACjB6M,UAAU,CAAC7M,OAAX,CAAmBvE,MAAnB,CACGyP,EAAD,IAAQA,EAAE,CAACnQ,MAAH,CAAUmO,WAAV,OAA4BnO,MAAM,CAACA,MAAP,CAAcmO,WAAd,EADtC,CADiB,GAIjB,EAJJ;;AAKA,QAAIkE,cAAc,CAACpe,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,UAAIqe,UAAU,GAAG,MAAMxC,YAAY,CAACyC,UAAb,CAAwBvS,MAAxB,CAAvB;AACA,YAAM0L,MAAM,CAACG,gBAAP,CAAwBjU,QAAxB,EAAkC0a,UAAU,CAACtU,GAA7C,CAAN;AACA,aAAO;AACL9F,eAAO,EAAE,IADJ;AAELC,eAAO,EAAE,kCAFJ;AAGL8F,UAAE,EAAEqU,UAAU,CAACrU;AAHV,OAAP;AAKD,KARD,MAQO;AACL,UAAIuU,YAAY,GAAG,MAAM1C,YAAY,CAAC2C,YAAb,CACvBJ,cAAc,CAAC,CAAD,CAAd,CAAkBrU,GADK,EAEvBgC,MAFuB,CAAzB;AAIA,aAAO;AAAE9H,eAAO,EAAE,IAAX;AAAiBC,eAAO,EAAE;AAA1B,OAAP;AACD;AACF,GAtBD,CAsBE,OAAOxE,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CA1BD;;AA4BA,MAAMkS,gBAAgB,GAAG,MAAOjO,QAAP,IAAoB;AAC3C,MAAI;AACF,WAAO,MAAM8T,MAAM,CAACE,gBAAP,CAAwBhU,QAAxB,CAAb;AACD,GAFD,CAEE,OAAOjE,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQA,MAAMqR,gBAAgB,GAAG,MAAOpN,QAAP,IAAoB;AAC3C,MAAI;AACF,WAAO,MAAMW,IAAI,CAACyM,gBAAL,CAAsBpN,QAAtB,CAAb;AACD,GAFD,CAEE,OAAOjE,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQAiB,MAAM,CAACC,OAAP,GAAiB;AACfwI,YADe;AAEfmH,iBAFe;AAGfwM,uBAHe;AAIfrM,sBAJe;AAKfL,eALe;AAMf7G,iBANe;AAOfmH,iBAPe;AAQfC,iBARe;AASfY,kBATe;AAUfE,iBAVe;AAWfC,kBAXe;AAYfC,kBAZe;AAafb;AAbe,CAAjB,C;;;;;;;;;;;AC1RA,MAAMzM,IAAI,GAAG7F,mBAAO,CAAC,4CAAD,CAApB;;AACA,MAAMM,OAAO,GAAGN,mBAAO,CAAC,wBAAD,CAAvB;;AACA,MAAMggB,YAAY,GAAGhgB,mBAAO,CAAC,4DAAD,CAA5B;;AACA,MAAM0D,SAAS,GAAG1D,mBAAO,CAAC,oDAAD,CAAP,CAA8B0D,SAAhD;;AACA,MAAMuc,cAAc,GAAGjgB,mBAAO,CAAC,8DAAD,CAA9B;;AAEA,MAAMwU,QAAQ,GAAI0L,OAAD,IAAa;AAC5B,SAAO,IAAIpf,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC2E,QAAI,CAAC0J,QAAL,CAAc2Q,OAAO,CAACtR,SAAtB,EAAiCjO,IAAjC,CACE,MAAO6O,KAAP,IAAiB;AACf,UAAIA,KAAJ,EAAW;AACTtO,cAAM,CAAC;AACLsE,iBAAO,EAAE,KADJ;AAELC,iBAAO,EAAE;AAFJ,SAAD,CAAN;AAID,OALD,MAKO;AACL,YAAIoI,SAAS,GAAG,CACd,MAAMoS,cAAc,CAACtG,yBAAf,CACJuG,OAAO,CAAC5S,MADJ,EAEJ4S,OAAO,CAAC3S,YAFJ,CADQ,EAKdjC,GALc,CAKV3J,QALU,EAAhB,CADK,CAOL;;;AACAkE,YAAI,CAAC2O,QAAL,CACE0L,OAAO,CAACzc,QAAR,GACI,EAAE,GAAGyc,OAAL;AAAcrS;AAAd,SADJ,GAEI,EAAE,GAAGqS,OAAL;AAAczc,kBAAQ,EAAEC,SAAS,CAACU,KAAlC;AAAyCyJ;AAAzC,SAHN,EAIElN,IAJF,CAKE,CAACqP,GAAD,EAAM/O,GAAN,KAAc;AACZ;AACA,cAAI,CAACA,GAAL,EACEF,OAAO,CAAC;AACNyE,mBAAO,EAAE,IADH;AAENC,mBAAO,EAAE,oCAFH;AAGNwK,oBAAQ,EAAE,EAAE,GAAGD;AAAL;AAHJ,WAAD,CAAP,CADF,KAOE9O,MAAM,CAAC;AACLsE,mBAAO,EAAE,KADJ;AAELC,mBAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAFnB,WAAD,CAAN;AAIH,SAlBH,EAmBGxE,GAAD,IAAS;AACPC,gBAAM,CAAC;AAAEsE,mBAAO,EAAE,KAAX;AAAkBC,mBAAO,EAAExE,GAAG,CAACwE;AAA/B,WAAD,CAAN;AACD,SArBH;AAuBD;AACF,KAvCH,EAwCGxE,GAAD,IAAS;AACPC,YAAM,CAAC;AACLsE,eAAO,EAAE,KADJ;AAELC,eAAO,EACLxE,GAAG,CAACwE,OAAJ,IAAe;AAHZ,OAAD,CAAN;AAKD,KA9CH;AAgDD,GAjDM,CAAP;AAkDD,CAnDD;;AAqDA,MAAM4F,UAAU,GAAG,MAAO6U,OAAP,IAAmB;AACpC,SAAO,IAAIpf,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC2E,QAAI,CAACwF,UAAL,CAAgB6U,OAAhB,EAAyBvf,IAAzB,CACE,CAACqP,GAAD,EAAM/O,GAAN,KAAc;AACZ,UAAI,CAACA,GAAL,EACEF,OAAO,CAAC;AACNyE,eAAO,EAAE,IADH;AAENC,eAAO,EAAE;AAFH,OAAD,CAAP,CADF,KAMEvE,MAAM,CAAC;AACLsE,eAAO,EAAE,KADJ;AAELC,eAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAFnB,OAAD,CAAN;AAIH,KAZH,EAaGxE,GAAD,IAAS;AACPC,YAAM,CAAC;AAAEsE,eAAO,EAAE,KAAX;AAAkBC,eAAO,EAAExE,GAAG,CAACwE;AAA/B,OAAD,CAAN;AACD,KAfH;AAiBD,GAlBM,CAAP;AAmBD,CApBD;;AAsBA,MAAMa,iBAAiB,GAAG,OAAOC,MAAP,EAAeoO,QAAf,KAA4B;AACpD,MAAI;AACF,WAAO,MAAM9O,IAAI,CAACS,iBAAL,CAAuBC,MAAvB,EAA+BoO,QAA/B,CAAb;AACD,GAFD,CAEE,OAAO1T,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQA,MAAMsJ,iBAAiB,GAAG,MAAO9C,KAAP,IAAiB;AACzC,QAAMuT,SAAS,GAAGrW,OAAO,CAACC,GAAR,CAAYqW,gBAA9B;AACA,QAAMC,eAAe,GAAI,0DAAyDF,SAAU,aAAYvT,KAAM,EAA9G;AAEA,SAAO,IAAI3G,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtCZ,WAAO,CAACuB,IAAR,CAAaqZ,eAAb,EAA8B,CAAC1Y,KAAD,EAAQ2d,IAAR,EAAcna,IAAd,KAAuB;AACnD,UAAIxD,KAAJ,EACEtB,MAAM,CAAC;AACLsE,eAAO,EAAE,KADJ;AAELC,eAAO,EACL;AAHG,OAAD,CAAN;AAKF,UAAInD,MAAM,GAAGkE,IAAI,CAACC,KAAL,CAAWT,IAAX,CAAb;AACA,UAAI,CAAC1D,MAAM,CAACkD,OAAZ,EACEtE,MAAM,CAAC;AAAEsE,eAAO,EAAE,KAAX;AAAkBC,eAAO,EAAE;AAA3B,OAAD,CAAN,CADF,KAEK,IAAInD,MAAM,CAAC8d,KAAP,IAAgB,GAApB,EACHlf,MAAM,CAAC;AACLsE,eAAO,EAAE,KADJ;AAELC,eAAO,EAAE;AAFJ,OAAD,CAAN,CADG,KAKA1E,OAAO,CAAC;AAAEyE,eAAO,EAAE,IAAX;AAAiBC,eAAO,EAAE;AAA1B,OAAD,CAAP;AACN,KAhBD;AAiBD,GAlBM,CAAP;AAmBD,CAvBD;;AAyBA,MAAMoP,oBAAoB,GAAG,MAAOqL,OAAP,IAAmB;AAC9C,QAAM;AAAEvR;AAAF,MAAeuR,OAArB;AACA,SAAO,IAAIpf,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC2E,QAAI,CAACwa,eAAL,CAAqB1R,QAArB,EAA+BhO,IAA/B,CACE,MAAO2f,UAAP,IAAsB;AACpB,UAAI;AACF,YAAIC,iBAAiB,GAAGD,UAAU,CAACE,IAAnC;AACAN,eAAO,CAACvR,QAAR,GAAmB4R,iBAAnB;;AAEA,YAAI1S,SAAS,GAAG,CACd,MAAMoS,cAAc,CAACtG,yBAAf,CACJuG,OAAO,CAAC5S,MADJ,EAEJ4S,OAAO,CAAC3S,YAFJ,CADQ,EAKdjC,GALc,CAKV3J,QALU,EAAhB;;AAMA6S,gBAAQ,CAAC,EAAE,GAAG0L,OAAL;AAAcrS;AAAd,SAAD,CAAR,CAAoClN,IAApC,CACGE,MAAD,IAAY;AACVE,iBAAO,CAACF,MAAD,CAAP;AACD,SAHH,EAIGI,GAAD,IAAS;AACPC,gBAAM,CAACD,GAAD,CAAN;AACD,SANH;AAQD,OAlBD,CAkBE,OAAOA,GAAP,EAAY;AACZC,cAAM,CAAC;AACLsE,iBAAO,EAAE,KADJ;AAELC,iBAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAFnB,SAAD,CAAN;AAID;AACF,KA1BH,EA2BGxE,GAAD,IAAS;AACPC,YAAM,CAAC;AAAEsE,eAAO,EAAE,KAAX;AAAkBC,eAAO,EAAExE,GAAG,CAACwE,OAAJ,IAAe;AAA1C,OAAD,CAAN;AACD,KA7BH;AA+BD,GAhCM,CAAP;AAiCD,CAnCD;;AAqCA,MAAMkQ,aAAa,GAAG,MAAOlS,QAAP,IAAoB;AACxC,MAAI;AACF,WAAO,MAAMoC,IAAI,CAAC4a,IAAL,CAAU;AACrBhd,cAAQ,EAAEA;AADW,KAAV,CAAb;AAGD,GAJD,CAIE,OAAOkG,EAAP,EAAW;AACX,WAAOA,EAAP;AACD;AACF,CARD;;AAUA,MAAMkM,cAAc,GAAG,MAAOpO,KAAP,IAAiB;AACtC,MAAI;AACF,QAAI+S,OAAO,GAAG,MAAM3U,IAAI,CAAC0U,eAAL,CAAqB9S,KAArB,CAApB;AACA,WAAO,MAAM5B,IAAI,CAAC6a,QAAL,CAAclG,OAAO,CAACjU,MAAtB,CAAb;AACD,GAHD,CAGE,OAAOoD,EAAP,EAAW;AACX,WAAOA,EAAP;AACD;AACF,CAPD;;AASA,MAAMmM,WAAW,GAAG,MAAOvK,EAAP,IAAc;AAChC,MAAI;AACF,WAAO,MAAM1F,IAAI,CAACiQ,WAAL,CAAiBvK,EAAjB,CAAb;AACD,GAFD,CAEE,OAAO5B,EAAP,EAAW;AACX,UAAMA,EAAN;AACD;AACF,CAND;;AAQA,MAAMsM,gBAAgB,GAAG,MAAO1P,MAAP,IAAkB;AACzC,MAAI;AACF,QAAIiU,OAAO,GAAG,MAAM3U,IAAI,CAACkQ,WAAL,CAAiBxP,MAAjB,CAApB;AACA,WAAOiU,OAAP;AACD,GAHD,CAGE,OAAO7Q,EAAP,EAAW;AACX,UAAMA,EAAN;AACD;AACF,CAPD;;AASA,MAAMyM,iBAAiB,GAAG,OAAO7P,MAAP,EAAe4P,IAAf,KAAwB;AAChD,MAAI;AACF,QAAIqE,OAAO,GAAG,MAAM3U,IAAI,CAACqQ,WAAL,CAAiB3P,MAAjB,EAAyB4P,IAAzB,CAApB;AACA,WAAOqE,OAAP;AACD,GAHD,CAGE,OAAO7Q,EAAP,EAAW;AACX,UAAMA,EAAN;AACD;AACF,CAPD;;AASA,MAAM2M,mBAAmB,GAAG,OAAO/P,MAAP,EAAe4P,IAAf,KAAwB;AAClD,MAAI;AACF,QAAIqE,OAAO,GAAG,MAAM3U,IAAI,CAACwQ,cAAL,CAAoB9P,MAApB,EAA4B4P,IAA5B,CAApB;AACA,WAAOqE,OAAP;AACD,GAHD,CAGE,OAAO7Q,EAAP,EAAW;AACX,UAAMA,EAAN;AACD;AACF,CAPD;;AASA,MAAM4M,gBAAgB,GAAG,OAAOhQ,MAAP,EAAeiQ,SAAf,KAA6B;AACpD,MAAI;AACF,QAAIgE,OAAO,GAAG,MAAM3U,IAAI,CAAC0Q,gBAAL,CAAsBhQ,MAAtB,EAA8BiQ,SAA9B,CAApB;AACA,WAAOgE,OAAP;AACD,GAHD,CAGE,OAAO7Q,EAAP,EAAW;AACX,UAAMA,EAAN;AACD;AACF,CAPD;;AASA,MAAM2I,gBAAgB,GAAG,MAAOpN,QAAP,IAAoB;AAC3C,MAAI;AACF,QAAIiI,KAAK,GAAG,MAAMtH,IAAI,CAACyM,gBAAL,CAAsBpN,QAAtB,CAAlB;AACA,WAAOiI,KAAP;AACD,GAHD,CAGE,OAAOlM,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAPD;;AASA,MAAM2R,sBAAsB,GAAG,OAAO1N,QAAP,EAAiBoI,MAAjB,KAA4B;AACzD,MAAI;AACF,QAAIH,KAAK,GAAG,MAAMtH,IAAI,CAAC+M,sBAAL,CAA4B1N,QAA5B,EAAsCoI,MAAtC,CAAlB;AACA,WAAOH,KAAP;AACD,GAHD,CAGE,OAAOlM,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAPD;;AASA,MAAMwV,iBAAiB,GAAG,OAAOvR,QAAP,EAAiBoI,MAAjB,EAAyBC,YAAzB,KAA0C;AAClE,MAAI;AACF,QAAIM,SAAS,GAAG,CACd,MAAMoS,cAAc,CAACtG,yBAAf,CAAyCrM,MAAzC,EAAiDC,YAAjD,CADQ,EAEdjC,GAFc,CAEV3J,QAFU,EAAhB;;AAGA,QAAIwL,KAAK,GAAG,MAAMtH,IAAI,CAAC4Q,iBAAL,CAAuBvR,QAAvB,EAAiC2I,SAAjC,CAAlB;AACA,WAAOV,KAAP;AACD,GAND,CAME,OAAOlM,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAVD;;AAYA,MAAMoL,mBAAmB,GAAG,OAAOnH,QAAP,EAAiB2I,SAAjB,KAA+B;AACzD,MAAI;AACF,WAAO,MAAMhI,IAAI,CAAC4Q,iBAAL,CAAuBvR,QAAvB,EAAiC2I,SAAjC,CAAb;AACD,GAFD,CAEE,OAAO5M,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQA,MAAMmL,aAAa,GAAG,MAAOlH,QAAP,IAAoB;AACxC,MAAI;AACF,QAAIiJ,UAAU,GAAG,MAAMtI,IAAI,CAACuG,aAAL,CAAmBlH,QAAnB,CAAvB;AACA,WAAOiJ,UAAP;AACD,GAHD,CAGE,OAAOlN,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAPD;;AASA,MAAM6V,cAAc,GAAG,OAAO/N,IAAP,EAAa4F,QAAb,KAA0B;AAC/C,MAAI;AACF,QAAIgS,SAAS,GAAG,MAAM9a,IAAI,CAACiR,cAAL,CAAoB/N,IAApB,EAA0B4F,QAA1B,CAAtB;AACA,WAAOgS,SAAP;AACD,GAHD,CAGE,OAAO1f,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAPD;;AASA,MAAMiW,cAAc,GAAG,OAAOnO,IAAP,EAAa4F,QAAb,EAAuB/C,YAAvB,KAAwC;AAC7D,MAAI;AACF,QAAIgV,UAAU,GAAG,MAAM/a,IAAI,CAACqR,cAAL,CAAoBnO,IAApB,EAA0B4F,QAA1B,EAAoC/C,YAApC,CAAvB;AACA,WAAOgV,UAAP;AACD,GAHD,CAGE,OAAO3f,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAPD;;AASA,MAAMyV,cAAc,GAAG,MAAOnQ,MAAP,IAAkB;AACvC,MAAI;AACF,QAAIiU,OAAO,GAAG,MAAM3U,IAAI,CAAC6Q,cAAL,CAAoBnQ,MAApB,CAApB;AACA,WAAOiU,OAAP;AACD,GAHD,CAGE,OAAO7Q,EAAP,EAAW;AACX,UAAMA,EAAN;AACD;AACF,CAPD;;AASA,MAAMiN,kBAAkB,GAAG,MAAOrQ,MAAP,IAAkB;AAC3C,MAAI;AACF,QAAIwC,IAAI,GAAG,MAAMlD,IAAI,CAACsG,eAAL,CAAqB5F,MAArB,CAAjB;AACA,QAAIsa,KAAK,GAAG,MAAMb,YAAY,CAACc,eAAb,EAAlB;AACA,QAAIC,SAAS,GAAGhY,IAAI,CAACiY,WAAL,IAAoB,EAApC,CAHE,CAIF;;AACA,QAAIC,WAAW,GAAGJ,KAAK,CACpB7V,GADe,CACV8B,CAAD,IAAOoU,UAAU,CAACpU,CAAD,CADN,EAEfqU,MAFe,CAER,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,GAAGC,CAAJ,GAAQD,CAAR,GAAYC,CAFf,CAAlB;AAGA,WAAO;AACLC,YAAM,EAAEP,SAAS,CAACpG,OAAV,CAAkBsG,WAAlB,MAAmC,CAAC,CADvC;AAELxJ,kBAAY,EAAEwJ;AAFT,KAAP;AAID,GAZD,CAYE,OAAOtX,EAAP,EAAW;AACX,UAAMA,EAAN;AACD;AACF,CAhBD;;AAkBA,MAAM6N,aAAa,GAAG,OAAOjR,MAAP,EAAekR,YAAf,KAAgC;AACpD,MAAI;AACF,QAAI8J,WAAW,GAAG,MAAM1b,IAAI,CAAC2b,eAAL,CAAqBjb,MAArB,EAA6BkR,YAA7B,CAAxB;AACA,WAAO8J,WAAP;AACD,GAHD,CAGE,OAAO5X,EAAP,EAAW;AACX,UAAMA,EAAN;AACD;AACF,CAPD;;AASA,MAAMqL,kBAAkB,GAAG,MAAO/K,KAAP,IAAiB;AAC1C,MAAI;AACF,QAAI2W,UAAU,GAAG,MAAM/a,IAAI,CAACmP,kBAAL,CAAwB/K,KAAxB,CAAvB;AAEA,WAAO2W,UAAP;AACD,GAJD,CAIE,OAAOjX,EAAP,EAAW;AACX,UAAMA,EAAN;AACD;AACF,CARD;;AAUA,MAAM0N,qBAAqB,GAAG,OAAO9Q,MAAP,EAAe+Q,eAAf,EAAgCC,WAAhC,KAAgD;AAC5E,MAAI;AACF,WAAO,MAAM1R,IAAI,CAACwR,qBAAL,CACX9Q,MADW,EAEX+Q,eAFW,EAGXC,WAHW,CAAb;AAKD,GAND,CAME,OAAO5N,EAAP,EAAW;AACX,UAAMA,EAAN;AACD;AACF,CAVD;;AAYA,MAAMgO,cAAc,GAAG,OAAOpR,MAAP,EAAe9C,QAAf,KAA4B;AACjD,MAAI;AACF,QAAI,CAAC,UAAD,EAAa,OAAb,EAAsB,aAAtB,EAAqCkX,OAArC,CAA6ClX,QAA7C,MAA2D,CAAC,CAAhE,EACE,MAAO,iBAAgBA,QAAS,gBAAhC;AACF,WAAO,MAAMoC,IAAI,CAAC8R,cAAL,CAAoBpR,MAApB,EAA4B9C,QAA5B,CAAb;AACD,GAJD,CAIE,OAAOkG,EAAP,EAAW;AACX,UAAMA,EAAN;AACD;AACF,CARD;;AAUA,MAAMiO,iBAAiB,GAAG,OAAOrR,MAAP,EAAesR,OAAf,KAA2B;AACnD,MAAI;AACF,UAAMhS,IAAI,CAAC+R,iBAAL,CAAuBrR,MAAvB,EAA+BsR,OAA/B,CAAN;AACA,WAAO;AAAEtR,YAAF;AAAUsE,YAAM,EAAEgN;AAAlB,KAAP;AACD,GAHD,CAGE,OAAOlO,EAAP,EAAW;AACX,UAAMA,EAAN;AACD;AACF,CAPD;;AASA,MAAMqK,aAAa,GAAG,OAAOzN,MAAP,EAAeuN,OAAf,KAA2B;AAC/C,MAAI;AACF,WAAO,MAAMjO,IAAI,CAACmO,aAAL,CAAmBzN,MAAnB,EAA2BuN,OAA3B,CAAb;AACD,GAFD,CAEE,OAAOnK,EAAP,EAAW;AACX,UAAMA,EAAN;AACD;AACF,CAND;;AAQA,MAAMwC,eAAe,GAAG,MAAO5F,MAAP,IAAkB;AACxC,MAAI;AACF,WAAO,MAAMV,IAAI,CAACsG,eAAL,CAAqB5F,MAArB,CAAb;AACD,GAFD,CAEE,OAAOtF,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQA,MAAM6W,kBAAkB,GAAG,MAAOvR,MAAP,IAAkB;AAC3C,MAAI;AACF,WAAO,MAAMV,IAAI,CAACiS,kBAAL,CAAwBvR,MAAxB,CAAb;AACD,GAFD,CAEE,OAAOtF,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQA,MAAM+W,WAAW,GAAG,OAAOzR,MAAP,EAAe0R,IAAf,KAAwB;AAC1C,MAAI;AACF,WAAO,MAAMpS,IAAI,CAACmS,WAAL,CAAiBzR,MAAjB,EAAyB0R,IAAzB,CAAb;AACD,GAFD,CAEE,OAAOhX,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQA,MAAMiX,cAAc,GAAG,OAAO3R,MAAP,EAAe0R,IAAf,KAAwB;AAC7C,MAAI;AACF,WAAO,MAAMpS,IAAI,CAACqS,cAAL,CAAoB3R,MAApB,EAA4B0R,IAA5B,CAAb;AACD,GAFD,CAEE,OAAOhX,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAND;;AAQAiB,MAAM,CAACC,OAAP,GAAiB;AACfqS,UADe;AAEfjK,mBAFe;AAGfsK,sBAHe;AAIfc,eAJe;AAKfE,gBALe;AAMfxK,YANe;AAOf4K,kBAPe;AAQfG,mBARe;AASfE,qBATe;AAUfR,aAVe;AAWfS,kBAXe;AAYfjE,kBAZe;AAafM,wBAbe;AAcf6D,mBAde;AAefpK,qBAfe;AAgBf/F,mBAhBe;AAiBfoQ,gBAjBe;AAkBfE,oBAlBe;AAmBfY,eAnBe;AAoBfxC,oBApBe;AAqBf8B,gBArBe;AAsBfI,gBAtBe;AAuBfS,gBAvBe;AAwBfC,mBAxBe;AAyBf5D,eAzBe;AA0Bf5H,eA1Be;AA2BfD,iBA3Be;AA4Bf2L,oBA5Be;AA6BfT,uBA7Be;AA8BfW,aA9Be;AA+BfE;AA/Be,CAAjB,C;;;;;;;;;;;AC5YA,MAAMrS,IAAI,GAAG7F,mBAAO,CAAC,4CAAD,CAApB;;AACA,MAAMyhB,WAAW,GAAGzhB,mBAAO,CAAC,gEAAD,CAAP,CAAoC2D,KAAxD;;AAIA,MAAM+d,mBAAmB,GAAG,CAAC7d,IAAD,EAAO2W,OAAP,KAAmB;AAC3C,MAAI1J,KAAK,GAAI;AAAEA,SAAK,EAAE,KAAT;AAAgBrL,WAAO,EAAE;AAAzB,GAAb;AACA,MAAG,CAAC+U,OAAD,IAAY,CAACA,OAAO,CAAC/W,QAAxB,EACI,OAAOqN,KAAP;AAEJ,QAAM;AAAErN;AAAF,MAAe+W,OAArB;AACA,MAAImH,SAAS,GAAGF,WAAW,CAACzT,MAAZ,CAAmB4T,CAAC,IAAI;AACpC,QAAIrG,KAAK,GAAGqG,CAAC,CAAC5d,cAAF,CAAiBgK,MAAjB,CAAwBwN,CAAC,IAAIA,CAAC,CAACC,WAAF,OAAoBhY,QAAQ,CAACgY,WAAT,EAAjD,CAAZ;AACA,WAAOF,KAAK,CAACha,MAAN,GAAe,CAAf,IAAoBqgB,CAAC,CAAC/d,IAAF,CAAO4X,WAAP,OAAyB5X,IAAI,CAACge,iBAAL,EAApD;AAEH,GAJe,CAAhB;AAMA,MAAIF,SAAS,CAACpgB,MAAV,GAAmB,CAAvB,EACIuP,KAAK,GAAG;AAAEA,SAAK,EAAE,IAAT;AAAerL,WAAO,EAAE;AAAxB,GAAR;AACJ,SAAOqL,KAAP;AACH,CAfD;;AAkBA3O,OAAO,CAAC6O,eAAR,GAA0B,CAACnN,IAAD,EAAOie,GAAP,KAAe;AACrC,SAAO,IAAIhhB,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACpC,QAAI6H,IAAI,GAAGlD,IAAX;AACA,QAAIgL,OAAO,GAAG9H,IAAI,CAAC6H,YAAL,CAAkBkR,GAAlB,CAAd;AACAjR,WAAO,CAAClQ,IAAR,CAAaC,GAAG,IAAI;AAChB,UAAI0Z,UAAU,GAAGvR,IAAI,CAACwR,eAAL,CAAqBuH,GAArB,CAAjB;AACAxH,gBAAU,CAAC3Z,IAAX,CAAgB6Z,OAAO,IAAI;AACvB,YAAI1J,KAAK,GAAG4Q,mBAAmB,CAAC7d,IAAD,EAAO2W,OAAP,CAA/B;AACA,YAAI1J,KAAK,CAACA,KAAV,EACI/P,OAAO,CAAC+P,KAAD,CAAP,CADJ,KAGI5P,MAAM,CAAC4P,KAAD,CAAN;AACP,OAND,EAMG6K,IAAI,IAAI;AACPza,cAAM,CAAC;AAAE4P,eAAK,EAAE,KAAT;AAAgBrL,iBAAO,EAAE;AAAzB,SAAD,CAAN;AACH,OARD;AASH,KAXD,EAWGxE,GAAG,IAAI;AACNC,YAAM,CAAC;AAAE4P,aAAK,EAAE,KAAT;AAAgBrL,eAAO,EAAE;AAAzB,OAAD,CAAN;AACH,KAbD;AAcH,GAjBM,CAAP;AAkBH,CAnBD,C;;;;;;;;;;;ACvBA,MAAMyU,IAAI,GAAGla,mBAAO,CAAC,0CAAD,CAAP,CAAyBka,IAAtC;;AAEA,MAAM6H,eAAe,GAAG,CAACrH,OAAD,EAAUjT,KAAV,EAAiB3C,MAAjB,KAA4B;AAClD,SAAO,IAAIhE,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,QAAI8gB,IAAI,GAAG,IAAI9H,IAAJ,EAAX;AACA8H,QAAI,CAAClH,kBAAL,CAAwBJ,OAAxB,EAAiCjT,KAAjC,EAAwC3C,MAAxC,EAAgDnE,IAAhD,CACGC,GAAD,IAAS;AACPG,aAAO,CAACH,GAAD,CAAP;AACD,KAHH,EAIGK,GAAD,IACEC,MAAM,CAAC;AACL4P,WAAK,EAAE,KADF;AAELrL,aAAO,EAAExE,GAAG,CAACwE,OAAJ,GAAcxE,GAAG,CAACwE,OAAlB,GAA6B,UAASe,IAAI,CAACyb,SAAL,CAAehhB,GAAf,CAAoB;AAF9D,KAAD,CALV;AAUD,GAZM,CAAP;AAaD,CAdD;;AAgBAkB,OAAO,CAAC+f,YAAR,GAAuB,CAACjd,GAAD,EAAMrE,GAAN,EAAW6K,IAAX,KAAoB;AACzC/I,SAAO,CAACuD,GAAR,CAAa,6CAAb,EADyC,CAEzC;;AACA,MAAIyU,OAAO,GAAGzV,GAAG,CAACkd,OAAlB;AAAA,MACE1a,KAAK,GAAGxC,GAAG,CAACvE,OAAJ,CAAY,eAAZ,CADV;AAAA,MAEEoE,MAAM,GACJG,GAAG,CAACvE,OAAJ,CAAY,SAAZ,KAA0BuE,GAAG,CAACK,KAAJ,CAAU,SAAV,CAA1B,IAAkDL,GAAG,CAACe,IAAJ,CAAS,SAAT,CAHtD;AAKA+b,iBAAe,CAACrH,OAAD,EAAUjT,KAAV,EAAiB3C,MAAjB,CAAf,CAAwCnE,IAAxC,CACGE,MAAD,IAAY;AACV,QAAIA,MAAM,CAACiQ,KAAX,EAAkBrF,IAAI,GAAtB,KAEE7K,GAAG,CACA0B,MADH,CACU,KADV,EAEGiB,IAFH,CAEQ;AAAEiC,aAAO,EAAE,KAAX;AAAkBhD,WAAK,EAAE;AAAzB,KAFR;AAGH,GAPH,EAQGvB,GAAD,IACEL,GAAG,CAAC0B,MAAJ,CAAW,KAAX,EAAkBiB,IAAlB,CAAuB;AACrBiC,WAAO,EAAE,KADY;AAErBhD,SAAK,EAAEvB,GAAG,CAACwE,OAAJ,IAAe;AAFD,GAAvB,CATJ;AAcD,CAtBD,C;;;;;;;;;;;AClBA,MAAM2c,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AACA,MAAMsR,MAAM,GAAGtR,mBAAO,CAAC,sBAAD,CAAtB;;AAEA,MAAMqiB,aAAa,GAAG,IAAID,QAAQ,CAACE,MAAb,CAAoB;AACxCpd,UAAQ,EAAE;AACRqd,QAAI,EAAEC;AADE,GAD8B;AAIxC5e,MAAI,EAAE;AACJ2e,QAAI,EAAEC;AADF,GAJkC;AAOxChJ,QAAM,EAAE;AACN+I,QAAI,EAAEC;AADA,GAPgC;AAUxCpS,WAAS,EAAE;AACTmS,QAAI,EAAEE,IADG;AAETvT,WAAO,EAAEoC,MAAM,CAACS,GAAP;AAFA;AAV6B,CAApB,CAAtB;AAgBAsQ,aAAa,CAACK,OAAd,GAAwB;AACtBvJ,kBAAgB,EAAE,UAAUjU,QAAV,EAAoBtB,IAApB,EAA0BwV,OAA1B,EAAmC;AACnD,QAAI5F,SAAS,GAAG4F,OAAO,CAACpO,GAAR,CAAawO,MAAD,KAAa;AAAEtU,cAAF;AAAYtB,UAAZ;AAAkB4V;AAAlB,KAAb,CAAZ,CAAhB;AACA,WAAO,IAAI1Y,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC6X,aAAO,CAAC4J,UAAR,CAAmBnP,SAAnB,EACG7S,IADH,CACSiiB,KAAD,IAAW;AACf7hB,eAAO,CAAC6hB,KAAD,CAAP;AACD,OAHH,EAIG5hB,KAJH,CAIUC,GAAD,IAAS;AACdC,cAAM,CAACD,GAAD,CAAN;AACD,OANH;AAOD,KARM,CAAP;AASD,GAZqB;AAatByY,oBAAkB,EAAE,UAAUxU,QAAV,EAAoB;AACtC,WAAO,IAAIpE,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKuf,IAAL,CAAU;AAAEvb,gBAAQ,EAAEA;AAAZ,OAAV,EACG2d,IADH,GAEGC,IAFH,CAEQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACrB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN;;AACT,YAAIJ,MAAJ,EAAY;AACV,cAAI2S,SAAS,GAAG3S,MAAM,CAACmK,GAAP,CAAY0H,CAAD,KAAQ;AACjCpF,kBAAM,EAAEoF,CAAC,CAAC9O,IADuB;AAEjC4V,kBAAM,EAAE9G,CAAC,CAAC8G,MAFuB;AAGjCpJ,qBAAS,EAAEsC,CAAC,CAACtC;AAHoB,WAAR,CAAX,CAAhB;AAKA,cAAImC,OAAO,GAAGiB,SAAS,CAAC2N,MAAV,CAAiB,CAAC5O,OAAD,EAAUjF,MAAV,KAAqB;AAClD,gBACEiF,OAAO,CAACvE,MAAR,CAAgB0E,CAAD,IAAOA,CAAC,CAACpF,MAAF,KAAaA,MAAM,CAACA,MAA1C,EAAkD/L,MAAlD,GAA2D,CAD7D,EAEE;AACA,kBAAIwhB,QAAQ,GAAGxQ,OAAO,CAACvE,MAAR,CACZ0E,CAAD,IAAOA,CAAC,CAACpF,MAAF,KAAaA,MAAM,CAACA,MADd,EAEb,CAFa,CAAf;AAGAiF,qBAAO,GAAG,CACR,GAAGA,OAAO,CAACvE,MAAR,CAAgB0E,CAAD,IAAOA,CAAC,CAACpF,MAAF,KAAaA,MAAM,CAACA,MAA1C,CADK,EAER,EACE,GAAGyV,QADL;AAEE3J,uBAAO,EAAE,CAAC,GAAG2J,QAAQ,CAAC3J,OAAT,CAAiBpO,GAAjB,CAAsBgY,CAAD,IAAOA,CAA5B,CAAJ,EAAoC1V,MAAM,CAACkM,MAA3C;AAFX,eAFQ,CAAV;AAOD,aAbD,MAaO;AACLjH,qBAAO,GAAG,CACR,GAAGA,OADK,EAER;AACEjF,sBAAM,EAAEA,MAAM,CAACA,MADjB;AAEE8L,uBAAO,EAAE,CAAC9L,MAAM,CAACkM,MAAR,CAFX;AAGEpJ,yBAAS,EAAE9C,MAAM,CAAC8C;AAHpB,eAFQ,CAAV;AAQD;;AACD,mBAAOmC,OAAP;AACD,WAzBa,EAyBX,EAzBW,CAAd;AA0BAxR,iBAAO,CAAC;AAAEwR,mBAAO,EAAEA;AAAX,WAAD,CAAP;AACD;AACF,OAtCH;AAuCD,KAxCM,CAAP;AAyCD,GAvDqB;AAwDtBuH,sBAAoB,EAAE,UAAU5U,QAAV,EAAoB;AACxC,WAAO,KAAKub,IAAL,CAAU;AAAEvb,cAAQ,EAAEA;AAAZ,KAAV,EACJ+d,IADI,CACC;AAAErf,UAAI,EAAE,KAAR;AAAe4V,YAAM,EAAE;AAAvB,KADD,EAEJqJ,IAFI,EAAP;AAGD,GA5DqB;AA6DtBhJ,2BAAyB,EAAE,UAAUD,UAAV,EAAsBJ,MAAtB,EAA8B;AACvD,WAAO,KAAK0J,OAAL,CAAa;AAAEtf,UAAI,EAAEgW,UAAR;AAAoBJ,YAAM,EAAEA;AAA5B,KAAb,EAAmDqJ,IAAnD,EAAP;AACD;AA/DqB,CAAxB;AAkEA,MAAM9J,OAAO,GAAGqJ,QAAQ,CAACe,KAAT,CAAe,SAAf,EAA0Bd,aAA1B,CAAhB;AAEAngB,MAAM,CAACC,OAAP,GAAiB4W,OAAjB,C;;;;;;;;;;;ACvFA,MAAMqJ,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AACA,MAAMsR,MAAM,GAAGtR,mBAAO,CAAC,sBAAD,CAAtB;;AAEA,MAAMojB,kBAAkB,GAAG,IAAIhB,QAAQ,CAACE,MAAb,CAAoB;AAC7Ce,oBAAkB,EAAE,CAACjB,QAAQ,CAACkB,UAAV;AADyB,CAApB,CAA3B;AAIAF,kBAAkB,CAACV,OAAnB,GAA6B;AAC3Ba,mBAAiB,EAAE,YAAY;AAC7B,QAAI1C,KAAK,GAAG,IAAI,IAAJ,CAAS;AAAEwC,wBAAkB,EAAE,CAAC,GAAD;AAAtB,KAAT,CAAZ;AACA,WAAOxC,KAAK,CAACtL,IAAN,EAAP;AACD,GAJ0B;AAK3BuL,iBAAe,EAAE,YAAY;AAC3B,WAAO,IAAIhgB,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa,EAAb,EACGL,IADH,GAEGC,IAFH,CAEQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACrB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN;;AACT,YAAI,CAACJ,MAAL,EAAa;AACX,eAAK0iB,iBAAL;AACD;;AACD,YAAI1C,KAAK,GAAGhgB,MAAM,GAAGA,MAAM,CAACwiB,kBAAV,GAA+B,CAAC,GAAD,CAAjD;AACAtiB,eAAO,CAAC8f,KAAK,IAAI,CAAC,GAAD,CAAV,CAAP;AACD,OATH;AAUD,KAXM,CAAP;AAYD;AAlB0B,CAA7B;AAqBA,MAAMb,YAAY,GAAGoC,QAAQ,CAACe,KAAT,CAAe,cAAf,EAA+BC,kBAA/B,CAArB;AAEAlhB,MAAM,CAACC,OAAP,GAAiB6d,YAAjB,C;;;;;;;;;;;AC9BA,MAAMoC,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AACA,MAAMwjB,IAAI,GAAGxjB,mBAAO,CAAC,oCAAD,CAApB;;AACA,MAAMyjB,IAAI,GAAGzjB,mBAAO,CAAC,oCAAD,CAApB;;AACA,MAAM6F,IAAI,GAAG7F,mBAAO,CAAC,oCAAD,CAApB;;AACA,MAAMqU,YAAY,GAAGrU,mBAAO,CAAC,oDAAD,CAA5B;;AACA,MAAMmd,YAAY,GAAGnd,mBAAO,CAAC,oDAAD,CAA5B;;AACA,MAAMod,YAAY,GAAGpd,mBAAO,CAAC,oDAAD,CAA5B;;AACA,MAAM4b,UAAU,GAAG5b,mBAAO,CAAC,gDAAD,CAA1B;;AACA,MAAM+Y,OAAO,GAAG/Y,mBAAO,CAAC,0CAAD,CAAvB;;AACA,MAAMggB,YAAY,GAAGhgB,mBAAO,CAAC,oDAAD,CAA5B;;AAEA,MAAM0jB,MAAM,GAAG;AACbF,MADa;AAEbC,MAFa;AAGb5d,MAHa;AAIb+V,YAJa;AAKbvH,cALa;AAMb8I,cANa;AAObC,cAPa;AAQbrE,SARa;AASbiH;AATa,CAAf;;AAYA,MAAM/c,SAAS,GAAG,MAAM;AACtB;AACA,MAAI0gB,KAAK,GAAGvB,QAAQ,CAACwB,OAAT,CAAiBjf,OAAO,CAACC,GAAR,CAAYif,aAA7B,EAA4C;AACtDC,mBAAe,EAAE,IADqC;AAEtDC,sBAAkB,EAAE;AAFkC,GAA5C,CAAZ;AAKA3B,UAAQ,CAAC4B,UAAT,CAAoBC,EAApB,CACE,OADF,EAEEvhB,OAAO,CAACF,KAAR,CAAc0hB,IAAd,CAAmBxhB,OAAnB,EAA4B,6BAA5B,CAFF;AAIA,SAAOihB,KAAP;AACD,CAZD;;AAcAzhB,MAAM,CAACC,OAAP,GAAiB;AAAEc,WAAF;AAAaygB;AAAb,CAAjB,C;;;;;;;;;;;ACrCA,MAAMpS,MAAM,GAAGtR,mBAAO,CAAC,sBAAD,CAAtB;;AACA,MAAMoiB,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB,C,CACA;;;AAEA,MAAMmkB,UAAU,GAAG,IAAI/B,QAAQ,CAACE,MAAb,CAAoB;AACnC1e,MAAI,EAAE;AACF2e,QAAI,EAAEC,MADJ;AAEF4B,YAAQ,EAAE;AAFR,GAD6B;AAKnCC,MAAI,EAAE;AACF9B,QAAI,EAAEC,MADJ;AAEF4B,YAAQ,EAAE;AAFR,GAL6B;AASnCE,UAAQ,EAAE;AACN/B,QAAI,EAAEH,QAAQ,CAACE,MAAT,CAAgB9Q,KAAhB,CAAsBD,QADtB;AAENgT,OAAG,EAAE;AAFC,GATyB;AAanCC,UAAQ,EAAE;AACNjC,QAAI,EAAEkC,MADA;AAENvV,WAAO,EAAE;AAFH,GAbyB;AAiBnCpL,MAAI,EAAE;AACFye,QAAI,EAAEC;AADJ,GAjB6B;AAoBnCze,SAAO,EAAE;AACLwe,QAAI,EAAEmC,OADD;AAELxV,WAAO,EAAE;AAFJ,GApB0B;AAwBnCrE,QAAM,EAAE;AACJ0X,QAAI,EAAEmC,OADF;AAEJxV,WAAO,EAAE;AAFL,GAxB2B;AA4BnCqT,MAAI,EAAE;AACFA,QAAI,EAAEC;AADJ,GA5B6B;AA+BnCpS,WAAS,EAAE;AACPmS,QAAI,EAAEE,IADC;AAEPvT,WAAO,EAAEoC,MAAM,CAACS,GAAP;AAFF;AA/BwB,CAApB,CAAnB;AAsCAoS,UAAU,CAACzB,OAAX,GAAqB;AACjBiC,aAAW,EAAE,UAAUC,MAAV,EAAkB;AAAE;AAC7B,WAAO,KAAK1B,OAAL,CAAa;AAChB5X,SAAG,EAAEsZ,MADW,CACJ;AACZ;;AAFgB,KAAb,CAAP;AAIH,GANgB;AAOjBC,YAAU,EAAE,UAAUC,OAAV,EAAmB;AAC3B,WAAO,KAAKpN,MAAL,CAAY;AACfpM,SAAG,EAAEwZ,OAAO,CAACxZ;AADE,KAAZ,EAEJ;AACKyZ,UAAI,EAAE;AACF,gBAAQD,OAAO,CAAClhB,IADd;AAEF,gBAAQkhB,OAAO,CAACT,IAFd;AAGF,oBAAYS,OAAO,CAACR,QAHlB;AAIF,oBAAYQ,OAAO,CAACN,QAJlB;AAKF,gBAAQM,OAAO,CAACN,QALd;AAMF,mBAAWM,OAAO,CAAC/gB,OANjB;AAOF,kBAAU+gB,OAAO,CAACja,MAPhB;AAQF,gBAAQia,OAAO,CAACja,MARd;AASF,qBAAayG,MAAM,CAACS,GAAP;AATX;AADX,KAFI,CAAP;AAeH,GAvBgB;AAwBjBiT,YAAU,EAAE,UAAUJ,MAAV,EAAkB;AAC1B,WAAO,KAAKK,UAAL,CAAgB;AACnB3Z,SAAG,EAAEsZ;AADc,KAAhB,CAAP;AAGH,GA5BgB;AA6BjBM,eAAa,EAAE,UAAUN,MAAV,EAAkB;AAC7B,WAAO,KAAKnE,IAAL,CAAU;AACb6D,cAAQ,EAAEM;AADG,KAAV,CAAP;AAGH,GAjCgB;AAkCjBO,0BAAwB,EAAE,UAAUC,OAAV,EAAmB;AACzC,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAIC,kBAAkB,GAAG,KAAKJ,aAAL,CAAmBE,OAAnB,CAAzB;AACA,QAAIG,QAAQ,GAAG,EAAf;AACA,WAAO,IAAIzkB,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACpCokB,wBAAkB,CAAC3kB,IAAnB,CAAyB6kB,MAAD,IAAY;AAChC,YAAIA,MAAM,CAACjkB,MAAP,GAAgB,CAApB,EAAuB;AACnBgkB,kBAAQ,GAAG/e,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACyb,SAAL,CAAeuD,MAAf,CAAX,EAAmCxa,GAAnC,CAAwCya,KAAD,IAAW;AACzD,mBAAOA,KAAK,CAACna,GAAb;AACH,WAFU,CAAX;;AAGA,cAAIoa,cAAc,GAAGL,KAAK,CAACF,wBAAN,CAA+BI,QAA/B,CAArB;;AACAG,wBAAc,CAAC/kB,IAAf,CAAqBE,MAAD,IAAY;AAC5BE,mBAAO,CAACwkB,QAAQ,CAACrf,MAAT,CAAgBrF,MAAhB,CAAD,CAAP;AACH,WAFD;AAGH,SARD,MASIE,OAAO,CAACwkB,QAAD,CAAP;AACP,OAXD,EAWItkB,GAAD,IAAS;AACRC,cAAM,CAACD,GAAD,CAAN;AACH,OAbD;AAcH,KAfM,CAAP;AAgBH,GAtDgB;AAuDjB0kB,2BAAyB,EAAE,UAAUf,MAAV,EAAkB;AACzC,QAAIS,KAAK,GAAG,IAAZ;;AACA,QAAIO,YAAY,GAAG,KAAKjB,WAAL,CAAiBC,MAAjB,CAAnB;AACA,QAAIW,QAAQ,GAAG,EAAf;AACA,WAAO,IAAIzkB,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACpC0kB,kBAAY,CAACjlB,IAAb,CAAmB2a,IAAD,IAAU;AACxBA,YAAI,GAAG9U,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACyb,SAAL,CAAe3G,IAAf,CAAX,CAAP;;AACA,YAAIA,IAAI,IAAIA,IAAI,CAACgJ,QAAjB,EAA2B;AACvBiB,kBAAQ,CAAC3c,IAAT,CAAc0S,IAAI,CAACgJ,QAAnB;;AACA,cAAIuB,cAAc,GAAGR,KAAK,CAACM,yBAAN,CAAgCrK,IAAI,CAACgJ,QAArC,CAArB;;AACAuB,wBAAc,CAACllB,IAAf,CAAqBE,MAAD,IAChBE,OAAO,CAACwkB,QAAQ,CAACrf,MAAT,CAAgBrF,MAAhB,CAAD,CADX;AAEH,SALD,MAMIE,OAAO,CAACwkB,QAAD,CAAP;AACP,OATD,EASGtkB,GAAG,IAAIC,MAAM,CAACD,GAAD,CAThB;AAUH,KAXM,CAAP;AAYH,GAvEgB;AAwEjB6kB,UAAQ,EAAE,UAAUniB,KAAV,EAAiB;AACvB,WAAO,KAAK8c,IAAL,CAAU;AAAEnV,SAAG,EAAE3H;AAAP,KAAV,CAAP;AACH;AA1EgB,CAArB;AAgFA,MAAM6f,IAAI,GAAGpB,QAAQ,CAACe,KAAT,CAAe,MAAf,EAAuBgB,UAAvB,CAAb;AAEAjiB,MAAM,CAACC,OAAP,GAAiBqhB,IAAjB,C;;;;;;;;;;;AC5HA,MAAMpB,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AAEA,MAAM+lB,gBAAgB,GAAG,IAAI3D,QAAQ,CAACE,MAAb,CAAoB;AACzC0D,UAAQ,EAAE;AACNzD,QAAI,EAAEC;AADA,GAD+B;AAIzCyD,UAAQ,EAAE;AACN1D,QAAI,EAAEC;AADA,GAJ+B;AAOzC0D,eAAa,EAAE;AACX3D,QAAI,EAAEC;AADK,GAP0B;AAUzC2D,SAAO,EAAE;AACL5D,QAAI,EAAEC;AADD,GAVgC;AAazC4D,UAAQ,EAAE;AACN7D,QAAI,EAAEC;AADA,GAb+B;AAgBzC6D,UAAQ,EAAE;AACN9D,QAAI,EAAEC;AADA,GAhB+B;AAmBzC8D,MAAI,EAAE;AACF/D,QAAI,EAAEC;AADJ,GAnBmC;AAsBzC+D,UAAQ,EAAE;AACNhE,QAAI,EAAEC;AADA,GAtB+B;AAyBzCgE,WAAS,EAAE;AACPjE,QAAI,EAAEC;AADC,GAzB8B;AA4BzCiE,MAAI,EAAE;AACFlE,QAAI,EAAEC;AADJ,GA5BmC;AA+BzCkE,eAAa,EAAE;AACXnE,QAAI,EAAEC;AADK,GA/B0B;AAkCzCmE,SAAO,EAAE;AACLpE,QAAI,EAAEC;AADD,GAlCgC;AAqCzCoE,kBAAgB,EAAE;AACdrE,QAAI,EAAEC;AADQ,GArCuB;AAwCzCqE,QAAM,EAAE;AACJtE,QAAI,EAAEC;AADF,GAxCiC;AA2CzCsE,cAAY,EAAE;AACVvE,QAAI,EAAEC;AADI;AA3C2B,CAApB,CAAzB;AAgDAuD,gBAAgB,CAACrD,OAAjB,GAA2B;AACvBzW,WAAS,EAAE,UAAU6P,EAAV,EAAc;AACrB,QAAIiL,KAAK,GAAG,IAAIC,MAAJ,CAAWlL,EAAX,CAAZ;AACA,WAAO,KAAK2E,IAAL,CAAU;AAAEuF,cAAQ,EAAEe;AAAZ,KAAV,EAA+BvjB,KAA/B,CAAqC,GAArC,CAAP;AACH;AAJsB,CAA3B;AAOA,MAAMoY,UAAU,GAAGwG,QAAQ,CAACe,KAAT,CAAe,YAAf,EAA6B4C,gBAA7B,CAAnB;AAEA7jB,MAAM,CAACC,OAAP,GAAiByZ,UAAjB,C;;;;;;;;;;;AC3DA,MAAMtK,MAAM,GAAGtR,mBAAO,CAAC,sBAAD,CAAtB;;AACA,MAAMoiB,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AAEA,MAAMinB,UAAU,GAAG,IAAI7E,QAAQ,CAACE,MAAb,CAAoB;AACnC1e,MAAI,EAAE;AACF2e,QAAI,EAAEC,MADJ;AAEF4B,YAAQ,EAAE;AAFR,GAD6B;AAKnC5f,aAAW,EAAE;AACT+d,QAAI,EAAEC,MADG;AAET4B,YAAQ,EAAE;AAFD,GALsB;AASnC8C,oBAAkB,EAAE;AAChB3E,QAAI,EAAEmC,OADU;AAEhBxV,WAAO,EAAE;AAFO,GATe;AAanCiY,kBAAgB,EAAE;AACd5E,QAAI,EAAEmC,OADQ;AAEdxV,WAAO,EAAE;AAFK,GAbiB;AAiBnCrE,QAAM,EAAE;AACJ0X,QAAI,EAAEmC,OADF;AAEJxV,WAAO,EAAE;AAFL,GAjB2B;AAqBnCvL,OAAK,EAAE,CAAC;AACJ4e,QAAI,EAAEH,QAAQ,CAACE,MAAT,CAAgB9Q,KAAhB,CAAsBD,QADxB;AAEJgT,OAAG,EAAE;AAFD,GAAD,CArB4B;AAyBnCnU,WAAS,EAAE;AACPmS,QAAI,EAAEE,IADC;AAEPvT,WAAO,EAAEoC,MAAM,CAACS,GAAP;AAFF;AAzBwB,CAApB,CAAnB;AA+BAkV,UAAU,CAACvE,OAAX,GAAqB;AACjB0E,YAAU,EAAE,UAAUC,MAAV,EAAkB;AAC1B,WAAO,KAAKpC,UAAL,CAAgB;AACnB3Z,SAAG,EAAE+b;AADc,KAAhB,CAAP;AAGH,GALgB;AAMjBC,aAAW,EAAE,UAAUD,MAAV,EAAkB1jB,KAAlB,EAAyB;AAClC,QAAI,CAAC4jB,KAAK,CAACC,OAAN,CAAc7jB,KAAd,CAAL,EAA2BA,KAAK,GAAG,CAACA,KAAD,CAAR;AAC3B,WAAO,KAAK+T,MAAL,CAAY;AACfpM,SAAG,EAAE+b;AADU,KAAZ,EAEJ;AACKI,eAAS,EAAE;AACP9jB,aAAK,EAAE;AACH+jB,eAAK,EAAE/jB;AADJ;AADA;AADhB,KAFI,EAQA;AACCgkB,WAAK,EAAE;AADR,KARA,CAAP;AAWH,GAnBgB;AAoBjBC,gBAAc,EAAE,UAAUC,KAAV,EAAiBlkB,KAAjB,EAAwB;AACpC,QAAI,CAAC4jB,KAAK,CAACC,OAAN,CAAc7jB,KAAd,CAAL,EAA2BA,KAAK,GAAG,CAACA,KAAD,CAAR;AAC3B,QAAI,CAAC4jB,KAAK,CAACC,OAAN,CAAcK,KAAd,CAAL,EAA2BA,KAAK,GAAG,CAACA,KAAD,CAAR;AAE3B,WAAO,KAAKnQ,MAAL,CAAY;AACfpM,SAAG,EAAE;AACDwc,WAAG,EAAED;AADJ;AADU,KAAZ,EAIJ;AACKE,cAAQ,EAAE;AACNpkB,aAAK,EAAEA;AADD;AADf,KAJI,EAQA;AACCgkB,WAAK,EAAE;AADR,KARA,CAAP;AAWH,GAnCgB;AAoCjBK,cAAY,EAAE,UAAUX,MAAV,EAAkB;AAC5B,WAAO,IAAIvmB,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACpC,WAAKuf,IAAL,CAAU;AACNnV,WAAG,EAAE+b;AADC,OAAV,EAEGY,QAFH,CAEY,OAFZ,EAEqBnF,IAFrB,CAE0B,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACvC,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN;AACTF,eAAO,CAACF,MAAD,CAAP;AACH,OALD;AAMH,KAPM,CAAP;AAQH;AA7CgB,CAArB;AAgDA,MAAM4iB,IAAI,GAAGrB,QAAQ,CAACe,KAAT,CAAe,MAAf,EAAuB8D,UAAvB,CAAb;AAEA/kB,MAAM,CAACC,OAAP,GAAiBshB,IAAjB,C;;;;;;;;;;;ACpFA,MAAMrB,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AACA,MAAMsR,MAAM,GAAGtR,mBAAO,CAAC,sBAAD,CAAtB;;AAEA,MAAMkoB,UAAU,GAAG,IAAI9F,QAAQ,CAACE,MAAb,CAAoB;AACrCrK,MAAI,EAAE;AACJsK,QAAI,EAAEC;AADF,GAD+B;AAIrCpS,WAAS,EAAE;AACTmS,QAAI,EAAEE,IADG;AAETvT,WAAO,EAAEoC,MAAM,CAACS,GAAP;AAFA;AAJ0B,CAApB,CAAnB;AAUA7P,MAAM,CAACC,OAAP,GAAiB+lB,UAAjB,C;;;;;;;;;;;ACbA,MAAM9F,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AAEA,MAAMmoB,eAAe,GAAG,IAAI/F,QAAQ,CAACE,MAAb,CAAoB;AAC1C5G,MAAI,EAAE;AAAE6G,QAAI,EAAEC;AAAR,GADoC;AAE1C4F,OAAK,EAAE;AAAE7F,QAAI,EAAEC;AAAR,GAFmC;AAG1C6F,OAAK,EAAE;AAAE9F,QAAI,EAAEC;AAAR,GAHmC;AAI1C8F,UAAQ,EAAE;AAAE/F,QAAI,EAAEC;AAAR,GAJgC;AAK1C/U,QAAM,EAAE;AAAE8U,QAAI,EAAEC;AAAR,GALkC;AAM1C+F,QAAM,EAAE;AAAEhG,QAAI,EAAEmC;AAAR,GANkC;AAO1C8D,UAAQ,EAAE;AAAEjG,QAAI,EAAEC;AAAR,GAPgC;AAQ1CiG,YAAU,EAAE;AAAElG,QAAI,EAAEC;AAAR;AAR8B,CAApB,CAAxB;AAWAtgB,MAAM,CAACC,OAAP,GAAiBgmB,eAAjB,C;;;;;;;;;;;ACbA,MAAM/F,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AAEA,MAAM0oB,cAAc,GAAG,IAAItG,QAAQ,CAACE,MAAb,CAAoB;AACzCM,OAAK,EAAE;AACLL,QAAI,EAAEC;AADD,GADkC;AAIzChZ,MAAI,EAAE;AACJ+Y,QAAI,EAAEC;AADF;AAJmC,CAApB,CAAvB;AASAtgB,MAAM,CAACC,OAAP,GAAiBumB,cAAjB,C;;;;;;;;;;;ACXA,MAAMtG,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AACA,MAAMsR,MAAM,GAAGtR,mBAAO,CAAC,sBAAD,CAAtB;;AACA,MAAM0oB,cAAc,GAAG1oB,mBAAO,CAAC,uEAAD,CAA9B;;AACA,MAAM2oB,WAAW,GAAG,IAAIvG,QAAQ,CAACE,MAAb,CAAoB;AACtCsG,OAAK,EAAE;AACLrG,QAAI,EAAEC;AADD,GAD+B;AAItCD,MAAI,EAAE;AACJA,QAAI,EAAEC;AADF,GAJgC;AAOtC/hB,MAAI,EAAE,CAACioB,cAAD,CAPgC;AAQtCN,OAAK,EAAE;AACL7F,QAAI,EAAEC;AADD,GAR+B;AAWtCqG,WAAS,EAAE;AACTtG,QAAI,EAAEmC,OADG;AAETxV,WAAO,EAAE;AAFA,GAX2B;AAetC4Z,kBAAgB,EAAE;AAChBvG,QAAI,EAAEC;AADU;AAfoB,CAApB,CAApB;AAoBAtgB,MAAM,CAACC,OAAP,GAAiBwmB,WAAjB,C;;;;;;;;;;;ACvBA,MAAMvG,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AACA,MAAMmoB,eAAe,GAAGnoB,mBAAO,CAAC,yEAAD,CAA/B;;AAEA,MAAMmkB,UAAU,GAAG,IAAI/B,QAAQ,CAACE,MAAb,CAAoB;AACrC5G,MAAI,EAAE;AAAE6G,QAAI,EAAEC;AAAR,GAD+B;AAErC4F,OAAK,EAAE;AAAC7F,QAAI,EAAEC;AAAP,GAF8B;AAGrCxe,gBAAc,EAAE,CAACwe,MAAD,CAHqB;AAIrCuG,YAAU,EAAE,CAACZ,eAAD;AAJyB,CAApB,CAAnB;AAOAjmB,MAAM,CAACC,OAAP,GAAiBgiB,UAAjB,C;;;;;;;;;;;ACVA,MAAM/B,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AACA,MAAMsR,MAAM,GAAGtR,mBAAO,CAAC,sBAAD,CAAtB;;AACA,MAAM2oB,WAAW,GAAG3oB,mBAAO,CAAC,iEAAD,CAA3B;;AAEA,MAAMgpB,YAAY,GAAG,IAAI5G,QAAQ,CAACE,MAAb,CAAoB;AACvC1e,MAAI,EAAE;AAAE2e,QAAI,EAAEC;AAAR,GADiC;AAEvC9V,OAAK,EAAE;AAAE6V,QAAI,EAAEC;AAAR,GAFgC;AAGvC5J,SAAO,EAAE;AAAE2J,QAAI,EAAEH,QAAQ,CAACE,MAAT,CAAgB9Q,KAAhB,CAAsByX;AAA9B,GAH8B;AAIvCC,QAAM,EAAE,CAACP,WAAD;AAJ+B,CAApB,CAArB;AAOAzmB,MAAM,CAACC,OAAP,GAAiB6mB,YAAjB,C;;;;;;;;;;;ACXA,MAAM5G,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AACA,MAAMsR,MAAM,GAAGtR,mBAAO,CAAC,sBAAD,CAAtB;;AAEA,MAAMmpB,WAAW,GAAG,IAAI/G,QAAQ,CAACE,MAAb,CAAoB;AACtC1e,MAAI,EAAE;AACJ2e,QAAI,EAAEC;AADF,GADgC;AAItC4G,SAAO,EAAE;AACP7G,QAAI,EAAEC;AADC,GAJ6B;AAOtCjZ,SAAO,EAAE;AACPgZ,QAAI,EAAEC;AADC,GAP6B;AAUtCzV,WAAS,EAAE;AACTwV,QAAI,EAAEmC,OADG;AAETxV,WAAO,EAAE;AAFA,GAV2B;AActCma,QAAM,EAAE;AACN9G,QAAI,EAAEC;AADA,GAd8B;AAiBtC8G,uBAAqB,EAAE;AACrB/G,QAAI,EAAEC;AADe,GAjBe;AAoBtC3X,QAAM,EAAE;AACN0X,QAAI,EAAEmC,OADA;AAENxV,WAAO,EAAE;AAFH,GApB8B;AAwBtCqa,UAAQ,EAAE;AACRhH,QAAI,EAAEE;AADE,GAxB4B;AA2BtC+G,SAAO,EAAE;AACPjH,QAAI,EAAEE;AADC,GA3B6B;AA8BtCgH,OAAK,EAAE;AACLlH,QAAI,EAAEkC,MADD;AAELvV,WAAO,EAAE;AAFJ,GA9B+B;AAkCtCkB,WAAS,EAAE;AACTmS,QAAI,EAAEE,IADG;AAETvT,WAAO,EAAEoC,MAAM,CAACS,GAAP;AAFA;AAlC2B,CAApB,CAApB;AAwCA7P,MAAM,CAACC,OAAP,GAAiBgnB,WAAjB,C;;;;;;;;;;;AC3CA,MAAM/G,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AACA,MAAMsR,MAAM,GAAGtR,mBAAO,CAAC,sBAAD,CAAtB;;AAEA,MAAM0pB,eAAe,GAAG,IAAItH,QAAQ,CAACE,MAAb,CAAoB;AAC1C7a,OAAK,EAAE;AACL8a,QAAI,EAAEC;AADD,GADmC;AAI1CpS,WAAS,EAAE;AACTmS,QAAI,EAAEE,IADG;AAETvT,WAAO,EAAEoC,MAAM,CAACS,GAAP;AAFA;AAJ+B,CAApB,CAAxB;AAUA7P,MAAM,CAACC,OAAP,GAAiBunB,eAAjB,C;;;;;;;;;;;ACbA,MAAMtH,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AACA,MAAMsR,MAAM,GAAGtR,mBAAO,CAAC,sBAAD,CAAtB;;AAEA,MAAM2pB,gBAAgB,GAAG,IAAIvH,QAAQ,CAACE,MAAb,CAAoB;AAC3CpX,UAAQ,EAAE;AACRqX,QAAI,EAAEC;AADE,GADiC;AAI3Cvb,cAAY,EAAE;AACZsb,QAAI,EAAEC;AADM,GAJ6B;AAO3CrX,YAAU,EAAE;AACVoX,QAAI,EAAEC;AADI,GAP+B;AAU3CpX,UAAQ,EAAE;AACRmX,QAAI,EAAEC;AADE,GAViC;AAa3CpS,WAAS,EAAE;AACTmS,QAAI,EAAEE,IADG;AAETvT,WAAO,EAAEoC,MAAM,CAACS,GAAP;AAFA;AAbgC,CAApB,CAAzB;AAmBA7P,MAAM,CAACC,OAAP,GAAiBwnB,gBAAjB,C;;;;;;;;;;;ACtBA,MAAMvH,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AACA,MAAMsR,MAAM,GAAGtR,mBAAO,CAAC,sBAAD,CAAtB;;AAEA,MAAM4pB,kBAAkB,GAAG,IAAIxH,QAAQ,CAACE,MAAb,CAAoB;AAC7ChgB,QAAM,EAAE;AACNigB,QAAI,EAAEC;AADA,GADqC;AAI7Che,aAAW,EAAE;AACX+d,QAAI,EAAEC;AADK,GAJgC;AAO7C7Q,SAAO,EAAE;AACP4Q,QAAI,EAAEC;AADC,GAPoC;AAU7CpS,WAAS,EAAE;AACTmS,QAAI,EAAEE,IADG;AAETvT,WAAO,EAAEoC,MAAM,CAACS,GAAP;AAFA;AAVkC,CAApB,CAA3B,C,CAgBA;;AAEA7P,MAAM,CAACC,OAAP,GAAiBynB,kBAAjB,C;;;;;;;;;;;ACrBA,MAAMxH,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AACA,MAAMsR,MAAM,GAAGtR,mBAAO,CAAC,sBAAD,CAAtB;;AACA,MAAM4pB,kBAAkB,GAAG5pB,mBAAO,CAAC,gFAAD,CAAlC;;AACA,MAAM2pB,gBAAgB,GAAG3pB,mBAAO,CAAC,4EAAD,CAAhC;;AACA,MAAM6pB,YAAY,GAAG7pB,mBAAO,CAAC,oDAAD,CAA5B;;AACA,MAAM8pB,YAAY,GAAG9pB,mBAAO,CAAC,oDAAD,CAA5B;;AAEA,MAAM+pB,YAAY,GAAG,IAAI3H,QAAQ,CAACE,MAAb,CAAoB;AACvC1e,MAAI,EAAE;AACJ2e,QAAI,EAAEC;AADF,GADiC;AAIvC5X,UAAQ,EAAE;AACR2X,QAAI,EAAEC;AADE,GAJ6B;AAOvCtY,YAAU,EAAE;AACVqY,QAAI,EAAEkC;AADI,GAP2B;AAUvC5Z,QAAM,EAAE;AACN0X,QAAI,EAAEmC;AADA,GAV+B;AAavCtU,WAAS,EAAE;AACTmS,QAAI,EAAEE,IADG;AAETvT,WAAO,EAAEoC,MAAM,CAACS,GAAP;AAFA,GAb4B;AAiBvCjH,YAAU,EAAE,CACV;AACEyX,QAAI,EAAEH,QAAQ,CAACE,MAAT,CAAgB9Q,KAAhB,CAAsBD,QAD9B;AAEEgT,OAAG,EAAE;AAFP,GADU,CAjB2B;;AAuBvC;;;;;;;AAOAjiB,QAAM,EAAE,CAACsnB,kBAAD,CA9B+B;AA+BvCnhB,OAAK,EAAE,CAACkhB,gBAAD,CA/BgC;AAgCvCK,eAAa,EAAE,CACb;AACEzH,QAAI,EAAEH,QAAQ,CAACE,MAAT,CAAgB9Q,KAAhB,CAAsBD,QAD9B;AAEEgT,OAAG,EAAE;AAFP,GADa,CAhCwB;AAsCvCvhB,QAAM,EAAE;AACNuf,QAAI,EAAEH,QAAQ,CAACE,MAAT,CAAgB9Q,KAAhB,CAAsBD,QADtB;AAENgT,OAAG,EAAE;AAFC,GAtC+B;AA0CvChS,SAAO,EAAE,CACP;AACEgQ,QAAI,EAAEH,QAAQ,CAACE,MAAT,CAAgB9Q,KAAhB,CAAsBD,QAD9B;AAEEgT,OAAG,EAAE;AAFP,GADO;AA1C8B,CAApB,CAArB;AAkDAwF,YAAY,CAACrH,OAAb,GAAuB;AACrBtE,YAAU,EAAE,UAAUD,SAAV,EAAqB;AAC/B,QAAInV,MAAM,GAAG,IAAI,IAAJ,CAASmV,SAAT,CAAb;AACA,WAAOnV,MAAM,CAACuM,IAAP,EAAP;AACD,GAJoB;AAKrB8I,cAAY,EAAE,UAAU9S,EAAV,EAAcjJ,MAAd,EAAsB;AAClC,QAAI,CAACilB,KAAK,CAACC,OAAN,CAAcllB,MAAd,CAAL,EAA4BA,MAAM,GAAG,CAACA,MAAD,CAAT;AAC5B,WAAO,KAAK2nB,SAAL,CACL;AAAE3e,SAAG,EAAEC;AAAP,KADK,EAEL;AACEkc,eAAS,EAAE;AACTnlB,cAAM,EAAE;AACNolB,eAAK,EAAEplB;AADD;AADC;AADb,KAFK,EASL;AACEqlB,WAAK,EAAE;AADT,KATK,CAAP;AAaD,GApBoB;AAqBrBpJ,oBAAkB,EAAE,UAAU3a,IAAV,EAAgBsG,UAAhB,EAA4B;AAC9C,QAAI,CAACqd,KAAK,CAACC,OAAN,CAAcllB,MAAd,CAAL,EAA4BA,MAAM,GAAG,CAACA,MAAD,CAAT;AAC5B,WAAO,KAAK2nB,SAAL,CACL;AAAErmB,UAAI,EAAEA,IAAR;AAAcsG,gBAAU,EAAEA;AAA1B,KADK,EAEL;AACEud,eAAS,EAAE;AACTnlB,cAAM,EAAE;AACNolB,eAAK,EAAEplB;AADD;AADC;AADb,KAFK,EASL;AACEqlB,WAAK,EAAE;AADT,KATK,CAAP;AAaD,GApCoB;AAqCrB3I,iBAAe,EAAE,UAAUzT,EAAV,EAAc2e,YAAd,EAA4B;AAC3C,QAAI,CAAC3C,KAAK,CAACC,OAAN,CAAc0C,YAAd,CAAL,EAAkCA,YAAY,GAAG,CAACA,YAAD,CAAf;AAClC,WAAO,KAAKD,SAAL,CACL;AAAE3e,SAAG,EAAEC;AAAP,KADK,EAEL;AACEkc,eAAS,EAAE;AACTuC,qBAAa,EAAE;AACbtC,eAAK,EAAEwC;AADM;AADN;AADb,KAFK,EASL;AAAEvC,WAAK,EAAE;AAAT,KATK,CAAP;AAWD,GAlDoB;AAmDrBlJ,WAAS,EAAE,UAAUlT,EAAV,EAAc;AACvB,WAAO,IAAIzK,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AACX5X,WAAG,EAAEC;AADM,OAAb,EAGG0c,QAHH,CAGY,YAHZ,EAG0B,MAH1B,EAIGA,QAJH,CAIY,eAJZ,EAI6B,cAJ7B,EAKGnF,IALH,CAKQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACrB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN;AACT,YAAI;AACF2C,cADE;AAEFgH,kBAFE;AAGFV,oBAHE;AAIFW,gBAJE;AAKFuF,mBALE;AAMF9N,gBANE;AAOF0nB,uBAPE;AAQFhnB;AARE,YASAnC,MATJ;AAUAE,eAAO,CAAC;AACN6C,cADM;AAENgH,kBAFM;AAGNV,oBAHM;AAINW,gBAJM;AAKNuF,mBALM;AAMN9N,gBANM;AAON0nB,uBAPM;AAQNhnB;AARM,SAAD,CAAP;AAUD,OA3BH;AA4BD,KA7BM,CAAP;AA8BD,GAlFoB;AAmFrBkc,oBAAkB,EAAE,UAAU3T,EAAV,EAAc;AAChC,WAAO,IAAIzK,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AACX5X,WAAG,EAAEC;AADM,OAAb,EAEGuX,IAFH,CAEQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACvB,YAAII,GAAG,IAAI,CAACJ,MAAZ,EAAoBK,MAAM,CAACD,GAAD,CAAN;;AACpB,YAAIJ,MAAJ,EAAY;AACV,cAAI;AAAE+C,gBAAF;AAAQgH,oBAAR;AAAkBV,sBAAlB;AAA8BW,kBAA9B;AAAsCuF;AAAtC,cAAoDvP,MAAxD;AACAE,iBAAO,CAAC;AACN6C,gBADM;AAENgH,oBAFM;AAGNV,sBAHM;AAINW,kBAJM;AAKNuF;AALM,WAAD,CAAP;AAOD;AACF,OAdD;AAeD,KAhBM,CAAP;AAiBD,GArGoB;AAsGrB+Z,iBAAe,EAAE,UAAUjgB,UAAV,EAAsBtG,IAAtB,EAA4B;AAC3C,WAAO,IAAI9C,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AACXhZ,kBAAU,EAAEA,UADD;AAEXtG,YAAI,EAAEA;AAFK,OAAb,EAGGkf,IAHH,CAGQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACvB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN;AACTF,eAAO,CAACF,MAAD,CAAP;AACD,OAND;AAOD,KARM,CAAP;AASD,GAhHoB;AAiHrB2d,mBAAiB,EAAE,UAAUjY,MAAV,EAAkB;AACnC,WAAO,IAAIzF,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AAAEpY,kBAAU,EAAEsX,QAAQ,CAAC5Q,KAAT,CAAeD,QAAf,CAAwBhL,MAAxB;AAAd,OAAb,EAA8Duc,IAA9D,CACE,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACf,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN;AACTF,eAAO,CAACF,MAAD,CAAP;AACD,OAJH;AAMD,KAPM,CAAP;AAQD,GA1HoB;AA2HrB0e,kBAAgB,EAAE,UAAUhU,EAAV,EAAc6e,QAAd,EAAwB;AACxC,WAAO,KAAKH,SAAL,CACL;AACE3e,SAAG,EAAEC;AADP,KADK,EAIL;AACEwZ,UAAI,EAAE;AAAE/hB,cAAM,EAAEonB;AAAV;AADR,KAJK,CAAP;AAQD,GApIoB;AAqIrB1K,iBAAe,EAAE,UAAUnU,EAAV,EAAc;AAC7B,WAAO,IAAIzK,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AACX5X,WAAG,EAAEC;AADM,OAAb,EAGG0c,QAHH,CAGY,QAHZ,EAIGnF,IAJH,CAIQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACrB,YAAII,GAAG,IAAI,CAACJ,MAAZ,EAAoBK,MAAM,CAACD,GAAG,IAAI,iCAAR,CAAN,CAApB,KACK;AACH,cAAI;AAAE+B;AAAF,cAAanC,MAAjB;AACA,cAAImC,MAAJ,EAAYjC,OAAO,CAAC,EAAE,GAAGiC,MAAM,CAACuN;AAAZ,WAAD,CAAP,CAAZ,KACKxP,OAAO,CAAC,EAAD,CAAP;AACN;AACF,OAXH;AAYD,KAbM,CAAP;AAcD,GApJoB;AAqJrBoY,kBAAgB,EAAE,UAAU5N,EAAV,EAAc8e,QAAd,EAAwB;AACxC,QAAI,CAAC9C,KAAK,CAACC,OAAN,CAAc6C,QAAd,CAAL,EAA8BA,QAAQ,GAAG,CAACA,QAAD,CAAX;AAC9B,WAAO,KAAKJ,SAAL,CACL;AAAE3e,SAAG,EAAEC;AAAP,KADK,EAEL;AAAEkc,eAAS,EAAE;AAAElV,eAAO,EAAE;AAAEmV,eAAK,EAAE2C;AAAT;AAAX;AAAb,KAFK,EAGL;AAAE1C,WAAK,EAAE;AAAT,KAHK,CAAP;AAKD,GA5JoB;AA6JrBzO,kBAAgB,EAAE,UAAU3N,EAAV,EAAc;AAC9B,WAAO,IAAIzK,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AACX5X,WAAG,EAAEC;AADM,OAAb,EAGG0c,QAHH,CAGY,SAHZ,EAIGpF,IAJH,GAKGC,IALH,CAKQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACrB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN;;AACT,YAAIJ,MAAJ,EAAY;AACV,cAAI;AAAE0R;AAAF,cAAc1R,MAAlB;AACA,cAAI0R,OAAJ,EAAaxR,OAAO,CAAC;AAAEwR,mBAAO,EAAE,CAAC,GAAGA,OAAJ;AAAX,WAAD,CAAP,CAAb,KACKxR,OAAO,CAAC;AAAEwR,mBAAO,EAAE;AAAX,WAAD,CAAP;AACN,SAJD,MAIOxR,OAAO,CAAC;AAAEwR,iBAAO,EAAE;AAAX,SAAD,CAAP;AACR,OAZH;AAaD,KAdM,CAAP;AAeD;AA7KoB,CAAvB;AAgLA,MAAMyG,MAAM,GAAGoJ,QAAQ,CAACe,KAAT,CAAe,QAAf,EAAyB4G,YAAzB,CAAf;AAEA7nB,MAAM,CAACC,OAAP,GAAiB6W,MAAjB,C;;;;;;;;;;;AC3OA,MAAMoJ,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AACA,MAAMsR,MAAM,GAAGtR,mBAAO,CAAC,sBAAD,CAAtB;;AACA,MAAMgpB,YAAY,GAAGhpB,mBAAO,CAAC,kFAAD,CAA5B;;AACA,MAAMmkB,UAAU,GAAGnkB,mBAAO,CAAC,8EAAD,CAA1B;;AAEA,MAAMsqB,kBAAkB,GAAG,IAAIlI,QAAQ,CAACE,MAAb,CAAoB;AAC7CiI,UAAQ,EAAE;AAAEhI,QAAI,EAAEC;AAAR,GADmC;AAE7CgI,SAAO,EAAE,CAACxB,YAAD,CAFoC;AAG7CrlB,OAAK,EAAE,CAACwgB,UAAD,CAHsC;AAI7C/T,WAAS,EAAE;AACTmS,QAAI,EAAEE,IADG;AAETvT,WAAO,EAAEoC,MAAM,CAACS,GAAP;AAFA;AAJkC,CAApB,CAA3B;AAUAuY,kBAAkB,CAAC5H,OAAnB,GAA6B;AAC3BpD,YAAU,EAAE,UAAUuK,YAAV,EAAwB;AAClC,QAAI7mB,MAAM,GAAG,IAAI,IAAJ,CAAS6mB,YAAT,CAAb;AACA,WAAO7mB,MAAM,CAACuS,IAAP,EAAP;AACD,GAJ0B;AAK3BkK,cAAY,EAAE,UAAUlU,EAAV,EAAcvI,MAAd,EAAsB;AAClC,WAAO,KAAKinB,SAAL,CAAe;AAAE3e,SAAG,EAAEC;AAAP,KAAf,EAA4B,EAAE,GAAGvI;AAAL,KAA5B,CAAP;AACD;AAP0B,CAA7B;AAUA,MAAMma,YAAY,GAAGiF,QAAQ,CAACe,KAAT,CAAe,cAAf,EAA+BmH,kBAA/B,CAArB;AAEApoB,MAAM,CAACC,OAAP,GAAiBgb,YAAjB,C;;;;;;;;;;;AC3BA,MAAMiF,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AACA,MAAMsR,MAAM,GAAGtR,mBAAO,CAAC,sBAAD,CAAtB;;AAEA,MAAMyqB,kBAAkB,GAAG,IAAIrI,QAAQ,CAACE,MAAb,CAAoB;AAC7C/c,MAAI,EAAE;AACJgd,QAAI,EAAEC;AADF,GADuC;AAI7C5e,MAAI,EAAE;AACJ2e,QAAI,EAAEC;AADF,GAJuC;AAO7ClV,QAAM,EAAE;AACNiV,QAAI,EAAEC;AADA,GAPqC;AAU7CjV,cAAY,EAAE;AACZgV,QAAI,EAAEC;AADM,GAV+B;AAa7Ctd,UAAQ,EAAE;AACRqd,QAAI,EAAEH,QAAQ,CAACE,MAAT,CAAgB9Q,KAAhB,CAAsBD,QADpB;AAERgT,OAAG,EAAE;AAFG,GAbmC;AAiB7C1Z,QAAM,EAAE;AACN0X,QAAI,EAAEmC,OADA;AAENxV,WAAO,EAAE;AAFH,GAjBqC;AAqB7Cwb,QAAM,EAAE;AACNnI,QAAI,EAAEC;AADA,GArBqC;AAwB7CmI,kBAAgB,EAAE;AAChBpI,QAAI,EAAEE;AADU,GAxB2B;AA2B7Chf,UAAQ,EAAE;AACR8e,QAAI,EAAEC;AADE,GA3BmC;AA8B7CpS,WAAS,EAAE;AACTmS,QAAI,EAAEE,IADG;AAETvT,WAAO,EAAEoC,MAAM,CAACS,GAAP;AAFA;AA9BkC,CAApB,CAA3B;AAoCA0Y,kBAAkB,CAAC/H,OAAnB,GAA6B;AAC3B5D,kBAAgB,EAAE,UAAU8L,aAAV,EAAyB;AACzC,QAAIC,UAAU,GAAG,IAAI,IAAJ,CAASD,aAAT,CAAjB;AACA,WAAOC,UAAU,CAACtV,IAAX,EAAP;AACD,GAJ0B;AAK3BG,wBAAsB,EAAE,UAAUnQ,IAAV,EAAgBmlB,MAAhB,EAAwB;AAC9C,WAAO,KAAKT,SAAL,CACL;AAAEa,UAAI,EAAE,CAAC;AAAEvlB,YAAI,EAAEA;AAAR,OAAD,EAAiB;AAAEsF,cAAM,EAAE;AAAV,OAAjB;AAAR,KADK,EAEL;AACEka,UAAI,EAAE;AACJ2F,cAAM,EAAEA,MADJ;AAEJ7f,cAAM,EAAE,KAFJ;AAGJ8f,wBAAgB,EAAErZ,MAAM,CAACS,GAAP;AAHd;AADR,KAFK,CAAP;AAUD,GAhB0B;AAiB3BuD,iBAAe,EAAE,UAAU/P,IAAV,EAAgB;AAC/B,WAAO,IAAIzE,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,aAAO,KAAKgiB,OAAL,CAAa;AAAE3d,YAAI,EAAEA,IAAR;AAAcsF,cAAM,EAAE;AAAtB,OAAb,EAA2CiY,IAA3C,CAAgD,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACtE,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN;AACT,YAAI,CAACJ,MAAL,EACEK,MAAM,CAAC;AAAEsE,iBAAO,EAAE,KAAX;AAAkBC,iBAAO,EAAE;AAA3B,SAAD,CAAN;AACF1E,eAAO,CAACF,MAAD,CAAP;AACD,OALM,CAAP;AAMD,KAPM,CAAP;AAQD;AA1B0B,CAA7B;AA6BA,MAAMwT,YAAY,GAAG+N,QAAQ,CAACe,KAAT,CAAe,cAAf,EAA+BsH,kBAA/B,CAArB;AAEAvoB,MAAM,CAACC,OAAP,GAAiBkS,YAAjB,C;;;;;;;;;;;ACtEA,MAAM+N,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AACA,MAAMsR,MAAM,GAAGtR,mBAAO,CAAC,sBAAD,CAAtB;;AACA,MAAM;AAAE4S;AAAF,IAA6B5S,mBAAO,CAAC,wDAAD,CAA1C;;AAEA,MAAM+qB,kBAAkB,GAAG,IAAI3I,QAAQ,CAACE,MAAb,CAAoB;AAC7ChV,QAAM,EAAE;AACNiV,QAAI,EAAEC;AADA,GADqC;AAI7CpJ,SAAO,EAAE,CAAC;AAAEmJ,QAAI,EAAEC;AAAR,GAAD,CAJoC;AAK7CpS,WAAS,EAAE;AACTmS,QAAI,EAAEE,IADG;AAETvT,WAAO,EAAEoC,MAAM,CAACS,GAAP;AAFA;AALkC,CAApB,CAA3B;AAWAgZ,kBAAkB,CAACrI,OAAnB,GAA6B;AAC3B7C,YAAU,EAAE,UAAUiK,YAAV,EAAwB;AAClC,QAAI9mB,MAAM,GAAG,IAAI,IAAJ,CAAS8mB,YAAT,CAAb;AACA,WAAO9mB,MAAM,CAACuS,IAAP,EAAP;AACD,GAJ0B;AAK3BwK,cAAY,EAAE,UAAUxU,EAAV,EAAc+B,MAAd,EAAsB;AAClC,WAAO,KAAK2c,SAAL,CAAe;AAAE3e,SAAG,EAAEC;AAAP,KAAf,EAA4B,EAAE,GAAG+B;AAAL,KAA5B,CAAP;AACD;AAP0B,CAA7B;AAUA,MAAM8P,YAAY,GAAGgF,QAAQ,CAACe,KAAT,CAAe,cAAf,EAA+B4H,kBAA/B,CAArB;AAEA7oB,MAAM,CAACC,OAAP,GAAiBib,YAAjB,C;;;;;;;;;;;AC3BA,MAAM9L,MAAM,GAAGtR,mBAAO,CAAC,sBAAD,CAAtB;;AACA,MAAMgrB,MAAM,GAAGhrB,mBAAO,CAAC,0BAAD,CAAtB;;AACA,MAAM8hB,GAAG,GAAG9hB,mBAAO,CAAC,kCAAD,CAAnB;;AACA,MAAMoiB,QAAQ,GAAGpiB,mBAAO,CAAC,0BAAD,CAAxB;;AACA,MAAMirB,MAAM,GAAGjrB,mBAAO,CAAC,wBAAD,CAAtB;;AACA,MAAMmpB,WAAW,GAAGnpB,mBAAO,CAAC,kEAAD,CAA3B;;AACA,MAAM0pB,eAAe,GAAG1pB,mBAAO,CAAC,0EAAD,CAA/B;;AACA,MAAMkoB,UAAU,GAAGloB,mBAAO,CAAC,gEAAD,CAA1B;;AAEA,MAAMkrB,UAAU,GAAG,IAAI9I,QAAQ,CAACE,MAAb,CAAoB;AACrC1e,MAAI,EAAE;AACJ2e,QAAI,EAAEC,MADF;AAEJ4B,YAAQ,EAAE;AAFN,GAD+B;AAKrCra,UAAQ,EAAE;AACRwY,QAAI,EAAEC;AADE,GAL2B;AAQrC7T,UAAQ,EAAE;AACR4T,QAAI,EAAEC;AADE,GAR2B;AAWrC5W,cAAY,EAAE;AACZ2W,QAAI,EAAEC,MADM;AAEZtT,WAAO,EAAE;AAFG,GAXuB;AAerCN,WAAS,EAAE;AACT2T,QAAI,EAAEC,MADG;AAET2I,UAAM,EAAE;AAFC,GAf0B;AAmBrClhB,OAAK,EAAE;AACLsY,QAAI,EAAEC;AADD,GAnB8B;AAsBrCxY,WAAS,EAAE;AACTuY,QAAI,EAAEC;AADG,GAtB0B;AAyBrC7N,UAAQ,EAAE;AACR4N,QAAI,EAAEC;AADE,GAzB2B;AA4BrClV,QAAM,EAAE;AACNiV,QAAI,EAAEC;AADA,GA5B6B;AA+BrCjV,cAAY,EAAE;AACZgV,QAAI,EAAEC;AADM,GA/BuB;AAkCrC4I,eAAa,EAAE;AACb7I,QAAI,EAAEkC,MADO;AAEbvV,WAAO,EAAE;AAFI,GAlCsB;AAsCrCmc,mBAAiB,EAAE;AACjB9I,QAAI,EAAEmC,OADW;AAEjBxV,WAAO,EAAE;AAFQ,GAtCkB;AA0CrCoc,eAAa,EAAE;AACb/I,QAAI,EAAEE;AADO,GA1CsB;AA6CrC8I,YAAU,EAAE;AACVhJ,QAAI,EAAEE,IADI;AAEVvT,WAAO,EAAEoC,MAAM,CAACS,GAAP;AAFC,GA7CyB;;AAiDrC;;;;;;;AAOAtO,UAAQ,EAAE;AACR8e,QAAI,EAAEC,MADE;AAERtT,WAAO,EAAE;AAFD,GAxD2B;AA4DrCuF,eAAa,EAAE;AACb8N,QAAI,EAAEmC;AADO,GA5DsB;AA+DrClW,YAAU,EAAE;AACV+T,QAAI,EAAEC;AADI,GA/DyB;AAkErC/T,UAAQ,EAAE;AACR8T,QAAI,EAAEC;AADE,GAlE2B;AAqErC9T,SAAO,EAAE;AACP6T,QAAI,EAAEC;AADC,GArE4B;AAwErC3X,QAAM,EAAE;AACN0X,QAAI,EAAEmC,OADA;AAENxV,WAAO,EAAE;AAFH,GAxE6B;AA4ErCkB,WAAS,EAAE;AACTmS,QAAI,EAAEE,IADG;AAETvT,WAAO,EAAEoC,MAAM,CAACS,GAAP;AAFA,GA5E0B;AAgFrC8V,OAAK,EAAE,CACL;AACEtF,QAAI,EAAEH,QAAQ,CAACE,MAAT,CAAgB9Q,KAAhB,CAAsBD,QAD9B;AAEEgT,OAAG,EAAE;AAFP,GADK,CAhF8B;AAsFrCvb,QAAM,EAAE;AACNuZ,QAAI,EAAEH,QAAQ,CAACE,MAAT,CAAgB9Q,KAAhB,CAAsBD,QADtB;AAENgT,OAAG,EAAE;AAFC,GAtF6B;AA0FrCiH,WAAS,EAAE,CAACrC,WAAD,CA1F0B;AA2FrCtc,YAAU,EAAE,CAAC6c,eAAD,CA3FyB;AA4FrC1I,aAAW,EAAE,CAACyD,MAAD,CA5FwB;AA6FrC5W,WAAS,EAAE;AACT0U,QAAI,EAAEH,QAAQ,CAACE,MAAT,CAAgB9Q,KAAhB,CAAsBD,QADnB;AAETgT,OAAG,EAAE;AAFI,GA7F0B;AAiGrCzQ,SAAO,EAAE;AACPyO,QAAI,EAAEmC,OADC;AAEPxV,WAAO,EAAE;AAFF,GAjG4B;AAqGrCuc,cAAY,EAAE;AACZlJ,QAAI,EAAEE;AADM,GArGuB;AAwGrCiJ,eAAa,EAAE;AACbnJ,QAAI,EAAEC;AADO,GAxGsB;AA2GrCrO,OAAK,EAAE,CAAC+T,UAAD;AA3G8B,CAApB,CAAnB;AA8GA;;;;AAGA,MAAMyD,UAAU,GAAGhnB,OAAO,CAACC,GAAR,CAAYgnB,UAA/B;;AAEA,IAAIC,WAAW,GAAG,MAAM;AACtB,MAAIC,YAAY,GACdnnB,OAAO,CAACC,GAAR,CAAYmnB,SAAZ,IAAyB,IAAzB,GAAgCpnB,OAAO,CAACC,GAAR,CAAYmnB,SAA5C,GAAwD,OAD1D;AAEA,SAAOza,MAAM,GAAG0a,GAAT,CAAaF,YAAb,EAA2B,SAA3B,EAAsCG,IAAtC,EAAP;AACD,CAJD;;AAMA,IAAIC,aAAa,GAAI3gB,EAAD,IAAQ;AAC1B;AACA,SAAO,EAAP;AACD,CAHD;;AAKA,IAAI4gB,cAAc,GAAI5gB,EAAD,IAAQ;AAC3B;AACA,SAAO,EAAP;AACD,CAHD;AAKA;;;;;;AAIA,IAAI6gB,gBAAgB,GAAG,UAAUC,OAAV,EAAmB;AACxC,MAAIC,WAAW,GAAGhb,MAAM,GAAG2a,IAAT,EAAlB;AACA,SAAOI,OAAO,GAAGC,WAAjB;AACD,CAHD;;AAKApB,UAAU,CAACqB,OAAX,GAAqB;AACnB7c,kBAAgB,EAAE,UAAU8c,SAAV,EAAqBld,WAAW,GAAG,KAAnC,EAA0C;AAC1D,QAAI+V,KAAK,GAAG,IAAZ;;AACA,QAAIoH,IAAI,GAAGxB,MAAM,CAACyB,MAAP,CAAcF,SAAd,CAAX;AAEA,QAAIG,YAAY,GAAGrd,WAAW,GAAG+V,KAAK,CAACzZ,YAAT,GAAwByZ,KAAK,CAAC1W,QAA5D;AAEA,WAAO,IAAI7N,OAAJ,CACL,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACnB,UAAImkB,KAAK,CAACgG,iBAAV,EAA6B;AAC3B,YAAIuB,IAAI,GAAG,KAAK,KAAKC,gBAAL,EAAhB;AACA,YAAID,IAAI,GAAG,CAAX,EACE1rB,MAAM,CAAC;AACLsE,iBAAO,EAAE,KADJ;AAELC,iBAAO,EAAG,gEAA+DmnB,IAAK;AAFzE,SAAD,CAAN,CADF,KAME,KAAKE,qBAAL,CAA2B,IAA3B,EAAiCnsB,IAAjC,CAAuCC,GAAD,IAAS;AAC7C,eAAK8O,gBAAL,CAAsB8c,SAAtB,EAAiC7rB,IAAjC,CACGE,MAAD,IAAYE,OAAO,CAACF,MAAD,CADrB,EAEGI,GAAD,IAASC,MAAM,CAACD,GAAD,CAFjB;AAID,SALD;AAMH,OAdD,MAeE+pB,MAAM,CAAC+B,OAAP,CAAeN,IAAf,EAAqBE,YAArB,EAAmChsB,IAAnC,CAAyCmQ,KAAD,IAAW;AACjD,YAAIA,KAAJ,EAAW;AACT;AACA,eAAKgc,qBAAL,CAA2B,IAA3B,EAAiCnsB,IAAjC,CACGC,GAAD,IAAS;AACPG,mBAAO,CAAC;AACNyE,qBAAO,EAAE,IADH;AAENC,qBAAO,EAAE;AAFH,aAAD,CAAP;AAID,WANH,EAOGxE,GAAD,IACEC,MAAM,CAAC;AAAEsE,mBAAO,EAAE,KAAX;AAAkBC,mBAAO,EAAE;AAA3B,WAAD,CARV;AAUD,SAZD,MAYO;AACL;AACA,eAAKqnB,qBAAL,GAA6BnsB,IAA7B,CACGC,GAAD,IAAS;AACPM,kBAAM,CAAC;AACLsE,qBAAO,EAAE,KADJ;AAELC,qBAAO,EAAE;AAFJ,aAAD,CAAN;AAID,WANH,EAOGxE,GAAD,IACEC,MAAM,CAAC;AACLsE,mBAAO,EAAE,KADJ;AAELC,mBAAO,EAAE;AAFJ,WAAD,CARV;AAaD;AACF,OA7BD;AA8BH,KA/CI,EAgDJxE,GAAD,IACEC,MAAM,CAAC;AACLsE,aAAO,EAAE,KADJ;AAELC,aAAO,EAAE;AAFJ,KAAD,CAjDH,CAAP;AAsDD,GA7DkB;AA8DnBonB,kBAAgB,EAAE,YAAY;AAC5B,QAAIvB,aAAa,GAAG,KAAKA,aAAL,GAAqB,KAAKA,aAA1B,GAA0Cha,MAAM,CAACS,GAAP,EAA9D;AACA,QAAIib,KAAK,GAAG1b,MAAM,CAACga,aAAD,CAAlB;AACA,QAAI2B,GAAG,GAAG3b,MAAM,CAACA,MAAM,CAACS,GAAP,EAAD,CAAhB;AACA,WAAOkb,GAAG,CAACC,IAAJ,CAASF,KAAT,EAAgB,SAAhB,CAAP;AACD,GAnEkB;AAoEnBF,uBAAqB,EAAE,UAAUK,KAAV,EAAiB;AACtC,QAAIA,KAAJ,EAAW;AACT,WAAK/B,aAAL,GAAqB,CAArB;AACA,WAAKC,iBAAL,GAAyB,KAAzB;AACA,WAAKC,aAAL,GAAqB,IAArB;AACD,KAJD,MAIO;AACL,UAAIF,aAAa,GAAG,KAAKA,aAAL,GAAqB,CAAzC;AACA,WAAKA,aAAL,GAAqBA,aAArB;AACA,WAAKC,iBAAL,GAAyBD,aAAa,GAAG,EAAzC;AACA,WAAKE,aAAL,GAAqBF,aAAa,GAAG,EAAhB,GAAqB9Z,MAAM,CAACS,GAAP,EAArB,GAAoC,IAAzD;AACD;;AACD,WAAO,IAAIjR,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,aAAO,KAAKqU,IAAL,GAAY5U,IAAZ,CACJC,GAAD,IAAS;AACPG,eAAO,CAACH,GAAD,CAAP;AACD,OAHI,EAIJK,GAAD,IAAS;AACPC,cAAM,CAACD,GAAD,CAAN;AACD,OANI,CAAP;AAQD,KATM,CAAP;AAUD,GAzFkB;AA0FnB0O,mBAAiB,EAAE,UAAUyd,OAAV,EAAmB;AACpC,QAAI5S,OAAO,GAAG;AACZjU,YAAM,EAAE,KAAK+E,GAAL,IAAYiD,SAAZ,GAAwB/H,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACyb,SAAL,CAAe,KAAK3W,GAApB,CAAX,CAAxB,GAA+D,EAD3D;AAEZ+hB,cAAQ,EAAG,GAAE,KAAKzpB,IAAK,IAAG,KAAKmG,QAAS,EAF5B;AAGZ6E,eAAS,EAAE,KAAKA,SAHJ;AAIZ5F,YAAM,EAAE,KAAKA,MAAL,IAAeokB,OAJX;AAKZ3pB,cAAQ,EAAE,KAAKA,QALH;AAMZ6pB,SAAG,EAAEzB,WAAW,EANJ;AAOZ0B,eAAS,EAAErB,aAAa,CAAC,KAAK5gB,GAAN,CAPZ;AAQZuB,gBAAU,EAAE,KAAKA,UARL;AASZS,YAAM,EAAE,KAAKA,MATD;AAUZC,kBAAY,EAAE,KAAKA,YAVP;AAWZM,eAAS,EAAE,KAAKA,SAXJ;AAYZiG,aAAO,EAAE,OAAO,KAAKA,OAAZ,KAAwB,WAAxB,GAAsC,KAAtC,GAA8C,KAAKA,OAZhD,CAaZ;;AAbY,KAAd;AAeA,QAAIrM,KAAK,GAAGqa,GAAG,CAAC0L,IAAJ,CAAShT,OAAT,EAAkBmR,UAAlB,CAAZ;AACA,WAAOlkB,KAAP;AACD,GA5GkB;AA6GnBgmB,aAAW,EAAE,UAAUlnB,MAAV,EAAkBshB,KAAlB,EAAyB;AACpC,QAAI,CAACN,KAAK,CAACC,OAAN,CAAcK,KAAd,CAAL,EAA2BA,KAAK,GAAG,CAACA,KAAD,CAAR;AAC3B,WAAO,KAAKnQ,MAAL,CACL;AACEpM,SAAG,EAAE/E;AADP,KADK,EAIL;AACEkhB,eAAS,EAAE;AACTI,aAAK,EAAE;AACLH,eAAK,EAAEG;AADF;AADE;AADb,KAJK,EAWL;AACEF,WAAK,EAAE;AADT,KAXK,CAAP;AAeD,GA9HkB;AA+HnB+F,gBAAc,EAAE,UAAUvgB,KAAV,EAAiB0a,KAAjB,EAAwB;AACtC,QAAI,CAACN,KAAK,CAACC,OAAN,CAAcra,KAAd,CAAL,EAA2BA,KAAK,GAAG,CAACA,KAAD,CAAR;AAC3B,QAAI,CAACoa,KAAK,CAACC,OAAN,CAAcK,KAAd,CAAL,EAA2BA,KAAK,GAAG,CAACA,KAAD,CAAR;AAE3B,WAAO,KAAKnQ,MAAL,CACL;AACEpM,SAAG,EAAE;AACHwc,WAAG,EAAE3a;AADF;AADP,KADK,EAML;AACE4a,cAAQ,EAAE;AACRF,aAAK,EAAEA;AADC;AADZ,KANK,EAWL;AACEF,WAAK,EAAE;AADT,KAXK,CAAP;AAeD,GAlJkB;AAmJnBgG,cAAY,EAAE,UAAUpnB,MAAV,EAAkB;AAC9B,WAAO,IAAIzF,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKuf,IAAL,CAAU;AACRnV,WAAG,EAAE/E;AADG,OAAV,EAGG0hB,QAHH,CAGY,OAHZ,EAIGnF,IAJH,CAIQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACrB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN;AACTF,eAAO,CAAC6sB,cAAc,CAAC/sB,MAAD,EAAS,OAAT,CAAf,CAAP;AACD,OAPH;AAQD,KATM,CAAP;AAUD;AA9JkB,CAArB;;AAiKA,MAAMgtB,iBAAiB,GAAG,CAACC,WAAD,EAAcC,OAAd,KAA0B;AAClD,MAAIC,UAAU,GAAGF,WAAW,CAAC9iB,GAAZ,CAAgB,CAAC0Q,IAAD,EAAO0F,CAAP,KAAa;AAC5C,QAAI6M,MAAM,GAAG;AACXrqB,UAAI,EAAE8X,IAAI,CAAC9X,IADA;AAEXwlB,aAAO,EAAE1N,IAAI,CAAC0N,OAFH;AAGX7f,aAAO,EAAEmS,IAAI,CAACnS,OAHH;AAIXwD,eAAS,EAAE2O,IAAI,CAAC3O,SAJL;AAKX0c,WAAK,EAAE/N,IAAI,CAAC+N,KAAL,IAAc;AALV,KAAb;AAOAsE,WAAO,CAACplB,OAAR,CAAiBulB,EAAD,IAAQ;AACtB,UAAIxS,IAAI,CAAC9X,IAAL,KAAcsqB,EAAE,CAACtqB,IAArB,EAA2B;AACzBqqB,cAAM,GAAG5sB,MAAM,CAAC4sB,MAAP,CACP,EADO,EAEP;AACErqB,cAAI,EAAE8X,IAAI,CAAC9X,IADb;AAEEwlB,iBAAO,EAAE1N,IAAI,CAAC0N,OAFhB;AAGE7f,iBAAO,EAAEmS,IAAI,CAACnS,OAHhB;AAIEwD,mBAAS,EAAE2O,IAAI,CAAC3O,SAJlB;AAKE0c,eAAK,EAAE/N,IAAI,CAAC+N,KAAL,IAAc,IAAI,CAL3B,CAK8B;;AAL9B,SAFO,EASPyE,EATO,CAAT;AAWD;AACF,KAdD;AAeA,WAAO,EAAE,GAAGD;AAAL,KAAP;AACD,GAxBgB,CAAjB;AA0BA,MAAIvjB,GAAG,GAAG,EAAV;AACAqjB,SAAO,CAACplB,OAAR,CAAiB+S,IAAD,IAAU;AACxB,QAAIsQ,GAAG,GAAG,IAAV;AACAgC,cAAU,CAACrlB,OAAX,CAAoBwlB,EAAD,IAAQ;AACzB,UAAIzS,IAAI,CAAC9X,IAAL,CAAU4R,IAAV,OAAqB2Y,EAAE,CAACvqB,IAAH,CAAQ4R,IAAR,EAAzB,EAAyCwW,GAAG,GAAG,KAAN;AAC1C,KAFD;AAGA,QAAIA,GAAJ,EAASthB,GAAG,CAAC9B,IAAJ,CAAS8S,IAAT;AACV,GAND;AAQA,MAAI0S,KAAK,GAAG,CAAC,GAAGJ,UAAJ,EAAgB,GAAGtjB,GAAnB,EAAwBuY,IAAxB,CAA6B,CAACvP,CAAD,EAAI2a,CAAJ,KAAUA,CAAC,CAAC5E,KAAF,GAAU/V,CAAC,CAAC+V,KAAnD,CAAZ;AACA,SAAO2E,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAeF,KAAK,CAAC7sB,MAAN,IAAgB,EAAhB,GAAqB6sB,KAAK,CAAC7sB,MAA3B,GAAoC,EAAnD,CAAP,CArCkD,CAqCa;AAChE,CAtCD;;AAwCA,MAAMgtB,eAAe,GAAG,CAACC,iBAAD,EAAoBC,YAApB,KAAqC;AAC3D,MAAIC,MAAM,GAAGF,iBAAiB,CAACxjB,GAAlB,CAAuB8B,CAAD,IACjCA,CAAC,CAACrF,KAAF,KAAYgnB,YAAY,CAAChnB,KAAzB,GAAiC,EAAE,GAAGgnB;AAAL,GAAjC,GAAuD,EAAE,GAAG3hB,CAAC,CAACyD;AAAP,GAD5C,CAAb;AAIA,MAAIoe,MAAM,GAAGD,MAAM,CAAC1gB,MAAP,CAAelB,CAAD,IAAOA,CAAC,CAACrF,KAAF,KAAYgnB,YAAY,CAAChnB,KAA9C,CAAb;AACA,SAAOknB,MAAM,CAACptB,MAAP,GAAgB,CAAhB,GAAoB,CAAC,GAAGmtB,MAAJ,CAApB,GAAkC,CAAC,GAAGA,MAAJ,EAAYD,YAAZ,CAAzC;AACD,CAPD;;AASA,MAAMG,mBAAmB,GAAIC,MAAD,IAAY;AACtC,MAAI1hB,KAAK,GAAG0hB,MAAM,CAAC7jB,GAAP,CAAYqC,CAAD,IAAO;AAC5B,QAAI;AAAE/B,SAAF;AAAO1H,UAAP;AAAamG,cAAb;AAAuBuD,YAAvB;AAA+BC,kBAA/B;AAA6C1C,YAA7C;AAAqDgC;AAArD,QACFQ,CAAC,CAACkD,IADJ;AAEA,WAAO;AAAEjF,SAAF;AAAO1H,UAAP;AAAamG,cAAb;AAAuBuD,YAAvB;AAA+BC,kBAA/B;AAA6C1C,YAA7C;AAAqDgC;AAArD,KAAP;AACD,GAJW,CAAZ;AAKA,SAAOM,KAAP;AACD,CAPD;;AASA+d,UAAU,CAACxI,OAAX,GAAqB;AACnB;;;AAGAnT,UAAQ,EAAE,UAAUuf,UAAV,EAAsB;AAC9B,WAAO,IAAIhuB,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AACX4H,YAAI,EAAE,CACJ;AACElc,mBAAS,EAAEkgB;AADb,SADI,EAIJ;AAAEjkB,gBAAM,EAAE;AAAV,SAJI;AADK,OAAb;AAOG;;;;;;;AAPH,OAcGiY,IAdH,CAcQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACrB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,iBAAO,CAACF,MAAD,CAAP;AACD;AACF,OAnBH;AAoBD,KArBM,CAAP;AAsBD,GA3BkB;AA4BnByP,qBAAmB,EAAE,UAAUye,WAAV,EAAuB;AAC1C,WAAO,IAAIjuB,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AACX1U,kBAAU,EAAEugB;AADD,OAAb,EAEGjM,IAFH,CAEQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACvB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,iBAAO,CAACF,MAAD,CAAP;AACD;AACF,OAPD;AAQD,KATM,CAAP;AAUD,GAvCkB;AAwCnB4P,mBAAiB,EAAE,UAAUue,SAAV,EAAqB;AACtC,WAAO,IAAIluB,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AACXzU,gBAAQ,EAAEugB;AADC,OAAb,EAEGlM,IAFH,CAEQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACvB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,iBAAO,CAACF,MAAD,CAAP;AACD;AACF,OAPD;AAQD,KATM,CAAP;AAUD,GAnDkB;AAoDnB8P,kBAAgB,EAAE,UAAUse,QAAV,EAAoB;AACpC,WAAO,IAAInuB,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AACXxU,eAAO,EAAEugB;AADE,OAAb,EAEGnM,IAFH,CAEQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACvB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,iBAAO,CAACF,MAAD,CAAP;AACD;AACF,OAPD;AAQD,KATM,CAAP;AAUD,GA/DkB;AAgEnBkV,aAAW,EAAE,UAAUxP,MAAV,EAAkB;AAC7B,WAAO,IAAIzF,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AAAE5X,WAAG,EAAE/E;AAAP,OAAb,EAA8Buc,IAA9B,CAAmC,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AAClD,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,iBAAO,CAACF,MAAM,CAAC2qB,SAAR,CAAP;AACD;AACF,OALD;AAMD,KAPM,CAAP;AAQD,GAzEkB;AA0EnBtV,aAAW,EAAE,UAAU3P,MAAV,EAAkB4P,IAAlB,EAAwB;AACnC,WAAO,IAAIrV,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AAAE5X,WAAG,EAAE/E;AAAP,OAAb,EAA8Buc,IAA9B,CAAmC,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AAClD,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN;AACT,YAAI,CAACJ,MAAL,EAAaK,MAAM,CAAC;AAAEuE,iBAAO,EAAE;AAAX,SAAD,CAAN;AACb,YAAIypB,UAAU,GAAGrB,iBAAiB,CAAChtB,MAAM,CAAC2qB,SAAP,IAAoB,EAArB,EAAyBrV,IAAzB,CAAlC;AACA,aAAKgZ,gBAAL,CACE;AAAE7jB,aAAG,EAAE/E;AAAP,SADF,EAEE;AAAEwe,cAAI,EAAE;AAAEyG,qBAAS,EAAE0D;AAAb;AAAR,SAFF,EAGE;AAAEE,aAAG,EAAE;AAAP,SAHF,EAIE,UAAUnuB,GAAV,EAAe8H,IAAf,EAAqB;AACnB,cAAI9H,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,mBAAO,CAACmuB,UAAD,CAAP;AACD;AACF,SATH;AAWAnuB,eAAO,CAACF,MAAD,CAAP;AACD,OAhBD;AAiBD,KAlBM,CAAP;AAmBD,GA9FkB;AA+FnBwV,gBAAc,EAAE,UAAU9P,MAAV,EAAkB4P,IAAlB,EAAwB;AACtC,WAAO,IAAIrV,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AAAE5X,WAAG,EAAE/E;AAAP,OAAb,EAA8Buc,IAA9B,CAAmC,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AAClD,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN;AACT,YAAI,CAACJ,MAAL,EAAaK,MAAM,CAAC;AAAEuE,iBAAO,EAAE;AAAX,SAAD,CAAN;AACb,YAAI4pB,UAAU,GAAG,CAACxuB,MAAM,CAAC2qB,SAAP,IAAoB,EAArB,EAAyBxd,MAAzB,CAAiC0N,IAAD,IAAU;AACzD,cAAIiT,MAAM,GAAGxY,IAAI,CAACnI,MAAL,CAAashB,CAAD,IAAOA,CAAC,CAAC1rB,IAAF,CAAO4R,IAAP,OAAkBkG,IAAI,CAAC9X,IAAL,CAAU4R,IAAV,EAArC,CAAb;AACA,iBAAOmZ,MAAM,CAACptB,MAAP,KAAkB,CAAzB;AACD,SAHgB,CAAjB;AAKA,aAAK4tB,gBAAL,CACE;AAAE7jB,aAAG,EAAE/E;AAAP,SADF,EAEE;AAAEwe,cAAI,EAAE;AAAEyG,qBAAS,EAAE6D;AAAb;AAAR,SAFF,EAGE;AAAED,aAAG,EAAE;AAAP,SAHF,EAIE,UAAUnuB,GAAV,EAAe8H,IAAf,EAAqB;AACnB,cAAI9H,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,mBAAO,CAACsuB,UAAD,CAAP;AACD;AACF,SATH;AAWAtuB,eAAO,CAACF,MAAD,CAAP;AACD,OApBD;AAqBD,KAtBM,CAAP;AAuBD,GAvHkB;AAwHnB0V,kBAAgB,EAAE,UAAUhQ,MAAV,EAAkBiQ,SAAlB,EAA6B;AAC7C,WAAO,IAAI1V,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AAAE5X,WAAG,EAAE/E;AAAP,OAAb,EAA8Buc,IAA9B,CAAmC,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AAClD,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN;AACT,YAAI,CAACJ,MAAL,EAAaK,MAAM,CAAC;AAAEuE,iBAAO,EAAE;AAAX,SAAD,CAAN;AACb,YAAI8pB,gBAAgB,GAAGhB,eAAe,CAAC1tB,MAAM,CAACgM,UAAR,EAAoB;AACxDpF,eAAK,EAAE+O;AADiD,SAApB,CAAtC;AAGA,aAAK2Y,gBAAL,CACE;AAAE7jB,aAAG,EAAE/E;AAAP,SADF,EAEE;AAAEwe,cAAI,EAAE;AAAElY,sBAAU,EAAE0iB;AAAd;AAAR,SAFF,EAGE;AAAEH,aAAG,EAAE;AAAP,SAHF,EAIE,UAAUnuB,GAAV,EAAe8H,IAAf,EAAqB;AACnB,cAAI9H,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,mBAAO,CAACwuB,gBAAD,CAAP;AACD;AACF,SATH;AAWD,OAjBD;AAkBD,KAnBM,CAAP;AAoBD,GA7IkB;AA8InBlkB,YAAU,EAAE,UAAUmkB,OAAV,EAAmB;AAC7B,WAAO,KAAKvF,SAAL,CACL;AACE3e,SAAG,EAAEkkB,OAAO,CAAClkB;AADf,KADK,EAIL;AACEyZ,UAAI,EAAE;AACJnhB,YAAI,EAAE4rB,OAAO,CAAC5rB,IADV;AAEJmG,gBAAQ,EAAEylB,OAAO,CAACzlB,QAFd;AAGJ4E,gBAAQ,EAAE6gB,OAAO,CAAC7gB,QAHd;AAIJ1E,aAAK,EAAEulB,OAAO,CAACvlB,KAJX;AAKJD,iBAAS,EAAEwlB,OAAO,CAACxlB,SALf;AAMJa,cAAM,EAAE2kB,OAAO,CAAC3kB,MANZ;AAOJpH,gBAAQ,EAAE+rB,OAAO,CAAC/rB,QAPd;AAQJ2M,iBAAS,EAAEkB,MAAM,CAACS,GAAP,EARP;AASJlE,iBAAS,EAAE2hB,OAAO,CAAC3hB;AATf;AADR,KAJK,CAAP;AAkBD,GAjKkB;AAkKnB6I,gBAAc,EAAE,UAAUnQ,MAAV,EAAkB;AAChC,WAAO,KAAKkpB,SAAL,CAAe;AAAEnkB,SAAG,EAAE/E;AAAP,KAAf,CAAP;AACD,GApKkB;AAqKnBiO,UAAQ,EAAE,UAAUgb,OAAV,EAAmB;AAC3B,QAAIzmB,IAAI,GAAG,IAAI,IAAJ,CAASymB,OAAT,CAAX;AACA,WAAOzmB,IAAI,CAACwM,IAAL,EAAP;AACD,GAxKkB;AAyKnBjP,mBAAiB,EAAE,UAAUC,MAAV,EAAkBoO,QAAlB,EAA4B;AAC7C,WAAO,KAAKsV,SAAL,CAAe;AAAE3e,SAAG,EAAE/E;AAAP,KAAf,EAAgC;AAAEwe,UAAI,EAAE;AAAEpQ,gBAAQ,EAAEA;AAAZ;AAAR,KAAhC,CAAP;AACD,GA3KkB;AA4KnBgD,gBAAc,EAAE,UAAUpR,MAAV,EAAkB9C,QAAlB,EAA4B;AAC1C,WAAO,KAAKwmB,SAAL,CAAe;AAAE3e,SAAG,EAAE/E;AAAP,KAAf,EAAgC;AAAEwe,UAAI,EAAE;AAAEthB,gBAAQ,EAAEA;AAAZ;AAAR,KAAhC,CAAP;AACD,GA9KkB;AA+KnBmU,mBAAiB,EAAE,UAAUrR,MAAV,EAAkBsR,OAAlB,EAA2B;AAC5C,WAAO,KAAKoS,SAAL,CAAe;AAAE3e,SAAG,EAAE/E;AAAP,KAAf,EAAgC;AAAEwe,UAAI,EAAE;AAAEla,cAAM,EAAEgN;AAAV;AAAR,KAAhC,CAAP;AACD,GAjLkB;AAkLnB7D,eAAa,EAAE,UAAUzN,MAAV,EAAkBuN,OAAlB,EAA2B;AACxC,WAAO,KAAKmW,SAAL,CAAe;AAAE3e,SAAG,EAAE/E;AAAP,KAAf,EAAgC;AAAEwe,UAAI,EAAE;AAAEjR,eAAO,EAAEA;AAAX;AAAR,KAAhC,CAAP;AACD,GApLkB;AAqLnBkE,aAAW,EAAE,UAAUzR,MAAV,EAAkBmpB,IAAlB,EAAwB;AACnC,WAAO,IAAI5uB,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AAAE5X,WAAG,EAAE/E;AAAP,OAAb,EAA8Buc,IAA9B,CAAmC,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AAClD,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK,IAAI,CAACJ,MAAL,EAAaK,MAAM,CAAC;AAAEuE,iBAAO,EAAE;AAAX,SAAD,CAAN,CAAb,KACA;AACH,cAAIkqB,YAAY,GAAG9uB,MAAM,CAACsT,KAAP,IAAgB,EAAnC;AACA,cAAIyb,WAAW,GAAGD,YAAY,CAACzb,IAAb,CAAmBwH,IAAD,IAAUA,IAAI,CAACzD,IAAL,KAAcyX,IAA1C,IACdC,YADc,GAEd,CAAC,GAAGA,YAAJ,EAAkB;AAAE1X,gBAAI,EAAEyX;AAAR,WAAlB,CAFJ;AAIA,eAAKP,gBAAL,CACE;AAAE7jB,eAAG,EAAE/E;AAAP,WADF,EAEE;AAAEwe,gBAAI,EAAE;AAAE5Q,mBAAK,EAAE,CAAC,GAAGyb,WAAJ;AAAT;AAAR,WAFF,EAGE;AAAER,eAAG,EAAE;AAAP,WAHF,EAIE,UAAUnuB,GAAV,EAAe8H,IAAf,EAAqB;AACnB,gBAAI9H,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,qBAAO,CAAC;AAAEwF,sBAAM,EAAEwC,IAAI,CAACuC,GAAf;AAAoB6I,qBAAK,EAAEpL,IAAI,CAACoL;AAAhC,eAAD,CAAP;AACD;AACF,WATH;AAWD;AACF,OArBD;AAsBD,KAvBM,CAAP;AAwBD,GA9MkB;AA+MnB+D,gBAAc,EAAE,UAAU3R,MAAV,EAAkBmpB,IAAlB,EAAwB;AACtC,WAAO,IAAI5uB,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AAAE5X,WAAG,EAAE/E;AAAP,OAAb,EAA8Buc,IAA9B,CAAmC,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AAClD,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK,IAAI,CAACJ,MAAL,EAAaK,MAAM,CAAC;AAAEuE,iBAAO,EAAE;AAAX,SAAD,CAAN,CAAb,KACA;AACH,cAAIkqB,YAAY,GAAG9uB,MAAM,CAACsT,KAAP,IAAgB,EAAnC;AACA,cAAI0b,aAAa,GAAGF,YAAY,CAAC3hB,MAAb,CAAqB0N,IAAD,IAAUA,IAAI,CAACzD,IAAL,KAAcyX,IAA5C,CAApB;AAEA,eAAKP,gBAAL,CACE;AAAE7jB,eAAG,EAAE/E;AAAP,WADF,EAEE;AAAEwe,gBAAI,EAAE;AAAE5Q,mBAAK,EAAE,CAAC,GAAG0b,aAAJ;AAAT;AAAR,WAFF,EAGE;AAAET,eAAG,EAAE;AAAP,WAHF,EAIE,UAAUnuB,GAAV,EAAe8H,IAAf,EAAqB;AACnB,gBAAI9H,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,qBAAO,CAAC;AAAEwF,sBAAM,EAAEwC,IAAI,CAACuC,GAAf;AAAoB6I,qBAAK,EAAEpL,IAAI,CAACoL;AAAhC,eAAD,CAAP;AACD;AACF,WATH;AAWD;AACF,OAnBD;AAoBD,KArBM,CAAP;AAsBD,GAtOkB;;AAuOnB;;;AAGAvD,cAAY,EAAE,UAAUkf,MAAV,EAAkB;AAC9B,WAAO,IAAIhvB,OAAJ,CAAY,UAAUC,OAAV,EAAmBG,MAAnB,EAA2B;AAC5C,UAAI2P,OAAO,GAAG,KAAd;;AACA,UAAI;AACFiR,WAAG,CAACiO,MAAJ,CAAWD,MAAX,EAAmBnE,UAAnB,EAA+B,UAAU1qB,GAAV,EAAe+uB,OAAf,EAAwB;AACrD,cAAIA,OAAJ,EAAa;AACX,gBAAI5D,gBAAgB,CAAC4D,OAAO,CAAC1C,GAAT,CAApB,EAAmC;AACjCzc,qBAAO,GAAG,IAAV;AACD;AACF;;AACD9P,iBAAO,CAAC8P,OAAD,CAAP;AACD,SAPD;AAQD,OATD,CASE,OAAO5P,GAAP,EAAY;AACZyB,eAAO,CAACuD,GAAR,CAAYhF,GAAZ;AACAC,cAAM,CAAC,KAAD,CAAN;AACD;AACF,KAfM,CAAP;AAgBD,GA3PkB;;AA4PnB;;;;AAIAqZ,iBAAe,EAAE,UAAUuV,MAAV,EAAkB;AACjC,WAAO,IAAIhvB,OAAJ,CAAY,UAAUC,OAAV,EAAmBG,MAAnB,EAA2B;AAC5C,UAAI;AACF4gB,WAAG,CAACiO,MAAJ,CAAWD,MAAX,EAAmBnE,UAAnB,EAA+B,UAAU1qB,GAAV,EAAe+uB,OAAf,EAAwB;AACrDjvB,iBAAO,CAACivB,OAAD,CAAP;AACD,SAFD;AAGD,OAJD,CAIE,OAAO/uB,GAAP,EAAY;AACZC,cAAM,CAACD,GAAD,CAAN;AACD;AACF,KARM,CAAP;AASD,GA1QkB;AA2QnBof,iBAAe,EAAE,UAAUmM,SAAV,EAAqB;AACpC,WAAO,IAAI1rB,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,UAAIurB,IAAI,GAAGxB,MAAM,CAACyB,MAAP,CAAcF,SAAd,CAAX;AACA,UAAIyD,UAAU,GAAG,EAAjB;AACAjF,YAAM,CAACkF,OAAP,CAAeD,UAAf,EAA2B,CAAChvB,GAAD,EAAMkvB,IAAN,KAAe;AACxCnF,cAAM,CAACxK,IAAP,CAAYiM,IAAZ,EAAkB0D,IAAlB,EAAwB,CAAClvB,GAAD,EAAMuf,IAAN,KAAe;AACrC,cAAI,CAACvf,GAAL,EAAUF,OAAO,CAAC;AAAEyf;AAAF,WAAD,CAAP,CAAV,KACKtf,MAAM,CAACD,GAAD,CAAN;AACN,SAHD;AAID,OALD;AAMD,KATM,CAAP;AAUD,GAtRkB;AAuRnB6U,aAAW,EAAE,UAAUvK,EAAV,EAAc;AACzB,WAAO,IAAIzK,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AACX5X,WAAG,EAAEC;AADM,OAAb,EAGG0c,QAHH,CAGY,QAHZ,EAGsB,MAHtB,EAIGnF,IAJH,CAIQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACrB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,iBAAO,CAACF,MAAD,CAAP;AACD;AACF,OATH;AAUD,KAXM,CAAP;AAYD,GApSkB;AAqSnBsL,iBAAe,EAAE,UAAUZ,EAAV,EAAc;AAC7B,WAAO,IAAIzK,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AACX5X,WAAG,EAAEC;AADM,OAAb,EAGG0c,QAHH,CAGY,QAHZ,EAGsB,MAHtB,EAIGpF,IAJH,GAKGC,IALH,CAKQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACrB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,iBAAO,CAACF,MAAD,CAAP;AACD;AACF,OAVH;AAWD,KAZM,CAAP;AAaD,GAnTkB;AAoTnByR,kBAAgB,EAAE,UAAUpN,QAAV,EAAoB;AACpC,WAAO,IAAIpE,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKuf,IAAL,CAAU;AAAEzX,cAAM,EAAE9D;AAAV,OAAV,EACG2d,IADH,GAEGuN,MAFH,CAEU;AACN9kB,WAAG,EAAE,CADC;AAEN1H,YAAI,EAAE,CAFA;AAGNmG,gBAAQ,EAAE,CAHJ;AAINuD,cAAM,EAAE,CAJF;AAKNC,oBAAY,EAAE,CALR;AAMNuG,eAAO,EAAE,CANH;AAONjJ,cAAM,EAAE,CAPF;AAQNpH,gBAAQ,EAAE,CARJ;AASN+K,kBAAU,EAAE,CATN;AAUNE,eAAO,EAAE,CAVH;AAWND,gBAAQ,EAAE,EAXJ;AAYNxE,aAAK,EAAE,EAZD;AAaN2E,iBAAS,EAAE,EAbL;AAcNf,iBAAS,EAAE,EAdL;AAeNsG,aAAK,EAAE;AAfD,OAFV,EAmBG2O,IAnBH,CAmBQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACrB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,iBAAO,CAACF,MAAD,CAAP;AACD;AACF,OAxBH;AAyBD,KA1BM,CAAP;AA2BD,GAhVkB;AAiVnB+R,wBAAsB,EAAE,UAAU1N,QAAV,EAAoBoI,MAApB,EAA4B;AAClD,WAAO,IAAIxM,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKuf,IAAL,CAAU;AAAEqK,YAAI,EAAE,CAAC;AAAE9hB,gBAAM,EAAE9D;AAAV,SAAD,EAAuB;AAAEoI,gBAAM,EAAEA;AAAV,SAAvB;AAAR,OAAV,EAAgEwV,IAAhE,CACE,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACf,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,iBAAO,CAAC6tB,mBAAmB,CAAC/tB,MAAD,CAApB,CAAP;AACD;AACF,OANH;AAQD,KATM,CAAP;AAUD,GA5VkB;AA6VnB4V,mBAAiB,EAAE,UAAUvR,QAAV,EAAoB2I,SAApB,EAA+B;AAChD,WAAO,IAAI/M,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKuf,IAAL,CAAU;AACRqK,YAAI,EAAE,CAAC;AAAE9hB,gBAAM,EAAE9D;AAAV,SAAD,EAAuB;AAAE2I,mBAAS,EAAEA;AAAb,SAAvB;AADE,OAAV,EAEGiV,IAFH,CAEQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACvB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,iBAAO,CAAC6tB,mBAAmB,CAAC/tB,MAAD,CAApB,CAAP;AACD;AACF,OAPD;AAQD,KATM,CAAP;AAUD,GAxWkB;AAyWnB2gB,iBAAe,EAAE,UAAUjb,MAAV,EAAkBkR,YAAlB,EAAgC;AAC/C,WAAO,IAAI3W,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AAAE5X,WAAG,EAAE/E;AAAP,OAAb,EACGsc,IADH,GAEGC,IAFH,CAEQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACrB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN;AACT,YAAI4f,KAAK,GAAGhgB,MAAM,CAACmgB,WAAP,IAAsB,EAAlC;AACAH,aAAK,GAAG,CAAC,GAAGA,KAAJ,EAAWpJ,YAAX,CAAR;AACA,aAAK0X,gBAAL,CACE;AAAE7jB,aAAG,EAAE/E;AAAP,SADF,EAEE;AAAEwe,cAAI,EAAE;AAAE/D,uBAAW,EAAEH;AAAf;AAAR,SAFF,EAGE;AAAEuO,aAAG,EAAE;AAAP,SAHF,EAIE,UAAUnuB,GAAV,EAAeovB,KAAf,EAAsB;AACpB,cAAIpvB,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,mBAAO,CAAC;AAAEugB,oBAAM,EAAE,IAAV;AAAgB7J,0BAAY,EAAEoJ;AAA9B,aAAD,CAAP;AACD;AACF,SATH;AAWD,OAjBH;AAkBD,KAnBM,CAAP;AAoBD,GA9XkB;AA+XnB/J,gBAAc,EAAE,UAAU/N,IAAV,EAAgB4F,QAAhB,EAA0B;AACxC,WAAO,IAAI7N,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AACXtU,iBAAS,EAAE7F;AADA,OAAb,EAEG+Z,IAFH,CAEQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACvB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK,IACH,CAACJ,MAAD,IACAA,MAAM,CAAC+K,YAAP,IAAuB,EADvB,IAEA/K,MAAM,CAAC+K,YAAP,IAAuB,IAHpB,EAIH;AACA7K,iBAAO,CAAC,KAAD,CAAP;AACD,SANI,MAME;AACLiqB,gBAAM,CAAC+B,OAAP,CAAepe,QAAf,EAAyB9N,MAAM,CAAC+K,YAAhC,EAA8CjL,IAA9C,CAAoDmQ,KAAD,IAAW;AAC5D,gBAAIA,KAAJ,EAAW;AACT/P,qBAAO,CAAC,IAAD,CAAP;AACD,aAFD,MAEO;AACLA,qBAAO,CAAC,KAAD,CAAP;AACD;AACF,WAND;AAOD;AACF,OAnBD;AAoBD,KArBM,CAAP;AAsBD,GAtZkB;AAuZnBmW,gBAAc,EAAE,UAAU3Q,MAAV,EAAkBoI,QAAlB,EAA4B/C,YAA5B,EAA0C;AACxD,WAAO,IAAI9K,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AACX5X,WAAG,EAAE/E;AADM,OAAb,EAEGuc,IAFH,CAEQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACvB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK,IAAIJ,MAAM,CAAC+K,YAAP,IAAuB,EAA3B,EAA+B;AAClC7K,iBAAO,CAAC,KAAD,CAAP;AACD,SAFI,MAEE;AACLiqB,gBAAM,CAAC+B,OAAP,CAAenhB,YAAf,EAA6B/K,MAAM,CAAC+K,YAApC,EAAkDjL,IAAlD,CAAwDmQ,KAAD,IAAW;AAChE,gBAAIA,KAAJ,EAAW;AACT,kBAAIwf,YAAY,GAAG,EAAnB;AAEA,mBAAKjQ,eAAL,CAAqB4K,MAAM,CAACsF,MAAP,CAAc5hB,QAAd,CAArB,EAA8ChO,IAA9C,CACG2f,UAAD,IAAgB;AACdgQ,4BAAY,GAAGhQ,UAAU,CAACE,IAA1B;AAEA,qBAAK2O,gBAAL,CACE;AAAE7jB,qBAAG,EAAE/E;AAAP,iBADF,EAEE;AAAEwe,sBAAI,EAAE;AAAEnZ,gCAAY,EAAE,IAAhB;AAAsB+C,4BAAQ,EAAE2hB;AAAhC;AAAR,iBAFF,EAGE;AAAElB,qBAAG,EAAE;AAAP,iBAHF,EAIE,UAAUnuB,GAAV,EAAe8H,IAAf,EAAqB;AACnB,sBAAI9H,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,2BAAO,CAAC;AACNyE,6BAAO,EAAE,IADH;AAENC,6BAAO,EACL;AAHI,qBAAD,CAAP;AAKD;AACF,iBAbH;AAeD,eAnBH;AAqBD,aAxBD,MAwBO;AACLvE,oBAAM,CAAC;AACLsE,uBAAO,EAAE,KADJ;AAELC,uBAAO,EAAE;AAFJ,eAAD,CAAN;AAID;AACF,WA/BD;AAgCD;AACF,OAxCD;AAyCD,KA1CM,CAAP;AA2CD,GAnckB;AAocnBuP,oBAAkB,EAAE,UAAU/K,KAAV,EAAiB;AACnC,WAAO,IAAInJ,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AACXjZ,aAAK,EAAEA;AADI,OAAb,EAEG6Y,IAFH,CAEQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACvB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK,IAAI,CAACJ,MAAL,EAAa;AAChBK,gBAAM,CAAC;AACLuE,mBAAO,EAAE;AADJ,WAAD,CAAN;AAGD,SAJI,MAIE;AACL,cAAImG,YAAY,GACd+S,IAAI,CAACC,MAAL,GAAcjd,QAAd,CAAuB,EAAvB,EAA2ByF,SAA3B,CAAqC,CAArC,EAAwC,CAAxC,EAA2CyX,WAA3C,KACAF,IAAI,CAACC,MAAL,GAAcjd,QAAd,CAAuB,EAAvB,EAA2ByF,SAA3B,CAAqC,CAArC,EAAwC,CAAxC,EAA2CyX,WAA3C,EAFF;AAIA,cAAI2R,gBAAgB,GAAG,EAAvB;AAEA,eAAKnQ,eAAL,CAAqB4K,MAAM,CAACsF,MAAP,CAAc3kB,YAAd,CAArB,EAAkDjL,IAAlD,CACG2f,UAAD,IAAgB;AACdkQ,4BAAgB,GAAGlQ,UAAU,CAACE,IAA9B;AAEA,iBAAK2O,gBAAL,CACE;AACEllB,mBAAK,EAAEA;AADT,aADF,EAIE;AACE8a,kBAAI,EAAE;AACJnZ,4BAAY,EAAE4kB;AADV;AADR,aAJF,EASE;AACEpB,iBAAG,EAAE;AADP,aATF,EAYE,UAAUnuB,GAAV,EAAe;AACb,kBAAIA,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,uBAAO,CAAC6K,YAAD,CAAP;AACD;AACF,aAjBH;AAmBA7K,mBAAO,CAAC6K,YAAD,CAAP;AACD,WAxBH;AA0BD;AACF,OA1CD;AA2CD,KA5CM,CAAP;AA6CD,GAlfkB;AAmfnBQ,eAAa,EAAE,UAAUlH,QAAV,EAAoB;AACjC,WAAO,KAAKub,IAAL,CAAU;AAAEzX,YAAM,EAAE9D,QAAV;AAAoBzB,cAAQ,EAAE;AAA9B,KAAV,EAAyDof,IAAzD,EAAP;AACD,GArfkB;;AAsfnB/K,oBAAkB,CAACvR,MAAD,EAAS;AACzB,WAAO,IAAIzF,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AAAE5X,WAAG,EAAE/E;AAAP,OAAb,EACGsc,IADH,GAEGC,IAFH,CAEQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACrB,YAAII,GAAG,IAAI,CAACJ,MAAZ,EAAoBK,MAAM,CAACD,GAAG,IAAI,gBAAR,CAAN,CAApB,KACK;AACHF,iBAAO,CAAC;AACNgX,qBAAS,EACP,OAAOlX,MAAM,CAACiT,OAAd,KAA0B,WAA1B,GAAwC,KAAxC,GAAgDjT,MAAM,CAACiT;AAFnD,WAAD,CAAP;AAID;AACF,OAVH;AAWD,KAZM,CAAP;AAaD,GApgBkB;;AAqgBnBuD,uBAAqB,EAAE,UAAU9Q,MAAV,EAAkBoI,QAAlB,EAA4B4I,WAA5B,EAAyC;AAC9D,WAAO,IAAIzW,OAAJ,CAAY,CAACC,OAAD,EAAUG,MAAV,KAAqB;AACtC,WAAKgiB,OAAL,CAAa;AAAE5X,WAAG,EAAE/E;AAAP,OAAb,EACGsc,IADH,GAEGC,IAFH,CAEQ,CAAC7hB,GAAD,EAAMJ,MAAN,KAAiB;AACrB,YAAII,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACH+pB,gBAAM,CAAC+B,OAAP,CAAepe,QAAf,EAAyB9N,MAAM,CAAC8N,QAAhC,EAA0ChO,IAA1C,CAAgDmQ,KAAD,IAAW;AACxD,gBAAIA,KAAJ,EAAW;AACT,mBAAKuP,eAAL,CAAqB4K,MAAM,CAACsF,MAAP,CAAchZ,WAAd,CAArB,EACG5W,IADH,CACS2f,UAAD,IAAgB;AACpB,qBAAK6O,gBAAL,CACE;AAAE7jB,qBAAG,EAAE/E;AAAP,iBADF,EAEE;AACEwe,sBAAI,EAAE;AAAEnZ,gCAAY,EAAE,IAAhB;AAAsB+C,4BAAQ,EAAE2R,UAAU,CAACE;AAA3C;AADR,iBAFF,EAKE;AAAE4O,qBAAG,EAAE;AAAP,iBALF,EAME,UAAUnuB,GAAV,EAAe8H,IAAf,EAAqB;AACnB,sBAAI9H,GAAJ,EAASC,MAAM,CAACD,GAAD,CAAN,CAAT,KACK;AACHF,2BAAO,CAAC;AACNyE,6BAAO,EAAE,IADH;AAENC,6BAAO,EACL;AAHI,qBAAD,CAAP;AAKD;AACF,iBAfH;AAiBD,eAnBH,EAoBGzE,KApBH,CAoBUC,GAAD,IAAS;AACdC,sBAAM,CAAC;AACLsE,yBAAO,EAAE,KADJ;AAELC,yBAAO,EAAE;AAFJ,iBAAD,CAAN;AAID,eAzBH;AA0BD,aA3BD,MA2BO;AACLvE,oBAAM,CAAC;AACLsE,uBAAO,EAAE,KADJ;AAELC,uBAAO,EAAE;AAFJ,eAAD,CAAN;AAID;AACF,WAlCD;AAmCD;AACF,OAzCH;AA0CD,KA3CM,CAAP;AA4CD;AAljBkB,CAArB;AAqjBA,MAAMI,IAAI,GAAGuc,QAAQ,CAACe,KAAT,CAAe,MAAf,EAAuB+H,UAAvB,CAAb;AAEAhpB,MAAM,CAACC,OAAP,GAAiB0D,IAAjB,C;;;;;;;;;;;ACv6BA,MAAM3C,MAAM,GAAGlD,mBAAO,CAAC,wBAAD,CAAP,CAAmBywB,MAAnB,EAAf;;AAEA,MAAMC,QAAQ,GAAG1wB,mBAAO,CAAC,8DAAD,CAAxB;;AAEA,MAAM2D,KAAK,GAAG3D,mBAAO,CAAC,wDAAD,CAArB;;AAEA,MAAM2wB,WAAW,GAAG3wB,mBAAO,CAAC,oEAAD,CAA3B;;AAEA,MAAM4wB,MAAM,GAAG5wB,mBAAO,CAAC,0DAAD,CAAtB;;AAEA,MAAM6wB,WAAW,GAAG7wB,mBAAO,CAAC,kEAAD,CAA3B;;AAEA,MAAM8wB,MAAM,GAAG9wB,mBAAO,CAAC,sBAAD,CAAtB;;AAEA,MAAMgJ,MAAM,GAAGhJ,mBAAO,CAAC,0DAAD,CAAtB;;AAEA,MAAM+wB,gBAAgB,GAAG/wB,mBAAO,CAAC,8EAAD,CAAhC;;AAEA,MAAMgxB,SAAS,GAAGhxB,mBAAO,CAAC,gEAAD,CAAzB;;AAEA,MAAMixB,MAAM,GAAGjxB,mBAAO,CAAC,0DAAD,CAAtB;;AAEA,IAAIkxB,MAAM,GAAGJ,MAAM,CAAC;AAAEK,MAAI,EAAE;AAAR,CAAD,CAAnB;AAEAjuB,MAAM,CAACrB,IAAP,CAAY,gBAAZ,EAA8B6uB,QAAQ,CAAC5gB,SAAvC;AAEA5M,MAAM,CAACrB,IAAP,CAAY,mBAAZ,EAAiC6uB,QAAQ,CAAC9f,YAA1C;AAEA1N,MAAM,CAACrB,IAAP,CAAY,wBAAZ,EAAsC6uB,QAAQ,CAAC3f,iBAA/C;AAEA7N,MAAM,CAACrB,IAAP,CAAY,aAAZ,EAA2B6uB,QAAQ,CAACzf,MAApC;AAEA/N,MAAM,CAAC/B,GAAP,CAAW,mBAAX,EAAgCuvB,QAAQ,CAACrgB,oBAAzC;AAEAnN,MAAM,CAAC/B,GAAP,CAAW,uBAAX,EAAoCuvB,QAAQ,CAAClgB,kBAA7C;AAEAtN,MAAM,CAAC/B,GAAP,CAAW,sBAAX,EAAmCuvB,QAAQ,CAAChgB,iBAA5C;AAEAxN,MAAM,CAACrB,IAAP,CAAY,aAAZ,EAA2B+uB,MAAM,CAACtiB,MAAlC;AAEApL,MAAM,CAACrB,IAAP,CAAY,yBAAZ,EAAuC6uB,QAAQ,CAAC7gB,YAAhD,E,CAEA;;AACA,MAAMuhB,SAAS,GAAGpxB,mBAAO,CAAC,gEAAD,CAAzB;;AAEAkD,MAAM,CAACrB,IAAP,CAAY,qBAAZ,EAAmCuvB,SAAS,CAAClc,gBAA7C;AACAhS,MAAM,CAAC/B,GAAP,CAAW,qBAAX,EAAkCiwB,SAAS,CAACzb,aAA5C;AACAzS,MAAM,CAAC/B,GAAP,CAAW,WAAX,EAAwBiwB,SAAS,CAACxb,WAAlC;AACA1S,MAAM,CAAC/B,GAAP,CAAW,aAAX,EAA0BiwB,SAAS,CAACtb,WAApC;AACA5S,MAAM,CAAC/B,GAAP,CAAW,yBAAX,EAAsCiwB,SAAS,CAACrb,WAAhD;AACA7S,MAAM,CAACrB,IAAP,CAAY,4BAAZ,EAA0CuvB,SAAS,CAAClb,WAApD;AACAhT,MAAM,CAACrB,IAAP,CAAY,+BAAZ,EAA6CuvB,SAAS,CAAC/a,cAAvD;AACAnT,MAAM,CAACrB,IAAP,CAAY,gCAAZ,EAA8CuvB,SAAS,CAAC7a,gBAAxD;AACArT,MAAM,CAAC/B,GAAP,CAAW,iCAAX,EAA8CiwB,SAAS,CAAC3a,iBAAxD;AACAvT,MAAM,CAACrB,IAAP,CAAY,6BAAZ,EAA2CuvB,SAAS,CAAC9qB,iBAArD;AACApD,MAAM,CAAC/B,GAAP,CAAW,kCAAX,EAA+CiwB,SAAS,CAACxa,kBAAzD;AACA1T,MAAM,CAAC/B,GAAP,CAAW,8BAAX,EAA2CiwB,SAAS,CAACta,cAArD;AACA5T,MAAM,CAACrB,IAAP,CAAY,0BAAZ,EAAwCuvB,SAAS,CAACzZ,cAAlD;AACAzU,MAAM,CAACrB,IAAP,CAAY,6BAAZ,EAA2CuvB,SAAS,CAACxZ,iBAArD;AACA1U,MAAM,CAAC/B,GAAP,CAAW,kCAAX,EAA+CiwB,SAAS,CAACtZ,kBAAzD;AACA5U,MAAM,CAACrB,IAAP,CAAY,6BAAZ,EAA2CuvB,SAAS,CAACpd,aAArD;AAEA9Q,MAAM,CAACrB,IAAP,CAAY,8BAAZ,EAA4CuvB,SAAS,CAACla,cAAtD;AACAhU,MAAM,CAACrB,IAAP,CACE,qCADF,EAEEuvB,SAAS,CAAC/Z,qBAFZ;AAIAnU,MAAM,CAACrB,IAAP,CAAY,6BAAZ,EAA2CuvB,SAAS,CAAC5Z,aAArD;AACAtU,MAAM,CAACrB,IAAP,CAAY,2BAAZ,EAAyCuvB,SAAS,CAACpZ,WAAnD;AACA9U,MAAM,CAACrB,IAAP,CAAY,8BAAZ,EAA4CuvB,SAAS,CAAClZ,cAAtD;AACAhV,MAAM,CAACrB,IAAP,CAAY,qBAAZ,EAAmCuvB,SAAS,CAACtiB,cAA7C;AACA5L,MAAM,CAACrB,IAAP,CAAY,uBAAZ,EAAqCuvB,SAAS,CAACviB,gBAA/C;AACA3L,MAAM,CAACrB,IAAP,CAAY,oBAAZ,EAAkCuvB,SAAS,CAACriB,aAA5C;AACA7L,MAAM,CAACrB,IAAP,CAAY,oBAAZ,EAAkCuvB,SAAS,CAACpiB,aAA5C;AACA9L,MAAM,CAACrB,IAAP,CAAY,uBAAZ,EAAqCuvB,SAAS,CAAChc,kBAA/C;AACAlS,MAAM,CAACrB,IAAP,CAAY,qBAAZ,EAAmCuvB,SAAS,CAAC1a,cAA7C;AACAxT,MAAM,CAACrB,IAAP,CAAY,2BAAZ,EAAyCuvB,SAAS,CAACtc,oBAAnD,E,CACA;;AACA5R,MAAM,CAAC/B,GAAP,CAAW,cAAX,EAA2BwC,KAAK,CAACmI,cAAjC,E,CAEA;;AACA5I,MAAM,CAAC/B,GAAP,CAAW,mBAAX,EAAgCwvB,WAAW,CAAC3kB,iBAA5C,E,CAEA;;AACA9I,MAAM,CAACrB,IAAP,CAAY,kBAAZ,EAAgCqvB,MAAM,CAACG,GAAP,EAAhC,EAA8CR,WAAW,CAACrlB,UAA1D,E,CAEA;;AACAtI,MAAM,CAACrB,IAAP,CAAY,2BAAZ,EAAyCmH,MAAM,CAACyI,aAAhD;AAEAvO,MAAM,CAAC/B,GAAP,CAAW,kBAAX,EAA+B6H,MAAM,CAACgJ,kBAAtC;AAEA9O,MAAM,CAAC/B,GAAP,CAAW,iBAAX,EAA8B6H,MAAM,CAAC4I,aAArC;AAEA1O,MAAM,CAACrB,IAAP,CAAY,6BAAZ,EAA2CmH,MAAM,CAACkJ,eAAlD;AAEAhP,MAAM,CAAC/B,GAAP,CAAW,6BAAX,EAA0C6H,MAAM,CAACmJ,eAAjD;AAEAjP,MAAM,CAAC/B,GAAP,CAAW,wBAAX,EAAqC6H,MAAM,CAACqJ,UAA5C;AAEAnP,MAAM,CAAC/B,GAAP,CAAW,8BAAX,EAA2C6H,MAAM,CAAC2J,gBAAlD;AAEAzP,MAAM,CAACrB,IAAP,CAAY,0BAAZ,EAAwCmH,MAAM,CAAC+J,gBAA/C;AAEA7P,MAAM,CAAC/B,GAAP,CAAW,uBAAX,EAAoC6H,MAAM,CAACiK,eAA3C;AAEA/P,MAAM,CAACrB,IAAP,CAAY,wBAAZ,EAAsCmH,MAAM,CAACkK,gBAA7C;AAEAhQ,MAAM,CAAC/B,GAAP,CAAW,2BAAX,EAAwC6H,MAAM,CAACmK,gBAA/C;AAEAjQ,MAAM,CAAC/B,GAAP,CAAW,sBAAX,EAAmC6H,MAAM,CAACsJ,gBAA1C;AAEApP,MAAM,CAAC/B,GAAP,CAAW,8BAAX,EAA2C6H,MAAM,CAACoK,gBAAlD;AAEAlQ,MAAM,CAAC/B,GAAP,CAAW,oCAAX,EAAiD6H,MAAM,CAACsK,sBAAxD;AAEApQ,MAAM,CAAC/B,GAAP,CACE,yCADF,EAEE6H,MAAM,CAACuK,2BAFT;AAKArQ,MAAM,CAACrB,IAAP,CACE,sCADF,EAEEmH,MAAM,CAAC+K,wBAFT;AAKA7Q,MAAM,CAAC/B,GAAP,CACE,qCADF,EAEE6H,MAAM,CAACiL,uBAFT,E,CAKA;;AACA/Q,MAAM,CAACrB,IAAP,CAAY,wBAAZ,EAAsCkvB,gBAAgB,CAACzkB,oBAAvD;AACApJ,MAAM,CAACrB,IAAP,CACE,0BADF,EAEEkvB,gBAAgB,CAACnkB,sBAFnB;AAIA1J,MAAM,CAACrB,IAAP,CACE,8BADF,EAEEkvB,gBAAgB,CAAC9jB,6BAFnB;AAIA/J,MAAM,CAACrB,IAAP,CACE,wCADF,EAEEkvB,gBAAgB,CAACnjB,sCAFnB;AAIA1K,MAAM,CAACrB,IAAP,CACE,kCADF,EAEEkvB,gBAAgB,CAAC9iB,mCAFnB;AAIA/K,MAAM,CAACrB,IAAP,CACE,4CADF,EAEEkvB,gBAAgB,CAAC1iB,0CAFnB;AAKAnL,MAAM,CAAC/B,GAAP,CAAW,0BAAX,EAAuC6vB,SAAS,CAAChsB,eAAjD;AAEA,MAAMssB,OAAO,GAAGR,MAAM,EAAtB;AAEA5tB,MAAM,CAACrB,IAAP,CAAY,iBAAZ,EAA+ByvB,OAAO,CAACD,GAAR,EAA/B,EAA8CJ,MAAM,CAACxY,UAArD,E,CAEA;;AACA,MAAM8Y,gBAAgB,GAAGvxB,mBAAO,CAAC,gEAAD,CAAhC;;AACAkD,MAAM,CAACrB,IAAP,CAAY,sBAAZ,EAAoC0vB,gBAAgB,CAACzrB,WAArD,E,CACA;;AAEA5D,MAAM,CAACC,OAAP,GAAiBe,MAAjB,C;;;;;;;;;;;ACpKA,MAAM8H,GAAG,GAAG;AACV,kBAAgB;AACdwmB,UAAM,EAAG,GAAE7sB,OAAO,CAACC,GAAR,CAAY6sB,gBAAiB,EAD1B;AAEdC,eAAW,EAAE;AACX,wBAAkB;AADP;AAFC;AADN,CAAZ;;AASA,MAAMC,MAAM,GAAItxB,GAAD,IAAS;AACtB,MAAIuxB,QAAQ,GAAG5mB,GAAf;AACA,MAAI6mB,QAAQ,GAAGxxB,GAAG,CAACiJ,KAAJ,CAAU,GAAV,CAAf;AACA,MAAIwoB,QAAQ,GAAG,IAAf;;AACA,OAAK,IAAI1Q,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIyQ,QAAQ,CAACtwB,MAA9B,EAAsC6f,CAAC,EAAvC,EAA2C;AACzC,QAAI,CAAC0Q,QAAL,EAAe;AACb,UAAIC,UAAU,GAAGxK,KAAK,CAACyK,KAAN,CAAY,IAAZ,EAAkB;AACjCzwB,cAAM,EAAE6f,CAAC,GAAG;AADqB,OAAlB,EAEdpW,GAFc,CAEVinB,QAAQ,CAACC,IAFC,EAEKzN,MAFL,CAAjB;AAGA,UAAI0N,GAAG,GAAG,EAAV;AACAJ,gBAAU,CAACppB,OAAX,CAAoBypB,OAAD,IAAa;AAC9BD,WAAG,IAAIN,QAAQ,CAACO,OAAD,CAAR,KAAsB,EAAtB,GAA4B,IAAGP,QAAQ,CAACO,OAAD,CAAU,EAAjD,GAAqD,EAA5D;AACD,OAFD;AAGAN,cAAQ,GAAGF,QAAQ,CAACO,GAAD,CAAnB;AACD;AACF;;AACD,SAAOL,QAAP;AACD,CAjBD;;AAmBA,MAAMO,cAAc,GAAIC,WAAD,IAAiB;AACtC,MAAIlxB,WAAW,GAAI,GAAnB;AACA,MAAI+T,MAAM,GAAG,EAAE,GAAGmd,WAAL;AAAkB/sB,QAAI,EAAEZ,OAAO,CAACC,GAAR,CAAY2tB;AAApC,GAAb;AACAlxB,QAAM,CAACC,IAAP,CAAY6T,MAAZ,EAAoBxM,OAApB,CAA6BiZ,CAAD,IAAO;AACjCxgB,eAAW,GAAI,GAAEA,WAAY,GAAEwgB,CAAE,IAAGzM,MAAM,CAACyM,CAAD,CAAI,GAA9C;AACD,GAFD;AAGA,SAAOxgB,WAAP;AACD,CAPD;;AASAe,OAAO,CAACqwB,UAAR,GAAqB,CAACC,QAAD,EAAWC,IAAX,EAAiBryB,GAAjB,EAAsBiyB,WAAtB,KAAsC;AACzD,MAAIK,WAAW,GAAI,GAAEF,QAAS,MAAKC,IAAK,GAAEryB,GAAI,EAA9C;AACA,MAAIwD,IAAI,GAAG8tB,MAAM,CAACtxB,GAAD,CAAjB;;AACA,MAAIwD,IAAJ,EAAU;AACR,QAAI+uB,KAAK,GAAG,IAAI5L,MAAJ,CAAW3lB,MAAM,CAACC,IAAP,CAAYuC,IAAI,CAAC6tB,WAAjB,EAA8B,CAA9B,CAAX,CAAZ;AACA,QAAImB,QAAQ,GAAGF,WAAW,CAACG,OAAZ,CACbF,KADa,EAEb/uB,IAAI,CAAC6tB,WAAL,CAAiBrwB,MAAM,CAACC,IAAP,CAAYuC,IAAI,CAAC6tB,WAAjB,EAA8B,CAA9B,CAAjB,CAFa,CAAf;AAIA,WAAOrwB,MAAM,CAACC,IAAP,CAAYgxB,WAAZ,EAAyB/wB,MAAzB,GAAkC,CAAlC,GACF,GAAEsC,IAAI,CAAC2tB,MAAO,GAAEqB,QAAS,GAAER,cAAc,CAACC,WAAD,CAAc,EADrD,GAEF,GAAEzuB,IAAI,CAAC2tB,MAAO,GAAEqB,QAAS,SAAQluB,OAAO,CAACC,GAAR,CAAY2tB,gBAAiB,EAFnE;AAGD,GATD,MASO,OAAOI,WAAP;AACR,CAbD,C;;;;;;;;;;;ACrCA,MAAM/vB,OAAO,GAAG5C,mBAAO,CAAC,wBAAD,CAAvB;;AACA,MAAMkD,MAAM,GAAGN,OAAO,CAAC6tB,MAAR,EAAf;;AACA,MAAMsC,KAAK,GAAG/yB,mBAAO,CAAC,8CAAD,CAArB;;AACA,MAAM;AAAEwyB;AAAF,IAAiBxyB,mBAAO,CAAC,0CAAD,CAA9B;;AACA,MAAMgiB,IAAI,GAAGhiB,mBAAO,CAAC,oDAAD,CAApB,C,CAEA;;;AACA,MAAMgzB,SAAS,GAAGhzB,mBAAO,CAAC,8CAAD,CAAzB;;AAEAkD,MAAM,CAACE,GAAP,CAAW,QAAX,EAAqB4e,IAAI,CAACE,YAA1B;AACAhf,MAAM,CAACwH,GAAP,CAAW,QAAX,EAAqBsoB,SAArB;AAEA9vB,MAAM,CAACE,GAAP,CAAW,gBAAX,EAA6B4e,IAAI,CAACE,YAAlC;AACAhf,MAAM,CAACE,GAAP,CACE,gBADF,EAEE2vB,KAAK,CAACpuB,OAAO,CAACC,GAAR,CAAY6sB,gBAAb,EAA+B;AAClCwB,sBAAoB,EAAE,UAAUhuB,GAAV,EAAe;AACnC,QAAIiuB,UAAU,GAAGV,UAAU,CACzBvtB,GAAG,CAACwtB,QADqB,EAEzBxtB,GAAG,CAAC9D,GAAJ,CAAQ,MAAR,CAFyB,EAGzB8D,GAAG,CAACkd,OAHqB,EAIzBld,GAAG,CAACK,KAJqB,CAA3B;AAMA5C,WAAO,CAACuD,GAAR,CAAY,aAAZ,EAA2BitB,UAA3B;AACA,WAAOA,UAAP;AACD;AAViC,CAA/B,CAFP;AAgBAhxB,MAAM,CAACC,OAAP,GAAiBe,MAAjB,C;;;;;;;;;;;AC7BA;;;AAIA,IAAIC,GAAG,GAAGnD,mBAAO,CAAC,2BAAD,CAAjB;;AACA,IAAImzB,KAAK,GAAGnzB,mBAAO,CAAC,oBAAD,CAAP,CAAiB,mBAAjB,CAAZ;;AACA,IAAIozB,IAAI,GAAGpzB,mBAAO,CAAC,kBAAD,CAAlB;AAEA;;;;;AAIA,IAAIqzB,IAAI,GAAGC,aAAa,CAAC3uB,OAAO,CAACC,GAAR,CAAY2uB,IAAZ,IAAoB,MAArB,CAAxB;AACApwB,GAAG,CAACqwB,GAAJ,CAAQ,MAAR,EAAgBH,IAAhB;AAEA;;;;AAIA,IAAII,MAAM,GAAGL,IAAI,CAACM,YAAL,CAAkBvwB,GAAlB,CAAb;AAEA;;;;AAIAswB,MAAM,CAACE,MAAP,CAAcN,IAAd;AACAI,MAAM,CAACxP,EAAP,CAAU,OAAV,EAAmB2P,OAAnB;AACAH,MAAM,CAACxP,EAAP,CAAU,WAAV,EAAuB4P,WAAvB;AAEA;;;;AAIA,SAASP,aAAT,CAAuBQ,GAAvB,EAA4B;AAC1B,MAAIT,IAAI,GAAGU,QAAQ,CAACD,GAAD,EAAM,EAAN,CAAnB;;AAEA,MAAIE,KAAK,CAACX,IAAD,CAAT,EAAiB;AACf;AACA,WAAOS,GAAP;AACD;;AAED,MAAIT,IAAI,IAAI,CAAZ,EAAe;AACb;AACA,WAAOA,IAAP;AACD;;AAED,SAAO,KAAP;AACD;AAED;;;;;AAIA,SAASO,OAAT,CAAiBpxB,KAAjB,EAAwB;AACtB,MAAIA,KAAK,CAACyxB,OAAN,KAAkB,QAAtB,EAAgC;AAC9B,UAAMzxB,KAAN;AACD;;AAED,MAAI0hB,IAAI,GAAG,OAAOmP,IAAP,KAAgB,QAAhB,GACP,UAAUA,IADH,GAEP,UAAUA,IAFd,CALsB,CAStB;;AACA,UAAQ7wB,KAAK,CAAC+C,IAAd;AACE,SAAK,QAAL;AACE7C,aAAO,CAACF,KAAR,CAAc0hB,IAAI,GAAG,+BAArB;AACAvf,aAAO,CAACuvB,IAAR,CAAa,CAAb;AACA;;AACF,SAAK,YAAL;AACExxB,aAAO,CAACF,KAAR,CAAc0hB,IAAI,GAAG,oBAArB;AACAvf,aAAO,CAACuvB,IAAR,CAAa,CAAb;AACA;;AACF;AACE,YAAM1xB,KAAN;AAVJ;AAYD;AAED;;;;;AAIA,SAASqxB,WAAT,GAAuB;AACrBnxB,SAAO,CAACuD,GAAR,CAAY,iBAAZ,EAA+BtB,OAAO,CAACC,GAAR,CAAY2uB,IAA3C;AACA,MAAIY,IAAI,GAAGV,MAAM,CAAC7f,OAAP,EAAX;AACA,MAAIsQ,IAAI,GAAG,OAAOiQ,IAAP,KAAgB,QAAhB,GACP,UAAUA,IADH,GAEP,UAAUA,IAAI,CAACd,IAFnB;AAGAF,OAAK,CAAC,kBAAkBjP,IAAnB,CAAL;AACD,C;;;;;;;;;;;ACxFD,oE;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,sC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,+C;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,oC","file":"app.server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server.js\");\n","const axios = require(\"axios\");\nconst { handleError, handleResponse } = require(\"./ApiUtils\");\n\nconst httpRequest = (method, url, request, _headers) => {\n  let hdrs = { ..._headers };\n  return axios({\n    method,\n    url,\n    data: request,\n    headers: hdrs,\n  })\n    .then((res) => {\n      const result = handleResponse(res);\n      return Promise.resolve(result);\n    })\n    .catch((err) => {\n      //throw handleError(err);\n      return Promise.reject(handleError(err));\n    });\n};\n\nconst get = (url, request, headers) => {\n  let queryString = \"\";\n  if (request && Object.keys(request).length > 0) {\n    queryString += \"?\";\n    let len = Object.keys(request).length,\n      cnt = 0;\n    for (let key in request) {\n      cnt++;\n      queryString += `${key}=${request[key].toString()}`;\n      if (len > cnt) queryString += \"&\";\n    }\n  }\n  return httpRequest(\"get\", `${url}${queryString}`, null, headers);\n};\n\nconst deleteRequest = (url, request, headers) => {\n  return httpRequest(\"delete\", url, request, headers);\n};\n\nconst post = (url, request, headers) => {\n  return httpRequest(\"post\", url, request, headers);\n};\n\nconst put = (url, request, headers) => {\n  return httpRequest(\"put\", url, request, headers);\n};\n\nconst patch = (url, request, headers) => {\n  return httpRequest(\"patch\", url, request, headers);\n};\n\nconst postForm = async (url, formData, headers) => {\n  try {\n    let hdrs = {\n      ...headers,\n      \"Content-Type\": \"multipart/form-data\",\n    };\n    let res = await axios.post(url, formData, { headers: hdrs });\n    return handleResponse(res);\n  } catch (err) {\n    return handleError(err);\n  }\n};\n\nmodule.exports = {\n  get,\n  delete: deleteRequest,\n  post,\n  postForm,\n  put,\n  patch,\n};\n","exports.handleResponse = (response) => {\n  if (\n    response.status === 200 ||\n    response.status === 202 ||\n    response.statusText === \"OK\" ||\n    response.statusText === \"Created\"\n  )\n    return response.data;\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = response.statusText();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n};\n\n// In a real app, would likely call an error logging service.\nexports.handleError = (error) => {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  return error && error.response && error.response.data\n    ? error.response.data\n    : error;\n};\n","const dotenv = require(\"dotenv\");\nconst express = require('express');\nconst logger = require('morgan');\nconst bodyParser = require('body-parser');\nconst cors = require(\"cors\");\n\ndotenv.config();\n\nconst connectDb = require(\"./models\").connectDb;\nvar router = require(\"./routes/router\");\n\n\nvar app = express();\n\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json({limit: '50mb'}));\n\n\napp.use(express.json());\napp.use(cors());\n\napp.use(logger('dev'));\napp.use('/', router);\n\nconnectDb();\n\nmodule.exports = app;\n\n","const userType = require(\"./types\").userTypes;\n\n/**\n * Get menus list\n */\nexports.menus = [\n  {\n    name: \"Mi Cuenta\",\n    path: \"/admin/cuenta\",\n    icon: \"icon icon-account_circle\",\n    visible: true,\n    validUserTypes: [\n      userType.guard,\n      userType.suburbAdmin,\n      userType.admin,\n      userType.guest,\n      userType.neighbor,\n    ],\n    order: 5,\n  },\n  {\n    name: \"Reporte\",\n    path: \"/admin/reporte\",\n    icon: \"icon icon-dashboard2\",\n    visible: true,\n    validUserTypes: [\n      userType.guard,\n      userType.suburbAdmin,\n      userType.admin,\n      userType.guest,\n    ],\n    order: 5,\n  },\n  {\n    name: \"Guardias\",\n    path: \"/admin/guardias\",\n    icon: \"icon icon-shield\",\n    visible: true,\n    validUserTypes: [userType.guest, userType.guard, userType.admin],\n    order: 2,\n  },\n  {\n    name: \"GuardiasForm\",\n    icon: \"icon icon-shield\",\n    path: \"/admin/guardias-form\",\n    visible: false,\n    validUserTypes: [userType.suburbAdmin, userType.admin],\n    order: 6,\n  },\n  {\n    name: \"Vecinos\",\n    path: \"/admin/vecinos\",\n    icon: \"icon icon-users\",\n    visible: true,\n    validUserTypes: [userType.suburbAdmin, userType.admin],\n    order: 3,\n  },\n  {\n    name: \"Administracion de pagos\",\n    path: \"/admin/payments\",\n    icon: \"icon icon-users\",\n    visible: true,\n    validUserTypes: [userType.suburbAdmin, userType.admin],\n    order: 3,\n  },\n  {\n    name: \"Colonia\",\n    path: \"/admin/colonias\",\n    icon: \"icon icon-building\",\n    visible: true,\n    validUserTypes: [userType.admin],\n    order: 4,\n  },\n  {\n    name: \"Colonia Status\",\n    path: \"/admin/coloniaStatus\",\n    icon: \"icon icon-building\",\n    visible: false,\n    validUserTypes: [userType.admin, userType.suburbAdmin, userType.guest],\n    order: 4,\n  },\n  {\n    name: \"Colonia Status\",\n    path: \"/admin/coloniaMain\",\n    icon: \"icon icon-building\",\n    visible: false,\n    validUserTypes: [\n      userType.admin,\n      userType.suburbAdmin,\n      userType.suburbAdmin,\n    ],\n    order: 4,\n  },\n];\n","exports.userTypes = {\n  guest: \"guest\",\n  admin: \"admin\",\n  suburbAdmin: \"suburbAdmin\",\n  guard: \"guard\",\n  neighbor: \"neighbor\",\n};\n\nexports.suburbStatus = [\n  {\n    status: \"pending\",\n    description:\n      \"Tu solicitud para registrar la colonia ha sido enviada, por favor espera de 2 a 3 dias habiles o contactanos por medio de nuestras redes sociales para mayor informacion.\",\n  },\n  {\n    status: \"rejected\",\n    description: \"Lo sentimos tu solicitud fue rechazada.\",\n  },\n  {\n    status: \"approved\",\n    description: \"Tu solicitud a sido aprobada.\",\n  },\n  {\n    status: \"feedback\",\n    description: \"Tu solicitud a sido revisada, se requiere mas información.\",\n  },\n];\n","const Api = require(\"../api/ApiService\");\n\nconst apiAnalytics = process.env.API_ANALYTICS_URL;\nconst apiKey = process.env.API_ANALYTICS_KEY;\n\nexports.getSuburbVisits = async (req, res) => {\n  try {\n    let { suburbId, startDate, endDate, offset } = req.query;\n    if (!offset) offset = 5;\n    let response = await Api.get(`${apiAnalytics}/GetVisitsInfo`, {\n      code: apiKey,\n      suburbId,\n      startDate,\n      endDate,\n      offset,\n    });\n    res.status(\"200\").json(response);\n  } catch (err) {\n    console.error(err);\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n","const apiUrl = process.env.API_BLOB_URL;\nconst apiKey = process.env.API_BLOB_KEY;\nconst request = require(\"request\");\nconst User = require(\"../logic/userService\");\n\n/** This service acts like a proxy to redirect the request to the blob service\n *\n * @param {*} req\n * @param {*} res\n */\nexports.uploadBlobs = async (req, res) => {\n  try {\n    let url = `${apiUrl}/UploadFile${apiKey ? `?code=${apiKey}` : \"\"}`;\n    req\n      .pipe(\n        request({ url: url }, (error, response, body) => {\n          if (error) {\n            console.log(\n              `An error occurs in the following url: ${url}: `,\n              error\n            );\n            let message = \"dev proxy error: \";\n            if (error && error.code === \"ECONNREFUSED\") {\n              message = message.concat(\"Refused connection\");\n            } else if (error && error.code === \"ECONNRESET\") {\n              message = message.concat(\"The target connection has been lost\");\n            } else {\n              message = message.concat(\"Unhandled error\");\n            }\n            req.res.status(500).json({\n              errorMessage: message || \"\",\n              exception: message || {},\n            });\n          } else {\n            if (response.statusCode < 300)\n              User.updateUserPicture(\n                req.query.userId,\n                JSON.parse(response.body)[0].url\n              );\n          }\n        })\n      )\n      .pipe(res);\n    //res.status(\"200\").json({ message: \"ok\" });\n  } catch (err) {\n    console.error(err);\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n","const userServices = require(\"../logic/userService\");\nconst suburbService = require(\"../logic/suburbService\");\n//const fetchDbx = require('isomorphic-fetch');\nconst fs = require(\"fs\");\n// const Dropbox = require(\"dropbox\").Dropbox;\nconst dropboxV2Api = require(\"dropbox-v2-api\");\nconst sgMail = require(\"@sendgrid/mail\");\n\nconst getFileName = (nodeFileName, originalName) => {\n  let idx = originalName.lastIndexOf(\".\");\n  return `${nodeFileName}.${originalName.substring(idx + 1)}`;\n};\n\nconst uploadFileDropbox = (file) => {\n  const dropbox = dropboxV2Api.authenticate({\n    token: process.env.DROPBOX_TOKEN,\n  });\n\n  return new Promise((resolve, reject) => {\n    dropbox(\n      {\n        resource: \"files/upload\",\n        parameters: {\n          path: `/neighby/${getFileName(file.filename, file.originalname)}`,\n        },\n        readStream: fs.createReadStream(`${file.destination}/${file.filename}`),\n      },\n      (err, result, response) => {\n        if (!err) resolve(result);\n        else reject(err);\n      }\n    );\n  });\n};\n\nconst base64_encode = (file_path) => {\n  // read binary data\n  var bitmap = fs.readFileSync(file_path);\n  // convert binary data to base64 encoded string\n  return new Buffer.from(bitmap, \"base64\").toString(\"base64\"); //.toString('base64');\n};\n\nconst getEmailAttachments = (files) => {\n  let attachments = [];\n  files.forEach((file) => {\n    attachments.push({\n      filename: `${file.originalname}`,\n      content: base64_encode(`${file.destination}/${file.filename}`),\n    });\n  });\n  return attachments;\n};\n\nconst sendEmail = async (files, user, suburb, suburbId) => {\n  try {\n    sgMail.setApiKey(process.env.SENDGRID_API_KEY);\n\n    const msg = {\n      to: process.env.OWNER_EMAILS.split(\",\"),\n      from: \"support@neighby.com\",\n      subject: \"Nuevo requerimiento de registro de colonia.\",\n      text: `solicitud de registro.`,\n      html: `<strong>El usuario ${user} desea registrar la colonia ${suburb} y envia los documentos para revisión adjuntos en este email para revision, id de referencia:[${suburbId}].</strong>`,\n      attachments: getEmailAttachments(files),\n    };\n    await sgMail.send(msg);\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst deleteTemporaryFiles = (files) => {\n  files.forEach((file) => {\n    fs.unlink(`${file.destination}/${file.filename}`, (err) => {\n      if (err) throw err;\n      console.log(\n        `path file ${file.destination}/${file.filename} has been deleted.`\n      );\n    });\n  });\n};\n\nconst processFileUpload = async (files, data) => {\n  try {\n    let {\n      userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      postalCode,\n      section,\n      suburbName,\n      recaptchaToken,\n    } = data;\n    let validCaptcha = await userServices.validateRecaptcha(recaptchaToken);\n    let proms = [];\n    files.forEach((file) => {\n      proms.push(uploadFileDropbox(file));\n    });\n    let uploadedFiles = await Promise.all(proms);\n\n    let saveSuburb = await suburbService.saveSuburb({\n      name: suburbName,\n      location: section,\n      postalCode: postalCode,\n      active: true,\n      userAdmins: [userId],\n      status: [suburbService.getSuburbStatus(\"pending\")],\n      files: files.map((fil) => ({\n        fileName: fil.filename,\n        originalName: fil.originalname,\n        actionType: \"solicitudRegistro\",\n        mimetype: fil.mimetype,\n      })),\n    });\n\n    let updateUser = await userServices.updateUser({\n      _id: userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      active: true,\n    });\n\n    await sendEmail(files, `${name} ${lastName}`, suburbName, saveSuburb.id);\n\n    deleteTemporaryFiles(files);\n    return saveSuburb;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nexports.uploadFile = async (req, res, next) => {\n  try {\n    let {\n      userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      postalCode,\n      section,\n      suburbName,\n      recaptchaToken,\n    } = req.body;\n    let processFiles = await processFileUpload(req.files, {\n      userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      postalCode,\n      section,\n      suburbName,\n      recaptchaToken,\n    });\n    res.status(202).json({ message: \"ok\" });\n  } catch (ex) {\n    res\n      .status(400)\n      .json({ message: ex.message || \"No se pudo completar el registro.\" });\n  }\n};\n\nexports.sendTempPassEmail = async (email, tempPassword, files = []) => {\n  try {\n    sgMail.setApiKey(process.env.SENDGRID_API_KEY);\n\n    const msg = {\n      to: email, //process.env.OWNER_EMAILS.split(\",\"),\n      from: \"support@neighby.com\",\n      subject: \"Solicitud de cambio de contraseña.\",\n      text: `Solicitud de cambio de contraseña.`,\n      html: `<strong>La nueva contraseña temporal es: ${tempPassword} </strong>`,\n      attachments: getEmailAttachments(files),\n    };\n    await sgMail.send(msg);\n  } catch (ex) {\n    throw ex;\n  }\n};\n","const menuService = require(\"../logic/menuService\");\n\n\n\n/**\n * [GET] method to get the menus by user types\n */\nexports.getMenusByUser = async (req, res, next) => {\n    let token = req.headers[\"authorization\"];\n    try {\n        const result = await menuService.getMenusByUser(token);\n        res.status('200').json(result);\n    } catch (err) {\n        res.status('401').json(err);\n    }\n}","const postalCodeService = require(\"../logic/postalCodeService\");\n\nexports.getPostalCodeInfo = async (req, res, next) => {\n    try {\n        let result = await postalCodeService.getCPInfo(req.query.postalCode);\n        res.status(200).json(result);\n    }\n    catch (err) {\n        res.status(400).json(err);\n    }\n}","const pushNotificationService = require(\"../logic/pushNotificationService\");\nconst {\n  getUserLeanById,\n  getAdminUsers,\n  getUsersByAddressId,\n} = require(\"../logic/userService\");\n\nexports.sendTestNotification = async (req, res, next) => {\n  try {\n    let result = await pushNotificationService.sendPushNotification(\n      [\"ExponentPushToken[TRMrLcG4VUxVUwmsCXPIyw]\"],\n      {\n        sound: \"default\",\n        body: \"This is a test notification ;)\",\n        data: { withSome: \"data\" },\n        title: \"Notificacion Nueva\",\n        subtitle: \"soy un subtitulo\",\n      }\n    );\n    res.status(200).json(result);\n  } catch (err) {\n    res.status(400).json(err);\n  }\n};\n\nexports.sendArriveNotification = async (req, res) => {\n  try {\n    let { userId, guest } = req.body;\n    console.log(\"getting user\");\n    let user = await getUserLeanById(userId);\n    let pushTokens = user.pushTokens.map((t) => t.token);\n    console.log(\"push tokens\", pushTokens);\n\n    console.log(\"send notifications...\");\n    let result = await pushNotificationService.sendPushNotification(\n      pushTokens,\n      {\n        sound: \"default\",\n        body: guest.isService\n          ? `Tu servicio ${guest.name} ha llegado.`\n          : `Tu invitado ${guest.name} ha llegado.`,\n        data: { redirect: \"myVisits\" },\n        title: `Hola ${user.name}`,\n      }\n    );\n    res.status(200).json(result);\n  } catch (err) {\n    console.log(\"notification error details: \", err);\n    res.status(400).json(err);\n  }\n};\n\nexports.sendUploadPaymentNotification = async (req, res) => {\n  try {\n    let { suburbId, userId, paymentType } = req.body;\n    let users = await getAdminUsers(suburbId);\n    //esto es solo para pruebas\n    //users = users.filter((u) => u.facebookId === \"10221055228718114\");\n\n    let user = await getUserLeanById(userId);\n    let promises = [];\n    users.forEach((u) => {\n      promises.push(\n        pushNotificationService.sendPushNotification(\n          u.pushTokens.map((t) => t.token),\n          {\n            sound: \"default\",\n            body: `El usuario ${user.name} con la dirección ${user.street} ${user.streetNumber} realizo un pago de ${paymentType}.`,\n            data: {\n              redirect: { stack: \"PaymentsControl\", screen: \"PaymentList\" },\n              props: { street: user.street, streetNumber: user.streetNumber },\n            },\n            title: `Nuevo pago realizado`,\n          }\n        )\n      );\n    });\n    let sendNotifications = await Promise.all(promises);\n    res.status(200).json(sendNotifications);\n  } catch (err) {\n    console.log(\"notification error details: \", err);\n    res.status(400).json(err);\n  }\n};\n\nexports.sendApproveRejectedPaymentNotification = async (req, res) => {\n  try {\n    let { suburbId, addressId, status, comment, paymentName } = req.body;\n    let users = await getUsersByAddressId(suburbId, addressId);\n    let promises = [];\n    users.forEach((u) => {\n      promises.push(\n        pushNotificationService.sendPushNotification(\n          u.pushTokens.map((t) => t.token),\n          {\n            sound: \"default\",\n            body:\n              status === \"approved\"\n                ? `Tu pago de ${paymentName} ha sido aceptado`\n                : status === \"rejected\"\n                ? `Tu pago de ${paymentName} ha sido rechazado por la siguiente razón: ${comment}`\n                : `Tu pago ${paymentName} esta siendo procesado.`,\n            data: {\n              redirect: {\n                stack: \"Payments\",\n                screen: \"Info\",\n              },\n              props: {\n                filter: status,\n              },\n            },\n            title:\n              status === \"approved\"\n                ? \"Pago aceptado\"\n                : status === \"rejected\"\n                ? \"Pago rechazado\"\n                : \"Cambio en el estatus de tus pagos\",\n          }\n        )\n      );\n    });\n\n    let sendNotifications = await Promise.all(promises);\n    res.status(200).json(sendNotifications);\n  } catch (err) {\n    console.log(\"notification error details: \", err);\n    res.status(400).json(err);\n  }\n};\n\nexports.sendNewSpaceReservationNotification = async (req, res) => {\n  try {\n    const { suburbId, userId, reservationId } = req.body;\n    const adminUsers = await getAdminUsers(suburbId);\n\n    const user = await getUserLeanById(userId);\n    let promises = [];\n    adminUsers.forEach((u) => {\n      promises.push(\n        pushNotificationService.sendPushNotification(\n          u.pushTokens.map((t) => t.token),\n          {\n            sound: \"default\",\n            body: `El usuario ${user.name} con la dirección ${user.street} ${user.streetNumber} ha realizado una reserva de un area común.`,\n            data: {\n              redirect: { stack: \"CommonAreas\", screen: \"ApprovalScreen\" },\n              props: {\n                street: user.street,\n                streetNumber: user.streetNumber,\n                reservationId,\n              },\n            },\n            title: `Nueva reserva de area común`,\n          }\n        )\n      );\n    });\n\n    let sendNotifications = await Promise.all(promises);\n    res.status(200).json(sendNotifications);\n  } catch (err) {\n    console.log(\"notification error details: \", err);\n    res.status(400).json(err);\n  }\n};\n\nconst getReservationStatusMessage = (status, comment) => {\n  switch (status) {\n    case \"approved\":\n      return \"Tu reservación ha sido aprobada\";\n    case \"rejected\":\n      return `Tu reservación ha sido rechazada por la siguiente razón: ${comment}`;\n    case \"pending\":\n      return \"Tu reservación esta siendo procesada\";\n    default:\n      return \"El estatus de tu reservación ha cambiado\";\n  }\n};\n\nexports.sendApproveRejectedReservationNotification = async (req, res) => {\n  try {\n    const { suburbId, addressId, status, comment, reservationId } = req.body;\n    let promises = [];\n    let users = await getUsersByAddressId(suburbId, addressId);\n    users.forEach((user) => {\n      promises.push(\n        pushNotificationService.sendPushNotification(\n          user.pushTokens.map((t) => t.token),\n          {\n            sound: \"default\",\n            body: getReservationStatusMessage(status, comment),\n            title: \"Cambio en el estatus de tu reservación\",\n            data: {\n              redirect: { stack: \"CommonAreas\", screen: \"MyReservationsStack\" },\n              props: {\n                street: user.street,\n                streetNumber: user.streetNumber,\n                reservationId,\n              },\n            },\n          }\n        )\n      );\n    });\n\n    let sendNotifications = await Promise.all(promises);\n    res.status(200).json(sendNotifications);\n  } catch (err) {\n    console.log(\"notification error details: \", err);\n    res.status(400).json(err);\n  }\n};\n","const user = require(\"./userAdmin\");\n\nexports.signUp = (req, res, next) => {\n  if (\n    req.body.token === undefined ||\n    req.body.token === \"\" ||\n    req.body.token === null\n  ) {\n    res.send({\n      success: false,\n      message: \"Por favor intenta de nuevo (codigo recaptcha no encontrado).\",\n    });\n    return;\n  }\n  let {\n    email,\n    name,\n    lastName,\n    cellphone,\n    facebookId,\n    googleId,\n    appleId,\n    password,\n    token,\n  } = req.body;\n  if (facebookId) {\n    req.body = {\n      email,\n      name,\n      lastName,\n      loginName: facebookId,\n      cellphone,\n      facebookId,\n      googleId,\n      appleId,\n      password,\n      token,\n    };\n    user.saveFacebookUser(req, res, next);\n  } else if (googleId) {\n    req.body = {\n      email,\n      name,\n      lastName,\n      loginName: googleId,\n      cellphone,\n      facebookId,\n      googleId,\n      appleId,\n      password,\n      token,\n    };\n    user.saveGoogleUser(req, res, next);\n  } else if (appleId) {\n    req.body = {\n      email,\n      name,\n      lastName,\n      loginName: appleId,\n      cellphone,\n      facebookId,\n      googleId,\n      appleId,\n      password,\n      token,\n    };\n    user.saveAppleUser(req, res, next);\n  } else {\n    req.body = {\n      email,\n      name,\n      lastName,\n      loginName: email,\n      cellphone,\n      facebookId,\n      googleId,\n      appleId,\n      password,\n      token,\n    };\n    user.saveEmailUser(req, res, next);\n  }\n  //mandar llamar registro aqui\n  // if (googleId || facebookId)\n  //     axios({\n  //         method: 'post',\n  //         url: googleId ? `${process.env.ADMIN_API_HOST}/api/saveGoogleUser` : `${process.env.ADMIN_API_HOST}/api/saveFacebookUser`,\n  //         data: {\n  //             name,\n  //             lastName,\n  //             loginName: googleId ? googleId : facebookId,\n  //             email,\n  //             cellphone,\n  //             googleId,\n  //             facebookId,\n  //             token\n  //         }\n  //     }).then(resS => {\n  //         res.send({ success: true, message: resS.data.message || \"Ok\" });\n  //     })\n  //         .catch(err => {\n  //             let errMsg = err && err.response && err.response.data && err.response.data.message ? err.response.data.message : err.message || \"No se pudo guardar el usuario.\";\n  //             res.send({ success: false, message: errMsg });\n  //         });\n  // else {\n  //     axios({\n  //         method: 'post',\n  //         url: `${process.env.ADMIN_API_HOST}/api/saveEmailUser`,\n  //         data: {\n  //             name,\n  //             lastName,\n  //             loginName: email,\n  //             email,\n  //             cellphone,\n  //             password,\n  //             token\n  //         }\n  //     }).then(resS => {\n  //         res.send({ success: true, message: resS.data.message || \"Ok\" });\n  //     })\n  //         .catch(err => {\n  //             let errMsg = err && err.response && err.response.data && err.response.data.message ? err.response.data.message : err.message || \"No se pudo guardar el usuario.\";\n  //             res.send({ success: false, message: errMsg });\n  //         });\n  // }\n};\n","const User = require(\"../models/user\");\nconst viewPermissions = require(\"../logic/viewPermissions\");\nconst axios = require(\"axios\").default;\nconst validateRecaptcha = require(\"../logic/auth\").validateRecaptcha;\n\nconst validateActiveUser = (user) => {\n  return user.active;\n};\n\nconst validateUser = (userLogin, password, isTemporary = false) => {\n  return new Promise((resolve, reject) => {\n    User.getLogin(userLogin).then((login, err) => {\n      if (login) {\n        let validPass = login.validatePassword(password, isTemporary);\n        validPass.then(\n          (result) => {\n            //generate jwt token\n            let token = login.generateUserToken();\n            resolve({ success: true, message: token });\n          },\n          (err) => {\n            reject({\n              success: false,\n              message: err.message || \"La contraseña no es valida.\",\n            });\n          }\n        );\n      } else\n        reject({\n          succes: false,\n          message: \"El usuario no existe, o esta deshabilitado.\",\n        });\n    });\n  });\n};\n\nexports.internalAuth = async (req, res) => {\n  try {\n    const { user, password } = req.body;\n    const isTemporary = false;\n    const result = await validateUser(user, password, isTemporary);\n    res.status(200).json(result);\n  } catch (err) {\n    res.status(500).json({ success: false, message: err.message });\n  }\n};\n\nexports.checkAuth = async (req, res, next) => {\n  try {\n    //over here check the db to know if the auth is valid\n    let { user, password, captchaToken, isTemporary = false } = req.body;\n\n    let validCaptcha = await validateRecaptcha(captchaToken);\n    if (validCaptcha) {\n      let usr = await validateUser(user, password, isTemporary); //.then(\n\n      if (usr) {\n        if (usr.success) {\n          // var session = req.session;\n          // session.token = result.message;\n          // session.user = user;\n          let userData = (await User.getLogin(user)).toObject();\n\n          res.status(\"200\").json({\n            ...usr,\n            email: userData.email,\n            name: userData.name,\n            createdAt: userData.transtime,\n            id: userData._id.toString(),\n          });\n        } else\n          res.status(\"401\").json({ success: false, message: \"Unauthorized\" });\n      } else {\n        res.status(\"401\").json({ success: false, message: \"Unauthorized\" });\n      }\n    } else res.status(\"401\").json({ success: false, message: \"Unauthorized\" });\n  } catch (err) {\n    console.log(\"error\", err);\n    res.status(\"404\").json({ token: null, message: err });\n  }\n};\n\nexports.getTokenByFacebookId = async (req, res) => {\n  try {\n    let { id, captchaToken } = req.query;\n    //let validCaptcha = await validateRecaptcha(captchaToken);\n    //if (validCaptcha) {\n    let usr = await User.getUserByFacebookId(id);\n    if (usr) {\n      if (validateActiveUser(usr._doc)) {\n        let token = usr.generateUserToken();\n        res.status(\"200\").json({ token });\n      } else\n        res.status(\"401\").json({\n          token: null,\n          message:\n            \"Tu usuario esta desactivado, para mayor información contacta el administrador de tu fraccionamiento.\",\n        });\n    } else {\n      res.status(\"404\").json({ token: null });\n    }\n    //} else res.status(\"401\").json({ token: null });\n  } catch (err) {\n    console.log(\"error\", err);\n    res.status(\"404\").json({ token: null });\n  }\n};\n\nexports.getTokenByGoogleId = async (req, res) => {\n  try {\n    let { id, captchaToken } = req.query;\n    let validCaptcha = await validateRecaptcha(captchaToken);\n    if (validCaptcha) {\n      let usr = await User.getUserByGoogleId(id);\n      if (usr) {\n        if (validateActiveUser(usr._doc)) {\n          let token = usr.generateUserToken();\n          res.status(\"200\").json({ token });\n        } else\n          res.status(\"401\").json({\n            token: null,\n            message:\n              \"Tu usuario esta desactivado, para mayor información contacta el administrador de tu fraccionamiento.\",\n          });\n      } else {\n        res.status(\"404\").json({ token: null });\n      }\n    } else res.status(\"401\").json({ token: null });\n  } catch (err) {\n    console.log(\"error\", err);\n    res.status(\"404\").json({ token: null });\n  }\n};\n\nexports.getTokenByAppleId = async (req, res) => {\n  try {\n    let { id, captchaToken } = req.query;\n    let validCaptcha = await validateRecaptcha(captchaToken);\n    if (validCaptcha) {\n      let usr = await User.getUserByAppleId(id);\n      if (usr) {\n        if (validateActiveUser(usr._doc)) {\n          let token = usr.generateUserToken();\n          res.status(\"200\").json({ token });\n        } else\n          res.status(\"401\").json({\n            token: null,\n            message:\n              \"Tu usuario esta desactivado, para mayor información contacta el administrador de tu fraccionamiento.\",\n          });\n      } else {\n        res.status(\"404\").json({ token: null });\n      }\n    } else res.status(\"401\").json({ token: null });\n  } catch (err) {\n    console.log(\"error\", err);\n    res.status(\"404\").json({ token: null });\n  }\n};\n\nexports.isValidToken = (req, res, next) => {\n  let token = req.headers[\"authorization\"];\n  return new Promise((resolve, reject) => {\n    User.isValidToken(token).then(\n      (isValid) => {\n        if (isValid)\n          res\n            .status(\"200\")\n            .json({ valid: true, message: \"the token is valid\" });\n        else\n          res.status(\"401\")({\n            valid: false,\n            message: \"the token is not valid\",\n          });\n      },\n      (err) => res.status(\"500\")(err)\n    );\n  });\n};\n\nexports.validateTokenPath = (req, res, next) => {\n  let { token, user, path } = req.body;\n  //over here add logic to check if a path is valid for the given context (user-> userType and jwt token)\n  viewPermissions.permissionValid(path, token, user).then(\n    (result) => {\n      res.status(\"200\").json({ valid: true, message: \"ok :)\" });\n    },\n    (err) => {\n      res.status(\"401\").json(err);\n    }\n  );\n};\n\nexports.logOff = (req, res, next) => {\n  if (req.session)\n    req.session.destroy((err) => {\n      if (err)\n        res.status(\"500\").json({\n          success: false,\n          message:\n            err.message || \"An unknow error occurs while trying to log off.\",\n        });\n      res.status(\"200\").json({ success: true, message: \"session destroyed.\" });\n    });\n};\n","const suburbService = require(\"../logic/suburbService\");\nconst addressService = require(\"../logic/addressService\");\nconst userService = require(\"../logic/userService\");\nconst userTypes = require(\"../constants/types\").userTypes;\nconst moment = require(\"moment\");\nconst ObjectId = require(\"mongoose\").Types.ObjectId;\nconst validateRecaptcha = require(\"../logic/auth\").validateRecaptcha;\n\nexports.approveReject = async (req, res, next) => {\n  try {\n    let { suburbId, newStatus, details } = req.body;\n    let suburb = await suburbService.getSuburbById(suburbId);\n    let status = suburbService.getSuburbStatus(newStatus);\n    if (suburb && status) {\n      let addStatus = await suburbService.suburbAddStatus(suburbId, {\n        ...status,\n        details,\n        transtime: moment.utc(),\n      });\n      if (addStatus) {\n        if (status.status === \"approved\")\n          await userService.updateUser({\n            _id: suburb.userAdmins[0].id,\n            userType: userTypes.suburbAdmin,\n            transtime: moment.utc(),\n          });\n        res.status(200).json({\n          success: true,\n          message: `El estatus ha sido actualizado correctamente, el nuevo estatus es: \"${status.status}\"`,\n        });\n      }\n    } else\n      res.status(400).json({\n        success: false,\n        message: \"El estatus no es valido o la colonia no existe\",\n      });\n  } catch (ex) {\n    res.status(400).json({\n      success: false,\n      message: ex.message || \"No se pudo procesar aprobar/rechazar la colonia.\",\n    });\n  }\n};\n\nexports.getSuburbByAdminId = (req, res, next) => {\n  let userId = req.query.id;\n  suburbService.getSuburbByAdminUser(userId).then(\n    (result) => {\n      res.status(\"200\").json(result);\n    },\n    (err) => {\n      res.status(400).json({\n        success: false,\n        message:\n          err.message || \"No se pudo obtener la informacion de la colonia.\",\n      });\n    }\n  );\n};\n\nexports.getSuburbById = (req, res, next) => {\n  let suburbId = req.query.suburbId;\n  suburbService.getSuburbById(suburbId).then(\n    (result) => {\n      res.status(200).json(result);\n    },\n    (err) => {\n      res.status(400).json({\n        success: false,\n        message: err.message || \"no se encontro la colonia\",\n      });\n    }\n  );\n};\n\nexports.addSuburbInvite = (req, res, next) => {\n  let { suburbId, name, street, streetNumber, userType } = req.body;\n  suburbService\n    .addSuburbInvite(suburbId, name, street, streetNumber, userType)\n    .then(\n      (result) => {\n        res.status(200).json(result);\n      },\n      (err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message || \"No se pudo generar la invitacion para el usuario.\",\n        });\n      }\n    );\n};\n\nexports.getSuburbInvite = async (req, res, next) => {\n  try {\n    let { code, captchaToken } = req.query;\n    let invite = await suburbService.getSuburbInvite(code);\n    let validCaptcha = await validateRecaptcha(captchaToken);\n    if (validCaptcha) {\n      res.status(200).json(invite);\n    } else res.status(401).json({ success: false, message: \"token invalido\" });\n  } catch (err) {\n    res.status(500).json({\n      success: false,\n      message: err.message || \"No se pudo obtener la invitacion.\",\n    });\n  }\n};\n\nexports.getStreets = (req, res) => {\n  let suburbId = req.query.suburbId;\n  if (suburbId) {\n    userService.getUsersBySuburb(suburbId).then(\n      (users) => {\n        let streets = users.map((usr) => usr.street);\n        const distinctStreets = [...new Set(streets)];\n        res\n          .status(200)\n          .json(\n            distinctStreets\n              .filter((u) => typeof u !== \"undefined\")\n              .map((s) => ({ street: s }))\n          );\n      },\n      (err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message ||\n            \"No se pudieron obtener las calles del fraccionamiento\",\n        });\n      }\n    );\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.getStreetNumbers = (req, res) => {\n  let { suburbId, street } = req.query;\n  if (suburbId) {\n    userService.getUsersBySuburbStreet(suburbId, street).then(\n      (users) => {\n        let streetNumbers = users.map((usr) => usr.streetNumber);\n        const distinctStreetNumbers = [...new Set(streetNumbers)];\n        res\n          .status(200)\n          .json(\n            distinctStreetNumbers\n              .filter((u) => typeof u !== \"undefined\")\n              .map((s) => ({ streetNumber: s }))\n          );\n      },\n      (err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message || \"No se pudieron obtener los numeros de la calle\",\n        });\n      }\n    );\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.saveSuburbConfig = (req, res) => {\n  let { suburbId, config } = req.body;\n  if (ObjectId.isValid(suburbId)) {\n    suburbService\n      .saveSuburbConfig(suburbId, config)\n      .then((sub) => {\n        res.status(200).json({\n          success: true,\n          message:\n            \"La configuración del fraccionamiento fue actualizada correctamente.\",\n        });\n      })\n      .catch((err) => {\n        res.status(500).json({\n          success: false,\n          message: err.message || \"No se pudo actualizar la configuracion\",\n        });\n      });\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.getSuburbConfig = (req, res) => {\n  let { suburbId } = req.query;\n  if (ObjectId.isValid(suburbId)) {\n    suburbService\n      .getSuburbConfig(suburbId)\n      .then((config) => {\n        res.status(200).json({ ...config });\n      })\n      .catch((err) => {\n        res.status(500).json({\n          success: false,\n          message: err.message || \"No se pudo obtener la configuracion\",\n        });\n      });\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.saveSuburbStreet = async (req, res) => {\n  try {\n    let { suburbId, street } = req.body;\n    if (ObjectId.isValid(suburbId)) {\n      let sub = await addressService.saveSuburbStreet(suburbId, street);\n\n      res.status(200).json({\n        success: true,\n        message: \"La calle fue guardada correctamente.\",\n      });\n    } else\n      res.status(400).json({\n        success: false,\n        message: \"Por favor indique el fraccionamiento.\",\n      });\n  } catch (err) {\n    res.status(500).json({\n      success: false,\n      message: err.message || \"No se pudo guardar la calle\",\n    });\n  }\n};\n\nexports.getSuburbStreets = async (req, res) => {\n  try {\n    let { suburbId } = req.query;\n    if (ObjectId.isValid(suburbId)) {\n      let streets = await addressService.getSuburbStreets(suburbId);\n      res.status(200).json({ ...streets });\n    } else\n      res.status(400).json({\n        success: false,\n        message: \"Por favor indique el fraccionamiento.\",\n      });\n  } catch (err) {\n    res.status(500).json({\n      success: false,\n      message:\n        err.message || \"No se pudieron obtener las calles del fraccionamiento\",\n    });\n  }\n};\n\nexports.getUsersBySuburb = async (req, res) => {\n  try {\n    let { suburbId } = req.query;\n    if (ObjectId.isValid(suburbId)) {\n      let users = await suburbService.getUsersBySuburb(suburbId);\n      res.status(200).json(users);\n    } else\n      res.status(400).json({\n        success: false,\n        message: \"Por favor indique el fraccionamiento.\",\n      });\n  } catch (err) {\n    res.status(500).json({\n      message:\n        err.message || \"An unknown error occurs while trying to get the users.\",\n    });\n  }\n};\n\nexports.migrateAddresses = async (req, res) => {\n  try {\n    let { suburbId } = req.query;\n    if (ObjectId.isValid(suburbId)) {\n      let test = await addressService.migrateAddresses(suburbId);\n      //let test = await addressService.getSuburbStreets(suburbId);\n      res.status(200).json(test);\n    } else\n      res.status(400).json({\n        success: false,\n        message: \"Por favor indique el fraccionamiento.\",\n      });\n  } catch (err) {\n    res.status(500).json({\n      message:\n        err.message || \"An unknown error occurs while trying to get the users.\",\n    });\n  }\n};\n\nexports.getAddressesBySuburbId = async (req, res) => {\n  try {\n    let { suburbId } = req.query;\n    if (ObjectId.isValid(suburbId)) {\n      let test = await addressService.getAddressesBySuburbId(suburbId);\n      res.status(200).json(test);\n    } else\n      res.status(400).json({\n        success: false,\n        message: \"Por favor indique el fraccionamiento.\",\n      });\n  } catch (err) {\n    res.status(500).json({\n      message:\n        err.message || \"An unknown error occurs while trying to get the users.\",\n    });\n  }\n};\n\nexports.getAddressesWithUsersStates = async (req, res) => {\n  try {\n    const { suburbId } = req.query;\n    if (ObjectId.isValid(suburbId)) {\n      const addresses = await addressService.getAddressesBySuburbId(suburbId);\n      const users = await userService.getUsersBySuburb(suburbId);\n\n      const addressesInfo = addresses.map((a) => {\n        let usersAddress = users.filter((u) =>\n          u.addressId ? u.addressId.toString() === a._id.toString() : false\n        );\n        return {\n          address: { ...a },\n          users: usersAddress.map((ua) => ({\n            id: ua._id.toString(),\n            name: ua.name,\n            active: ua.active,\n            limited: typeof ua.limited !== \"undefined\" ? ua.limited : false,\n          })),\n        };\n      });\n\n      res.status(200).json(addressesInfo);\n    } else\n      res.status(400).json({\n        success: false,\n        message: \"Por favor indique el fraccionamiento.\",\n      });\n  } catch (err) {\n    res.status(500).json({\n      message:\n        err.message || \"An unknown error occurs while trying to get the users.\",\n    });\n  }\n};\n\nexports.setLimitedUsersByAddress = async (req, res) => {\n  try {\n    const { suburbId, addressId, limited } = req.body;\n    if (ObjectId.isValid(suburbId)) {\n      const users = await userService.getUsersByAddressId(suburbId, addressId);\n\n      let proms = [];\n      users.forEach((u) => {\n        proms.push(userService.changeLimited(u._id.toString(), limited));\n      });\n      await Promise.all(proms);\n      res.status(200).json(users.map((u) => ({ ...u, limited })));\n    } else\n      res.status(400).json({\n        success: false,\n        message: \"Por favor indique el fraccionamiento.\",\n      });\n  } catch (err) {\n    res.status(500).json({\n      message:\n        err.message ||\n        \"An unknown error occurs while trying to update the users.\",\n    });\n  }\n};\n\nexports.getSuburbAutomationInfo = async (req, res) => {\n  try {\n    const { suburbId } = req.query;\n    if (ObjectId.isValid(suburbId)) {\n      const addresses = await addressService.getAddressesBySuburbId(suburbId);\n      const users = await userService.getUsersBySuburb(suburbId);\n      const addressesInfo = addresses.map((a) => {\n        let usersAddress = users.filter((u) =>\n          u.addressId ? u.addressId.toString() === a._id.toString() : false\n        );\n        return {\n          address: { ...a },\n          status: {\n            active: usersAddress.some((u) => u.active),\n            limited: usersAddress\n              .filter((u) => u.active)\n              .some((u) =>\n                typeof u.limited !== \"undefined\" ? u.limited : false\n              ),\n            rfids: usersAddress.map((u) => u.rfids || []).flat(),\n          },\n        };\n      });\n\n      res.status(200).json(addressesInfo);\n    } else {\n      res.status(400).json({\n        success: false,\n        message: \"Por favor indique el fraccionamiento.\",\n      });\n    }\n  } catch (err) {\n    res.status(500).json({\n      message:\n        err.message ||\n        \"An unknown error occurs while trying to get automation info.\",\n    });\n  }\n};\n","const userService = require(\"../logic/userService\");\nconst userTypes = require(\"../constants/types\").userTypes;\nconst SuburbInvite = require(\"../models/suburbInvite\");\nconst validateRecaptcha = require(\"../logic/auth\").validateRecaptcha;\nconst handleFile = require(\"../controllers/handleFile\");\nexports.saveGoogleUser = (req, res, next) => {\n  //get user data here\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    appleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //save the user here\n      userService\n        .saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          facebookId,\n          googleId,\n          appleId,\n          userConfirmed: true,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.saveFacebookUser = (req, res, next) => {\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    appleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //save the user here\n      userService\n        .saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          facebookId,\n          appleId,\n          googleId,\n          userConfirmed: true,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.saveAppleUser = (req, res, next) => {\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    appleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //save the user here\n      userService\n        .saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          facebookId,\n          googleId,\n          appleId,\n          userConfirmed: true,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.updateUserPicture = (req, res) => {\n  let { userId, photoUrl } = req.body;\n  userService\n    .updateUserPicture(userId, photoUrl)\n    .then((updated) => {\n      res\n        .status(\"200\")\n        .json({ success: true, message: \"profile picture updated.\" });\n    })\n    .catch((err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    });\n};\n\nexports.saveEmailUser = (req, res, next) => {\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    appleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //if the user is registered through email credentials the user needs to be confirmed through an email\n      userService\n        .saveUserWithPassword({\n          name,\n          lastName,\n          loginName,\n          email,\n          password: password,\n          cellphone,\n          facebookId,\n          googleId,\n          appleId,\n          userConfirmed: false,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.generateTempPassword = async (req, res) => {\n  try {\n    let { email, captchaToken } = req.body;\n    let validCaptcha = await validateRecaptcha(captchaToken);\n\n    if (validCaptcha) {\n      let tempPass = await userService.updateTempPassword(email);\n\n      if (tempPass) {\n        let sendMail = await handleFile.sendTempPassEmail(email, tempPass);\n\n        res.status(\"200\").json({\n          message: \"Se ha enviado el correo correctamente.\",\n        });\n      } else {\n        res.status(\"401\").json({\n          message: \"Hubo un problema al enviar el correo.\",\n        });\n      }\n    } else\n      res.status(\"401\").json({\n        message: \"Hubo un problema al enviar el correo.\",\n      });\n  } catch (err) {\n    console.log(\"error\", err);\n    res.status(\"404\").json({\n      message: err.message || \"Hubo un problema al enviar el correo.\",\n    });\n  }\n};\n\nexports.createUserByType = async (req, res, next) => {\n  try {\n    const { name, lastName, loginName, email, cellphone } = req.body;\n    const userType = userTypes[req.params.userType];\n    if (!userType) {\n      res.status(\"400\").json({ success: false, message: \"Bad request.\" });\n      return;\n    }\n    const result = await userService.saveUser({\n      name,\n      lastName,\n      loginName,\n      email,\n      cellphone,\n      userConfirmed: false,\n      userType,\n    });\n    res.status(\"200\").json({\n      success: true,\n      message: result.message || \"Has sido registrado correctamente.\",\n    });\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.saveUserBySuburbId = async (req, res) => {\n  try {\n    let {\n      name,\n      lastName,\n      loginName,\n      email,\n      password,\n      cellphone,\n      facebookId,\n      googleId,\n      appleId,\n      photoUrl,\n      suburbId,\n      street,\n      streetNumber,\n      code,\n      userType,\n      captchaToken, // add captcha here\n    } = req.body;\n    let validCaptcha = await validateRecaptcha(captchaToken);\n    if (validCaptcha) {\n      let getcode = await SuburbInvite.GetInviteByCode(code);\n      let save = null;\n      if (password && password.trim() !== \"\") {\n        save = await userService.saveUserWithPassword({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          photoUrl,\n          facebookId,\n          googleId,\n          appleId,\n          suburb: suburbId,\n          street,\n          streetNumber,\n          userType,\n          userConfirmed: false, // if the user is an email user the user needs to confirm\n        });\n      } else {\n        save = await userService.saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          photoUrl,\n          facebookId,\n          googleId,\n          appleId,\n          suburb: suburbId,\n          street,\n          streetNumber,\n          userType,\n          userConfirmed: true,\n        });\n      }\n      let updateCode = await SuburbInvite.UpdateSuburbInviteUsed(\n        code,\n        save.userData._doc._id.toString()\n      );\n\n      res.status(\"200\").json({\n        success: true,\n        message: updateCode.message || \"Has sido registrado correctamente.\",\n      });\n    } else res.status(\"401\").json({ success: false, message: \"invalid token\" });\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserByType = async (req, res, next) => {\n  try {\n    const userType = userTypes[req.params.userType];\n    if (!userType) {\n      res.status(\"400\").json({ success: false, message: \"Bad request.\" });\n      return;\n    }\n    const result = await userService.getUserByType(userType);\n    res.status(\"200\").json({ success: true, data: result });\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserInfo = async (req, res, next) => {\n  try {\n    userService.getUserByToken(req.query.token).then(\n      (result) => {\n        res.status(\"200\").json(result);\n      },\n      (err) => {\n        res\n          .status(\"400\")\n          .json({ success: false, message: err.message || \"Bad request.\" });\n      }\n    );\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserById = async (req, res, next) => {\n  try {\n    let result = await userService.getUserById(req.query.id);\n    res.status(\"200\").json(result);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserFavs = async (req, res, next) => {\n  try {\n    let userFavs = await userService.getUserFavorites(req.query.userId);\n    res.status(\"200\").json(userFavs);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.addUserFavs = async (req, res, next) => {\n  try {\n    let { favs, userId } = req.body;\n    let userFavs = await userService.saveUserFavorites(userId, favs);\n    res.status(\"200\").json(userFavs);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.removeUserFavs = async (req, res, next) => {\n  try {\n    let { favs, userId } = req.body;\n    let userFavs = await userService.removeUserFavorites(userId, favs);\n    res.status(\"200\").json(userFavs);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.addUserPushToken = async (req, res, next) => {\n  try {\n    let { pushToken, userId } = req.body;\n    let pushTokens = await userService.addUserPushToken(userId, pushToken);\n    res.status(\"200\").json(pushTokens);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUsersByAddress = async (req, res) => {\n  try {\n    let { suburbId, street, streetNumber } = req.query;\n    let users = await userService.getUsersByAddress(\n      suburbId,\n      street,\n      streetNumber\n    );\n    res.status(\"200\").json(users);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.deleteUserInfo = async (req, res, next) => {\n  try {\n    let { userId } = req.body;\n    let removeUserInfo = await userService.deleteUserInfo(userId);\n    res.status(\"200\").json(removeUserInfo);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getSignedUserTerms = async (req, res) => {\n  try {\n    let { userId } = req.query;\n    let signedUserTerms = await userService.getSignedUserTerms(userId);\n    res.status(\"200\").json(signedUserTerms);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.isPasswordTemp = async (req, res) => {\n  try {\n    let { user, password } = req.query;\n    let buff = Buffer.from(password, \"base64\");\n    let decodedPassword = buff.toString(\"utf-8\");\n    let isPassTemp = await userService.isPasswordTemp(user, decodedPassword);\n    res.status(\"200\").json(isPassTemp);\n  } catch (err) {\n    res.status(\"400\").json({\n      success: false,\n      message: err.message || \"Bad request.\",\n    });\n  }\n};\n\nexports.updatePassword = async (req, res) => {\n  try {\n    let { userId, password, tempPassword } = req.body;\n    let buff = Buffer.from(password, \"base64\");\n    let decodedPassword = buff.toString(\"utf-8\");\n\n    let buff2 = Buffer.from(tempPassword, \"base64\");\n    let decodedTempPassword = buff2.toString(\"utf-8\");\n\n    let isPassTemp = await userService.updatePassword(\n      userId,\n      decodedPassword,\n      decodedTempPassword\n    );\n    res.status(\"200\").json(isPassTemp);\n  } catch (err) {\n    res.status(\"400\").json({\n      success: false,\n      message: err.message || \"Bad request.\",\n    });\n  }\n};\n\nexports.updateCurrentPassword = async (req, res) => {\n  try {\n    let { userId, currentPassword, newPassword } = req.body;\n    currentPassword = Buffer.from(currentPassword, \"base64\").toString(\"utf-8\");\n    newPassword = Buffer.from(newPassword, \"base64\").toString(\"utf-8\");\n    let result = await userService.updateCurrentPassword(\n      userId,\n      currentPassword,\n      newPassword\n    );\n    res.status(\"200\").json(result);\n  } catch (err) {\n    res.status(\"400\").json({\n      success: false,\n      message: err.message || \"Bad request.\",\n    });\n  }\n};\n\nexports.signUserTerms = async (req, res) => {\n  try {\n    let { userId, termsVersion } = req.body;\n    let update = await userService.signUserTerms(userId, termsVersion);\n    res.status(\"200\").json(update);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.updateUserType = async (req, res) => {\n  try {\n    let { userId, userType } = req.body;\n    let update = await userService.updateUserType(userId, userType);\n    res.status(\"200\").json(update);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.enableDisableUser = async (req, res) => {\n  try {\n    let { userId, enabled } = req.body;\n    let update = await userService.enableDisableUser(userId, enabled);\n    res.status(\"200\").json(update);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.changeLimited = async (req, res) => {\n  try {\n    let { userId, limited } = req.body;\n    let update = await userService.changeLimited(userId, limited);\n    res.status(\"200\").json(update);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getIfUserIsLimited = async (req, res) => {\n  try {\n    let { userId } = req.query;\n    let isLimited = await userService.getIfUserIsLimited(userId);\n    res.status(\"200\").json(isLimited);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.addUserRfid = async (req, res) => {\n  try {\n    let { userId, rfid } = req.body;\n    let update = await userService.addUserRfid(userId, rfid);\n    res.status(\"200\").json(update);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.removeUserRfid = async (req, res) => {\n  try {\n    let { userId, rfid } = req.body;\n    let update = await userService.removeUserRfid(userId, rfid);\n    res.status(\"200\").json(update);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n","const {\n  ComputerVisionClient,\n} = require(\"@azure/cognitiveservices-computervision\");\nconst { CognitiveServicesCredentials } = require(\"@azure/ms-rest-azure-js\");\nconst computerVisionKey = process.env.VISION_KEY;\nconst computerVisionEndPoint = process.env.VISION_ENDPOINT;\n\nexports.processOCR = async (req, res) => {\n  try {\n    let data = req.files[0];\n    const cognitiveServiceCredentials = new CognitiveServicesCredentials(\n      computerVisionKey\n    );\n    const client = new ComputerVisionClient(\n      cognitiveServiceCredentials,\n      computerVisionEndPoint\n    );\n\n    const options = {\n      //   maxCandidates: 5,\n      //   language: \"en\",\n    };\n    let response = await client.recognizePrintedTextInStream(\n      true,\n      data.buffer,\n      options\n    );\n    res.status(\"200\").json(response);\n  } catch (err) {\n    console.error(err);\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n","const Address = require(\"../models/Address\");\nconst Suburb = require(\"../models/suburb\");\nconst User = require(\"../models/user\");\n\nconst migrateAddresses = async (suburbId) => {\n  try {\n    let suburbAddresses = await Suburb.GetSuburbStreets(suburbId);\n    let promises = [];\n    suburbAddresses.streets.forEach((address) => {\n      promises.push(\n        Address.SaveSuburbStreet(suburbId, address.street, address.numbers)\n      );\n    });\n    let savedAddresses = await Promise.all(promises);\n    let suburbUsers = await User.getUsersBySuburb(suburbId);\n    console.log(suburbUsers);\n    let updateUserPromises = [];\n    savedAddresses = [].concat(...savedAddresses);\n    suburbUsers.forEach((user) => {\n      let address = savedAddresses.filter(\n        (a) => a.name === user.street && a.number === user.streetNumber\n      );\n      address = address.length > 0 ? address[0]._id.toString() : \"\";\n      if (address)\n        updateUserPromises.push(\n          User.updateUser({\n            ...user,\n            _id: user._id.toString(),\n            addressId: address,\n          })\n        );\n    });\n    let saveUsers = await Promise.all(updateUserPromises);\n    return savedAddresses;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getSuburbStreets = async (suburbId) => {\n  try {\n    return await Address.GetStreetsBySuburb(suburbId);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst saveSuburbStreet = async (suburbId, street) => {\n  try {\n    return await Address.SaveSuburbStreet(\n      suburbId,\n      street.street,\n      street.numbers\n    );\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getAddressByNameAndNumber = async (streetName, number) => {\n  try {\n    return await Address.GetAddressByNameAndNumber(streetName, number);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getAddressesBySuburbId = async (suburbId) => {\n  try {\n    return await Address.GetAddressesBySuburb(suburbId);\n  } catch (err) {\n    throw err;\n  }\n};\n\nmodule.exports = {\n  migrateAddresses,\n  getSuburbStreets,\n  saveSuburbStreet,\n  getAddressByNameAndNumber,\n  getAddressesBySuburbId,\n};\n","const User = require(\"../models/user\");\nconst userTypes = require(\"../constants/types\").userTypes;\nconst axios = require(\"axios\").default;\n\nconst openApi = [\n  \"/api/checkAuth\",\n  \"/api/auth/fbtoken\",\n  \"/api/auth/googletoken\",\n  \"/api/auth/appletoken\",\n  \"/api/saveGoogleUser\",\n  \"/api/saveFacebookUser\",\n  \"/api/saveAppleUser\",\n  \"/api/saveEmailUser\",\n  \"/api/generateTempPassword\",\n  \"/api/saveUserBySuburb\",\n  \"/api/signUp\",\n  \"/api/validateTokenPath\",\n  \"/api/cp/getCPInfo\",\n  \"/api/file/upload\",\n  \"/api/suburb/getInviteByCode\",\n  \"/api/notification/test\",\n  \"/api/suburb/getAllStreets\",\n  \"/api/suburb/getConfig\", //remover esta api de esta lista\n  \"/api/userInfo/isPasswordTemp\",\n  // \"/api/notification/newPayment\", // add api key for this kind of requests\n  // \"/api/notification/approveRejectPayment\", // add api key for this kind of requests\n  // \"/api/suburb/getAddressesBySuburbId\", // add api key for this kind of requests\n];\n\nconst apiWithKey = [\n  \"/api/notification/newPayment\", // add api key for this kind of requests\n  \"/api/notification/approveRejectPayment\", // add api key for this kind of requests\n  \"/api/suburb/getAddressesBySuburbId\", // add api key for this kind of requests\n  \"/api/suburb/getSuburbAutomationInfo\",\n  \"/api/auth/internal/auth\",\n  \"/api/notification/newReservation\",\n  \"/api/notification/approveRejectReservation\",\n];\n\nconst protectedApi = [\"/api/suburb/approveReject\"];\n\nexports.Auth = class Auth {\n  validateToken(token) {\n    let user = User;\n\n    let def = user.isValidToken(token);\n    return new Promise(\n      (resolve, reject) => {\n        def.then(function (isValid) {\n          if (isValid) resolve({ valid: true, message: \"the token is valid\" });\n          else\n            resolve({\n              valid: false,\n              message: \"the token is not valid\",\n            });\n        });\n      },\n      (err) => reject({ valid: false, message: \"The token cannot be checked.\" })\n    );\n  }\n\n  validateAdminUser(token) {\n    let user = User;\n    let getPayload = user.getTokenPayload(token);\n    return new Promise(\n      (resolve, reject) => {\n        getPayload.then((payload) => {\n          if (payload.userType !== userTypes.admin)\n            reject({\n              valid: false,\n              message:\n                \"The user does not have permissions to execute this api.\",\n            });\n          else resolve({ valid: true, message: \"Ok\" });\n        });\n      },\n      (err) => {\n        console.log(err);\n        reject({\n          valid: false,\n          message: \"The user does not have permissions to execute this api.\",\n        });\n      }\n    );\n  }\n\n  isOpenApi(apiPath) {\n    return openApi.indexOf(apiPath) !== -1;\n  }\n\n  isApiWithKey(apiPath) {\n    return apiWithKey.indexOf(apiPath) !== -1;\n  }\n\n  isProtectedApi(apiPath) {\n    return protectedApi.indexOf(apiPath) !== -1 ? true : false;\n  }\n\n  validateApiRequest(apiPath, token, apiKey) {\n    if (this.isOpenApi(apiPath))\n      return new Promise((resolve) =>\n        resolve({ valid: true, message: \"the api is open.\" })\n      );\n    else if (this.isApiWithKey(apiPath)) {\n      // check if the api key is valid\n      return new Promise((resolve) => {\n        process.env.PROTECTED_API_KEY === apiKey\n          ? resolve({ valid: true, message: \"the api key is ok\" })\n          : reject({ valid: false, message: \"unknown api key\" });\n      });\n    } else if (this.isProtectedApi(apiPath)) {\n      return new Promise((resolve, reject) => {\n        this.validateAdminUser(token)\n          .then((res) => {\n            let validateToken = this.validateToken(token);\n            validateToken\n              .then((res) => resolve(res))\n              .catch((err) => reject(err));\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    } else {\n      return this.validateToken(token);\n    }\n  }\n};\n\nexports.validateRecaptcha = async (token) => {\n  try {\n    const secretKey = process.env.RECAPTCHA_SECRET;\n    const verificationURL = `https://www.google.com/recaptcha/api/siteverify?secret=${secretKey}&response=${token}`;\n    let response = await axios.post(\n      verificationURL,\n      {},\n      {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n        },\n      }\n    );\n\n    let captchaResult = response.data;\n    return captchaResult.success;\n  } catch (err) {\n    throw err;\n  }\n};\n","const User = require(\"../models/user\");\nconst menus = require(\"../constants/menusConfig\").menus;\n\n/**\n * Get menus by logged user\n */\nexports.getMenusByUser = async (userToken) => {\n  return new Promise((resolve, reject) => {\n    let getPayload = User.getTokenPayload(userToken);\n    getPayload.then(payload => {\n      const { userType, loginName } = payload;\n\n      let userMenus = menus.filter(menu => {\n        let types = menu.validUserTypes.filter(g => g.toLowerCase() === userType.toLowerCase());\n        return types.length > 0;\n      }).map(item => ({ name: item.name, path: item.path, visible: item.visible, icon: item.icon, order: item.order }));\n\n\n      resolve(userMenus);\n    }, errP => {\n      reject({ valid: false, message: 'The token is not allowed' });\n    });\n  });\n};","const PostalCode = require(\"../models/postalCode\");\n\n\nexports.getCPInfo = async (postalCode) => {\n    return new Promise((resolve, reject) => {\n        if (postalCode.length > 2) {\n            getInfo = PostalCode.getCPInfo(postalCode);\n            getInfo.then(cp => {\n                resolve(cp);\n            }, err => {\n                reject({ valid: false, message: 'No se pudo obtener la informaion del codigo postal.' });\n            });\n        }\n        else {\n            reject({ valid: false, message: 'La longitud del codigo postal no es valida.' });\n        }\n    });\n}","const Expo = require(\"expo-server-sdk\").Expo;\n\nlet expo = new Expo();\n\nconst getMessagesBatches = (pushTokens, message) => {\n  let messages = [];\n  pushTokens.forEach((token) => {\n    if (!Expo.isExpoPushToken(token)) {\n      console.error(`Push token ${token} is not a valid push token`);\n      //continue;\n    }\n\n    messages = [...messages, { ...message, to: token }];\n  });\n  return expo.chunkPushNotifications(messages);\n};\n\nconst sendExpoNotification = async (chunks) => {\n  try {\n    //(async () => {\n    // Send the chunks to the Expo push notification service. There are\n    // different strategies you could use. A simple one is to send one chunk at a\n    // time, which nicely spreads the load out over time:\n    let tickets = [];\n    for (let chunk of chunks) {\n      try {\n        let ticketChunk = await expo.sendPushNotificationsAsync(chunk);\n        console.log(ticketChunk);\n        tickets.push(...ticketChunk);\n        // NOTE: If a ticket contains an error code in ticket.details.error, you\n        // must handle it appropriately. The error codes are listed in the Expo\n        // documentation:\n        // https://docs.expo.io/push-notifications/sending-notifications/#individual-errors\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    return tickets;\n    //})();\n  } catch (err) {\n    console.log(\"send expo notification error\", err);\n    throw err;\n  }\n};\n\nconst checkTickets = async (tickets) => {\n  // Later, after the Expo push notification service has delivered the\n  // notifications to Apple or Google (usually quickly, but allow the the service\n  // up to 30 minutes when under load), a \"receipt\" for each notification is\n  // created. The receipts will be available for at least a day; stale receipts\n  // are deleted.\n  //\n  // The ID of each receipt is sent back in the response \"ticket\" for each\n  // notification. In summary, sending a notification produces a ticket, which\n  // contains a receipt ID you later use to get the receipt.\n  //\n  // The receipts may contain error codes to which you must respond. In\n  // particular, Apple or Google may block apps that continue to send\n  // notifications to devices that have blocked notifications or have uninstalled\n  // your app. Expo does not control this policy and sends back the feedback from\n  // Apple and Google so you can handle it appropriately.\n  let receiptIds = [];\n  for (let ticket of tickets) {\n    // NOTE: Not all tickets have IDs; for example, tickets for notifications\n    // that could not be enqueued will have error information and no receipt ID.\n    if (ticket.id) {\n      receiptIds.push(ticket.id);\n    }\n  }\n\n  let receiptIdChunks = expo.chunkPushNotificationReceiptIds(receiptIds);\n  //(async () => {\n  // Like sending notifications, there are different strategies you could use\n  // to retrieve batches of receipts from the Expo service.\n  for (let chunk of receiptIdChunks) {\n    try {\n      let receipts = await expo.getPushNotificationReceiptsAsync(chunk);\n      console.log(receipts);\n\n      // The receipts specify whether Apple or Google successfully received the\n      // notification and information about an error, if one occurred.\n      for (let receiptId in receipts) {\n        let { status, message, details } = receipts[receiptId];\n        if (status === \"ok\") {\n          //continue;\n        } else if (status === \"error\") {\n          console.error(\n            `There was an error sending a notification: ${message}`\n          );\n          if (details && details.error) {\n            // The error codes are listed in the Expo documentation:\n            // https://docs.expo.io/push-notifications/sending-notifications/#individual-errors\n            // You must handle the errors appropriately.\n            console.error(`The error code is ${details.error}`);\n          }\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  //})();\n};\n\nconst sendPushNotification = async (pushTokens, message) => {\n  try {\n    console.log(\"getting chunks...\");\n    let chunks = getMessagesBatches(pushTokens, message);\n    console.log(\"chunks\", chunks);\n\n    console.log(\"send push notifications\");\n    let tickets = await sendExpoNotification(chunks);\n    console.log(\"await check tickets\");\n    await checkTickets(tickets);\n  } catch (ex) {\n    console.log(\"notification error details:\", ex);\n    throw ex;\n  }\n};\n\nmodule.exports = {\n  sendPushNotification,\n};\n","const Suburb = require(\"../models/suburb\");\nconst suburbStatus = require(\"../constants/types\").suburbStatus;\nconst SuburbInvite = require(\"../models/suburbInvite\");\nconst User = require(\"../models/user\");\nconst SuburbConfig = require(\"../models/suburbConfig\");\nconst SuburbStreet = require(\"../models/suburbStreet\");\nconst ObjectId = require(\"mongoose\").Types.ObjectId;\n\nconst CryptoJS = require(\"crypto-js\");\n\nvar pjson = require(\"../../package.json\");\nconst { Mongoose } = require(\"mongoose\");\n\nconst getSuburbStatus = (statusName) => {\n  let status = suburbStatus.filter((st) => st.status === statusName);\n  return status[0];\n};\n\nconst encryption = (data) => {\n  if (!data) return \"\";\n  return CryptoJS.AES.encrypt(data, pjson.cryptoKey).toString();\n};\n\nconst decryption = (data) => {\n  if (!data) return \"\";\n  var bytes = CryptoJS.AES.decrypt(data, pjson.cryptoKey);\n  return bytes.toString(CryptoJS.enc.Utf8);\n};\n\nconst saveSuburb = (suburbObj) => {\n  return new Promise((resolve, reject) => {\n    Suburb.SaveSuburb(suburbObj).then((sub, err) => {\n      if (!err)\n        resolve({\n          success: true,\n          message: \"La colonia fue guardada correctamente.\",\n          id: sub.id,\n        });\n      else\n        reject({\n          success: false,\n          message:\n            err.message || \"Ocurrio un error al intentar guardar la colonia.\",\n        });\n    });\n  });\n};\n\nconst suburbAddStatus = (id, status) => {\n  return new Promise((resolve, reject) => {\n    Suburb.UpdateStatus(id, status).then((sub, err) => {\n      if (!err)\n        resolve({\n          success: true,\n          message: \"El status de la colonia fue actualizado correctamente.\",\n        });\n      else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar actualizar el estatus de la colonia.\",\n        });\n    });\n  });\n};\n\nconst suburbAddStatusByName = (name, postalCode, status) => {\n  return new Promise((resolve, reject) => {\n    Suburb.UpdateStatusByName(name, postalCode, status).then((sub, err) => {\n      if (!err)\n        resolve({\n          success: true,\n          message: \"El status de la colonia fue actualizado correctamente.\",\n        });\n      else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar actualizar el estatus de la colonia.\",\n        });\n    });\n  });\n};\n\nconst getSuburbByAdminUser = (userId) => {\n  return new Promise((resolve, reject) => {\n    Suburb.GetSuburbByUserId(userId).then((sub, err) => {\n      if (!err) resolve(sub);\n      else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar obtener la colonia por usuario administrador.\",\n        });\n    });\n  });\n};\n\nconst getSuburbById = (suburbId) => {\n  return new Promise((resolve, reject) => {\n    Suburb.GetSuburb(suburbId)\n      .then((sub, err) => {\n        if (!err) resolve(sub);\n        else\n          reject({\n            success: false,\n            message:\n              err.message || \"Ocurrio un error al intentar obtener la colonia.\",\n          });\n      })\n      .catch((err) => reject(err));\n  });\n};\n\nconst addSuburbInvite = (suburbId, name, street, streetNumber, userType) => {\n  return new Promise((resolve, reject) => {\n    let _code =\n      Math.random().toString(36).substring(2, 4).toUpperCase() +\n      Math.random().toString(36).substring(2, 4).toUpperCase();\n    console.log(encryption(street));\n    SuburbInvite.SaveSuburbInvite({\n      code: _code,\n      suburbId,\n      name,\n      street: encryption(street),\n      streetNumber: encryption(streetNumber),\n      userType,\n    }).then((subInv, err) => {\n      if (!err) {\n        Suburb.AddSuburbInvite(suburbId, subInv._id.toString()).then(\n          (sub, err) => {\n            if (!err) resolve(subInv);\n            else\n              reject({\n                success: false,\n                message:\n                  err.message ||\n                  \"Ocurrio un error al intentar agregar una invitacion a usuario\",\n              });\n          }\n        );\n      } else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar agregar una invitacion a usuario\",\n        });\n    });\n  });\n};\n\nconst getSuburbInvite = (code) => {\n  return new Promise((resolve, reject) => {\n    SuburbInvite.GetInviteByCode(code)\n      .then((subInvite, err) => {\n        if (!err) {\n          Suburb.GetSuburbBasicInfo(subInvite.suburbId.toString()).then(\n            (suburb, err) => {\n              if (!err) {\n                const { street, streetNumber, ...props } = subInvite._doc;\n                const result = {\n                  suburb: {\n                    ...suburb,\n                  },\n                  invite: {\n                    street: decryption(street),\n                    streetNumber: decryption(streetNumber),\n                    ...props,\n                  },\n                };\n                resolve(result);\n              } else {\n                reject({\n                  success: false,\n                  message:\n                    err.message ||\n                    \"Ocurrio un error al intentar obtener la invitación\",\n                });\n              }\n            }\n          );\n        } else\n          reject({\n            success: false,\n            message:\n              err.message ||\n              \"Ocurrio un error al intentar obtener la invitación\",\n          });\n      })\n      .catch((err) => {\n        reject({\n          sucess: false,\n          message:\n            err.message ||\n            \"Ocurrion un error al intentar obtener la invitación\",\n        });\n      });\n  });\n};\n\nconst saveSuburbConfig = async (suburbId, config) => {\n  try {\n    let suburbData = await Suburb.GetSuburb(suburbId);\n    if (!ObjectId.isValid(suburbData.config)) {\n      let saveConfig = await SuburbConfig.SaveConfig(config);\n      await Suburb.SaveSuburbConfig(suburbId, saveConfig._id);\n      return {\n        success: true,\n        message: \"la configuracion fue agregada con exito.\",\n        id: saveConfig.id,\n      };\n    } else {\n      let updateConfig = await SuburbConfig.UpdateConfig(\n        suburbData.config.toString(),\n        config\n      );\n      return {\n        success: true,\n        message: \"la configuracion fue actualizada con exito.\",\n      };\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getSuburbConfig = async (suburbId) => {\n  try {\n    return await Suburb.GetSuburbConfig(suburbId);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst saveSuburbStreet = async (suburbId, street) => {\n  try {\n    let suburbData = await Suburb.GetSuburbStreets(suburbId);\n    let selectedStreet = suburbData.streets\n      ? suburbData.streets.filter(\n          (st) => st.street.toLowerCase() === street.street.toLowerCase()\n        )\n      : [];\n    if (selectedStreet.length === 0) {\n      let saveStreet = await SuburbStreet.SaveStreet(street);\n      await Suburb.SaveSuburbStreet(suburbId, saveStreet._id);\n      return {\n        success: true,\n        message: \"la calle fue agregada con exito.\",\n        id: saveStreet.id,\n      };\n    } else {\n      let updateStreet = await SuburbStreet.UpdateStreet(\n        selectedStreet[0]._id,\n        street\n      );\n      return { success: true, message: \"la calle fue actualizada con exito.\" };\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getSuburbStreets = async (suburbId) => {\n  try {\n    return await Suburb.GetSuburbStreets(suburbId);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getUsersBySuburb = async (suburbId) => {\n  try {\n    return await User.getUsersBySuburb(suburbId);\n  } catch (err) {\n    throw err;\n  }\n};\n\nmodule.exports = {\n  saveSuburb,\n  suburbAddStatus,\n  suburbAddStatusByName,\n  getSuburbByAdminUser,\n  getSuburbById,\n  getSuburbStatus,\n  addSuburbInvite,\n  getSuburbInvite,\n  saveSuburbConfig,\n  getSuburbConfig,\n  saveSuburbStreet,\n  getSuburbStreets,\n  getUsersBySuburb,\n};\n","const User = require(\"../models/user\");\nconst request = require(\"request\");\nconst GlobalConfig = require(\"../models/globalConfig\");\nconst userTypes = require(\"../constants/types\").userTypes;\nconst AddressService = require(\"../logic/addressService\");\n\nconst saveUser = (userObj) => {\n  return new Promise((resolve, reject) => {\n    User.getLogin(userObj.loginName).then(\n      async (login) => {\n        if (login) {\n          reject({\n            success: false,\n            message: \"El usuario existe actualmente en la base de datos.\",\n          });\n        } else {\n          let addressId = (\n            await AddressService.getAddressByNameAndNumber(\n              userObj.street,\n              userObj.streetNumber\n            )\n          )._id.toString();\n          //create the user\n          User.saveUser(\n            userObj.userType\n              ? { ...userObj, addressId }\n              : { ...userObj, userType: userTypes.guest, addressId }\n          ).then(\n            (usr, err) => {\n              //check if there is an error\n              if (!err)\n                resolve({\n                  success: true,\n                  message: \"Has sido registrado correctamente.\",\n                  userData: { ...usr },\n                });\n              else\n                reject({\n                  success: false,\n                  message: err.message || \"No se pudo registrar el usuario.\",\n                });\n            },\n            (err) => {\n              reject({ success: false, message: err.message });\n            }\n          );\n        }\n      },\n      (err) => {\n        reject({\n          success: false,\n          message:\n            err.message || \"Ocurrio un error al tratar de guardar el usuario.\",\n        });\n      }\n    );\n  });\n};\n\nconst updateUser = async (userObj) => {\n  return new Promise((resolve, reject) => {\n    User.updateUser(userObj).then(\n      (usr, err) => {\n        if (!err)\n          resolve({\n            success: true,\n            message: \"Ha sido actualizado correctamente.\",\n          });\n        else\n          reject({\n            success: false,\n            message: err.message || \"No se pudo actualizar el usuario.\",\n          });\n      },\n      (err) => {\n        reject({ success: false, message: err.message });\n      }\n    );\n  });\n};\n\nconst updateUserPicture = async (userId, photoUrl) => {\n  try {\n    return await User.updateUserPicture(userId, photoUrl);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst validateRecaptcha = async (token) => {\n  const secretKey = process.env.RECAPTCHA_SECRET;\n  const verificationURL = `https://www.google.com/recaptcha/api/siteverify?secret=${secretKey}&response=${token}`;\n\n  return new Promise((resolve, reject) => {\n    request.post(verificationURL, (error, resG, body) => {\n      if (error)\n        reject({\n          success: false,\n          message:\n            \"Por favor intenta de nuevo (no es posible validar recaptcha).\",\n        });\n      let status = JSON.parse(body);\n      if (!status.success)\n        reject({ success: false, message: \"Por favor intenta de nuevo.\" });\n      else if (status.score <= 0.5)\n        reject({\n          success: false,\n          message: \"Por favor intenta de nuevo (score demasiado bajo).\",\n        });\n      else resolve({ success: true, message: \"recaptcha valido.\" });\n    });\n  });\n};\n\nconst saveUserWithPassword = async (userObj) => {\n  const { password } = userObj;\n  return new Promise((resolve, reject) => {\n    User.encryptPassword(password).then(\n      async (resEncrypt) => {\n        try {\n          let encryptedPassword = resEncrypt.hash;\n          userObj.password = encryptedPassword;\n\n          let addressId = (\n            await AddressService.getAddressByNameAndNumber(\n              userObj.street,\n              userObj.streetNumber\n            )\n          )._id.toString();\n          saveUser({ ...userObj, addressId }).then(\n            (result) => {\n              resolve(result);\n            },\n            (err) => {\n              reject(err);\n            }\n          );\n        } catch (err) {\n          reject({\n            success: false,\n            message: err.message || \"No se pudo obtener la direccion\",\n          });\n        }\n      },\n      (err) => {\n        reject({ success: false, message: err.message || \"Bad request.\" });\n      }\n    );\n  });\n};\n\nconst getUserByType = async (userType) => {\n  try {\n    return await User.find({\n      userType: userType,\n    });\n  } catch (ex) {\n    return ex;\n  }\n};\n\nconst getUserByToken = async (token) => {\n  try {\n    let payload = await User.getTokenPayload(token);\n    return await User.findById(payload.userId);\n  } catch (ex) {\n    return ex;\n  }\n};\n\nconst getUserById = async (id) => {\n  try {\n    return await User.getUserById(id);\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst getUserFavorites = async (userId) => {\n  try {\n    let payload = await User.getUserFavs(userId);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst saveUserFavorites = async (userId, favs) => {\n  try {\n    let payload = await User.addUserFavs(userId, favs);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst removeUserFavorites = async (userId, favs) => {\n  try {\n    let payload = await User.removeUserFavs(userId, favs);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst addUserPushToken = async (userId, pushToken) => {\n  try {\n    let payload = await User.addUserPushToken(userId, pushToken);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst getUsersBySuburb = async (suburbId) => {\n  try {\n    let users = await User.getUsersBySuburb(suburbId);\n    return users;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getUsersBySuburbStreet = async (suburbId, street) => {\n  try {\n    let users = await User.getUsersBySuburbStreet(suburbId, street);\n    return users;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getUsersByAddress = async (suburbId, street, streetNumber) => {\n  try {\n    let addressId = (\n      await AddressService.getAddressByNameAndNumber(street, streetNumber)\n    )._id.toString();\n    let users = await User.getUsersByAddress(suburbId, addressId);\n    return users;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getUsersByAddressId = async (suburbId, addressId) => {\n  try {\n    return await User.getUsersByAddress(suburbId, addressId);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getAdminUsers = async (suburbId) => {\n  try {\n    let adminUsers = await User.getAdminUsers(suburbId);\n    return adminUsers;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst isPasswordTemp = async (user, password) => {\n  try {\n    let isPasTemp = await User.isPasswordTemp(user, password);\n    return isPasTemp;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst updatePassword = async (user, password, tempPassword) => {\n  try {\n    let updatePass = await User.updatePassword(user, password, tempPassword);\n    return updatePass;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst deleteUserInfo = async (userId) => {\n  try {\n    let payload = await User.deleteUserInfo(userId);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst getSignedUserTerms = async (userId) => {\n  try {\n    let user = await User.getUserLeanById(userId);\n    let terms = await GlobalConfig.GetTermsAndCons();\n    let userTerms = user.signedTerms || [];\n    //logic to check if the latest term is signed\n    let latestTerms = terms\n      .map((t) => parseFloat(t))\n      .reduce((i, n) => (i > n ? i : n));\n    return {\n      signed: userTerms.indexOf(latestTerms) !== -1,\n      termsVersion: latestTerms,\n    };\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst signUserTerms = async (userId, termsVersion) => {\n  try {\n    let updateTerms = await User.updateUserTerms(userId, termsVersion);\n    return updateTerms;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst updateTempPassword = async (email) => {\n  try {\n    let updatePass = await User.updateTempPassword(email);\n\n    return updatePass;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst updateCurrentPassword = async (userId, currentPassword, newPassword) => {\n  try {\n    return await User.updateCurrentPassword(\n      userId,\n      currentPassword,\n      newPassword\n    );\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst updateUserType = async (userId, userType) => {\n  try {\n    if ([\"neighbor\", \"guard\", \"suburbAdmin\"].indexOf(userType) === -1)\n      throw `The user type ${userType} is not valid.`;\n    return await User.updateUserType(userId, userType);\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst enableDisableUser = async (userId, enabled) => {\n  try {\n    await User.enableDisableUser(userId, enabled);\n    return { userId, active: enabled };\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst changeLimited = async (userId, limited) => {\n  try {\n    return await User.changeLimited(userId, limited);\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst getUserLeanById = async (userId) => {\n  try {\n    return await User.getUserLeanById(userId);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getIfUserIsLimited = async (userId) => {\n  try {\n    return await User.getIfUserIsLimited(userId);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst addUserRfid = async (userId, rfid) => {\n  try {\n    return await User.addUserRfid(userId, rfid);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst removeUserRfid = async (userId, rfid) => {\n  try {\n    return await User.removeUserRfid(userId, rfid);\n  } catch (err) {\n    throw err;\n  }\n};\n\nmodule.exports = {\n  saveUser,\n  validateRecaptcha,\n  saveUserWithPassword,\n  getUserByType,\n  getUserByToken,\n  updateUser,\n  getUserFavorites,\n  saveUserFavorites,\n  removeUserFavorites,\n  getUserById,\n  addUserPushToken,\n  getUsersBySuburb,\n  getUsersBySuburbStreet,\n  getUsersByAddress,\n  getUsersByAddressId,\n  updateUserPicture,\n  deleteUserInfo,\n  getSignedUserTerms,\n  signUserTerms,\n  updateTempPassword,\n  isPasswordTemp,\n  updatePassword,\n  updateUserType,\n  enableDisableUser,\n  changeLimited,\n  getAdminUsers,\n  getUserLeanById,\n  getIfUserIsLimited,\n  updateCurrentPassword,\n  addUserRfid,\n  removeUserRfid,\n};\n","const User = require(\"../models/user\");\nconst permissions = require(\"../constants/menusConfig\").menus;\n\n\n\nconst validateWithPayload = (path, payload) => {\n    let valid =  { valid: false, message: 'la pantalla no es valida para tu usuario.' };\n    if(!payload || !payload.userType)\n        return valid;\n\n    const { userType } = payload;\n    let validPath = permissions.filter(p => {\n        let types = p.validUserTypes.filter(g => g.toLowerCase() === userType.toLowerCase());\n        return types.length > 0 && p.path.toLowerCase() === path.toLocaleLowerCase();\n\n    });\n\n    if (validPath.length > 0)\n        valid = { valid: true, message: 'ok' };\n    return valid;\n};\n\n\nexports.permissionValid = (path, jwt) => {\n    return new Promise((resolve, reject) => {\n        let user = User;\n        let isValid = user.isValidToken(jwt);\n        isValid.then(res => {\n            let getPayload = user.getTokenPayload(jwt);\n            getPayload.then(payload => {\n                let valid = validateWithPayload(path, payload);\n                if (valid.valid)\n                    resolve(valid);\n                else\n                    reject(valid);\n            }, errP => {\n                reject({ valid: false, message: 'los datos de la sesión no son validos.' });\n            });\n        }, err => {\n            reject({ valid: false, message: 'el token de la sesión no es valido.' });\n        });\n    });\n}","const Auth = require(\"../logic/auth\").Auth;\n\nconst validApiRequest = (apiPath, token, apiKey) => {\n  return new Promise((resolve, reject) => {\n    let auth = new Auth();\n    auth.validateApiRequest(apiPath, token, apiKey).then(\n      (res) => {\n        resolve(res);\n      },\n      (err) =>\n        reject({\n          valid: false,\n          message: err.message ? err.message : `Error: ${JSON.stringify(err)}`,\n        })\n    );\n  });\n};\n\nexports.checkApiAuth = (req, res, next) => {\n  console.log(`validando si el request esta autenticado...`);\n  //check request headers over here to know if the request is authenticated\n  let apiPath = req.baseUrl,\n    token = req.headers[\"authorization\"],\n    apiKey =\n      req.headers[\"api-key\"] || req.query[\"api-key\"] || req.body[\"api-key\"];\n\n  validApiRequest(apiPath, token, apiKey).then(\n    (result) => {\n      if (result.valid) next();\n      else\n        res\n          .status(\"401\")\n          .json({ success: false, error: \"Unauthorized request.\" });\n    },\n    (err) =>\n      res.status(\"401\").json({\n        success: false,\n        error: err.message || \"An error occurs while validating the request.\",\n      })\n  );\n};\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst AddressSchema = new mongoose.Schema({\n  suburbId: {\n    type: String,\n  },\n  name: {\n    type: String,\n  },\n  number: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nAddressSchema.statics = {\n  SaveSuburbStreet: function (suburbId, name, numbers) {\n    let addresses = numbers.map((number) => ({ suburbId, name, number }));\n    return new Promise((resolve, reject) => {\n      Address.insertMany(addresses)\n        .then((value) => {\n          resolve(value);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  },\n  GetStreetsBySuburb: function (suburbId) {\n    return new Promise((resolve, reject) => {\n      this.find({ suburbId: suburbId })\n        .lean()\n        .exec((err, result) => {\n          if (err) reject(err);\n          if (result) {\n            let addresses = result.map((s) => ({\n              street: s.name,\n              number: s.number,\n              transtime: s.transtime,\n            }));\n            let streets = addresses.reduce((streets, street) => {\n              if (\n                streets.filter((s) => s.street === street.street).length > 0\n              ) {\n                let existing = streets.filter(\n                  (s) => s.street === street.street\n                )[0];\n                streets = [\n                  ...streets.filter((s) => s.street !== street.street),\n                  {\n                    ...existing,\n                    numbers: [...existing.numbers.map((e) => e), street.number],\n                  },\n                ];\n              } else {\n                streets = [\n                  ...streets,\n                  {\n                    street: street.street,\n                    numbers: [street.number],\n                    transtime: street.transtime,\n                  },\n                ];\n              }\n              return streets;\n            }, []);\n            resolve({ streets: streets });\n          }\n        });\n    });\n  },\n  GetAddressesBySuburb: function (suburbId) {\n    return this.find({ suburbId: suburbId })\n      .sort({ name: 'asc', number: 'asc' })\n      .lean();\n  },\n  GetAddressByNameAndNumber: function (streetName, number) {\n    return this.findOne({ name: streetName, number: number }).lean();\n  },\n};\n\nconst Address = mongoose.model(\"Address\", AddressSchema);\n\nmodule.exports = Address;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst GlobalConfigSchema = new mongoose.Schema({\n  termsAndConditions: [mongoose.Decimal128],\n});\n\nGlobalConfigSchema.statics = {\n  SaveInitialConfig: function () {\n    let terms = new this({ termsAndConditions: [1.0] });\n    return terms.save();\n  },\n  GetTermsAndCons: function () {\n    return new Promise((resolve, reject) => {\n      this.findOne({})\n        .lean()\n        .exec((err, result) => {\n          if (err) reject(err);\n          if (!result) {\n            this.SaveInitialConfig();\n          }\n          let terms = result ? result.termsAndConditions : [1.0];\n          resolve(terms || [1.0]);\n        });\n    });\n  },\n};\n\nconst GlobalConfig = mongoose.model(\"GlobalConfig\", GlobalConfigSchema);\n\nmodule.exports = GlobalConfig;\n","const mongoose = require(\"mongoose\");\nconst Menu = require(\"./menu\");\nconst Role = require(\"./role\");\nconst User = require(\"./user\");\nconst SuburbInvite = require(\"./suburbInvite\");\nconst SuburbConfig = require(\"./suburbConfig\");\nconst SuburbStreet = require(\"./suburbStreet\");\nconst PostalCode = require(\"./postalCode\");\nconst Address = require(\"./Address\");\nconst GlobalConfig = require(\"./globalConfig\");\n\nconst models = {\n  Menu,\n  Role,\n  User,\n  PostalCode,\n  SuburbInvite,\n  SuburbConfig,\n  SuburbStreet,\n  Address,\n  GlobalConfig,\n};\n\nconst connectDb = () => {\n  //setup the mongo connection\n  let mConn = mongoose.connect(process.env.DB_CONNECTION, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n  });\n\n  mongoose.connection.on(\n    \"error\",\n    console.error.bind(console, \"Mongo db connection error: \")\n  );\n  return mConn;\n};\n\nmodule.exports = { connectDb, models };\n","const moment = require('moment');\nconst mongoose = require('mongoose');\n//const Base = require('./baseModel');\n\nconst MenuSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        required: 'Enter the menu name'\n    },\n    link: {\n        type: String,\n        required: 'Enter the menu link'\n    },\n    parentId: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'Menu'\n    },\n    position: {\n        type: Number,\n        default: 1\n    },\n    icon: {\n        type: String\n    },\n    visible: {\n        type: Boolean,\n        default: true\n    },\n    active: {\n        type: Boolean,\n        default: true\n    },\n    type: {\n        type: String\n    },\n    transtime: {\n        type: Date,\n        default: moment.utc()\n    }\n});\n\n\nMenuSchema.statics = {\n    getMenuById: function (menuId) { //, projectId){\n        return this.findOne({\n            _id: menuId //, \n            //project: projectId\n        });\n    },\n    updateMenu: function (objMenu) {\n        return this.update({\n            _id: objMenu._id\n        }, {\n                $set: {\n                    'name': objMenu.name,\n                    'link': objMenu.link,\n                    'parentId': objMenu.parentId,\n                    'position': objMenu.position,\n                    'icon': objMenu.position,\n                    'visible': objMenu.visible,\n                    'active': objMenu.active,\n                    'type': objMenu.active,\n                    'transtime': moment.utc()\n                }\n            });\n    },\n    deleteMenu: function (menuId) {\n        return this.deleteMany({\n            _id: menuId\n        });\n    },\n    getChildMenus: function (menuId) {\n        return this.find({\n            parentId: menuId\n        });\n    },\n    getChildMenusRecursively: function (parents) {\n        let _this = this;\n        let getThisLevelChilds = this.getChildMenus(parents);\n        let elements = [];\n        return new Promise((resolve, reject) => {\n            getThisLevelChilds.then((childs) => {\n                if (childs.length > 0) {\n                    elements = JSON.parse(JSON.stringify(childs)).map((child) => {\n                        return child._id;\n                    });\n                    let getInnerChilds = _this.getChildMenusRecursively(elements);\n                    getInnerChilds.then((result) => {\n                        resolve(elements.concat(result));\n                    });\n                } else\n                    resolve(elements);\n            }, (err) => {\n                reject(err);\n            })\n        });\n    },\n    getParentMenusRecursively: function (menuId) {\n        let _this = this;\n        let getThisLevel = this.getMenuById(menuId);\n        let elements = [];\n        return new Promise((resolve, reject) => {\n            getThisLevel.then((menu) => {\n                menu = JSON.parse(JSON.stringify(menu))\n                if (menu && menu.parentId) {\n                    elements.push(menu.parentId);\n                    let getMoreParents = _this.getParentMenusRecursively(menu.parentId);\n                    getMoreParents.then((result) =>\n                        resolve(elements.concat(result)));\n                } else\n                    resolve(elements);\n            }, err => reject(err));\n        });\n    },\n    getMenus: function (menus) {\n        return this.find({ _id: menus });\n    }\n}\n\n\n\n\nconst Menu = mongoose.model(\"Menu\", MenuSchema);\n\nmodule.exports = Menu;","const mongoose = require('mongoose');\n\nconst PostalCodeSchema = new mongoose.Schema({\n    d_codigo: {\n        type: String\n    },\n    d_asenta: {\n        type: String\n    },\n    d_tipo_asenta: {\n        type: String\n    },\n    D_mnpio: {\n        type: String\n    },\n    d_estado: {\n        type: String\n    },\n    d_ciudad: {\n        type: String\n    },\n    d_CP: {\n        type: String\n    },\n    c_estado: {\n        type: String\n    },\n    c_oficina: {\n        type: String\n    },\n    c_CP: {\n        type: String\n    },\n    c_tipo_asenta: {\n        type: String\n    },\n    c_mnpio: {\n        type: String\n    },\n    id_asenta_cpcons: {\n        type: String\n    },\n    d_zona: {\n        type: String\n    },\n    c_cve_ciudad: {\n        type: String\n    }\n});\n\nPostalCodeSchema.statics = {\n    getCPInfo: function (cp) {\n        let regCp = new RegExp(cp)\n        return this.find({ d_codigo: regCp }).limit(100);\n    }\n};\n\nconst PostalCode = mongoose.model(\"PostalCode\", PostalCodeSchema);\n\nmodule.exports = PostalCode;","const moment = require('moment');\nconst mongoose = require(\"mongoose\");\n\nconst RoleSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        required: 'Enter the name of the role'\n    },\n    description: {\n        type: String,\n        required: 'Enter the description of the role'\n    },\n    siteAdministration: {\n        type: Boolean,\n        default: false\n    },\n    sysAdministrator: {\n        type: Boolean,\n        default: false\n    },\n    active: {\n        type: Boolean,\n        default: true\n    },\n    menus: [{\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'Menu'\n    }],\n    transtime: {\n        type: Date,\n        default: moment.utc()\n    }\n});\n\nRoleSchema.statics = {\n    deleteRole: function (roleId) {\n        return this.deleteMany({\n            _id: roleId\n        });\n    },\n    setRoleMenu: function (roleId, menus) {\n        if (!Array.isArray(menus)) menus = [menus];\n        return this.update({\n            _id: roleId\n        }, {\n                $addToSet: {\n                    menus: {\n                        $each: menus\n                    }\n                }\n            }, {\n                multi: true\n            });\n    },\n    deleteRoleMenu: function (roles, menus) {\n        if (!Array.isArray(menus)) menus = [menus];\n        if (!Array.isArray(roles)) roles = [roles];\n\n        return this.update({\n            _id: {\n                $in: roles\n            }\n        }, {\n                $pullAll: {\n                    menus: menus\n                }\n            }, {\n                multi: true\n            });\n    },\n    getRoleMenus: function (roleId) {\n        return new Promise((resolve, reject) => {\n            this.find({\n                _id: roleId\n            }).populate('menus').exec((err, result) => {\n                if (err) reject(err);\n                resolve(result);\n            });\n        });\n    }\n};\n\nconst Role = mongoose.model(\"Role\", RoleSchema);\n\nmodule.exports = Role;","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst RFIdSchema = new mongoose.Schema({\n  rfid: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nmodule.exports = RFIdSchema;\n","const mongoose = require(\"mongoose\");\n\nconst ChildMenuSchema = new mongoose.Schema({\n  item: { type: String },\n  label: { type: String },\n  color: { type: String },\n  navigate: { type: String },\n  screen: { type: String },\n  isHome: { type: Boolean },\n  iconName: { type: String },\n  iconFamily: { type: String },\n});\n\nmodule.exports = ChildMenuSchema;\n","const mongoose = require(\"mongoose\");\n\nconst DropdownSchema = new mongoose.Schema({\n  value: {\n    type: String,\n  },\n  text: {\n    type: String,\n  },\n});\n\nmodule.exports = DropdownSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst DropdownSchema = require(\"./dropdownSchema\");\nconst FieldSchema = new mongoose.Schema({\n  field: {\n    type: String,\n  },\n  type: {\n    type: String,\n  },\n  data: [DropdownSchema],\n  label: {\n    type: String,\n  },\n  mandatory: {\n    type: Boolean,\n    default: false,\n  },\n  mandatoryMessage: {\n    type: String,\n  },\n});\n\nmodule.exports = FieldSchema;\n","const mongoose = require(\"mongoose\");\nconst ChildMenuSchema = require(\"./childMenuSchema\");\n\nconst MenuSchema = new mongoose.Schema({\n  item: { type: String },\n  label: {type: String},\n  validUserTypes: [String],\n  childMenus: [ChildMenuSchema],\n});\n\nmodule.exports = MenuSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst FieldSchema = require(\"./fieldSchema\");\n\nconst ScreenSchema = new mongoose.Schema({\n  name: { type: String },\n  title: { type: String },\n  options: { type: mongoose.Schema.Types.Mixed },\n  fields: [FieldSchema],\n});\n\nmodule.exports = ScreenSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst GuestSchema = new mongoose.Schema({\n  name: {\n    type: String,\n  },\n  vehicle: {\n    type: String,\n  },\n  subject: {\n    type: String,\n  },\n  isService: {\n    type: Boolean,\n    default: false,\n  },\n  plates: {\n    type: String,\n  },\n  additionalInformation: {\n    type: String,\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  arriveOn: {\n    type: Date,\n  },\n  leaveOn: {\n    type: Date,\n  },\n  count: {\n    type: Number,\n    default: 0,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nmodule.exports = GuestSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst PushTokenSchema = new mongoose.Schema({\n  token: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nmodule.exports = PushTokenSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst SuburbFileSchema = new mongoose.Schema({\n  fileName: {\n    type: String,\n  },\n  originalName: {\n    type: String,\n  },\n  actionType: {\n    type: String,\n  },\n  mimetype: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nmodule.exports = SuburbFileSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst SuburbStatusSchema = new mongoose.Schema({\n  status: {\n    type: String,\n  },\n  description: {\n    type: String,\n  },\n  details: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\n//const SuburbStatus = mongoose.model(\"SuburbStatus\", SuburbStatusSchema);\n\nmodule.exports = SuburbStatusSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst SuburbStatusSchema = require(\"./schemas/suburbStatusSchema\");\nconst SuburbFileSchema = require(\"./schemas/suburbFileSchema\");\nconst suburbConfig = require(\"./suburbConfig\");\nconst suburbStreet = require(\"./suburbStreet\");\n\nconst SuburbSchema = new mongoose.Schema({\n  name: {\n    type: String,\n  },\n  location: {\n    type: String,\n  },\n  postalCode: {\n    type: Number,\n  },\n  active: {\n    type: Boolean,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n  userAdmins: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n  ],\n  /*\n        estatus validos:\n        activacionPendiente,\n        activacionRechazada\n        activadoBasico,\n        activadoPlus\n    */\n  status: [SuburbStatusSchema],\n  files: [SuburbFileSchema],\n  suburbInvites: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"SuburbInvite\",\n    },\n  ],\n  config: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"SuburbConfig\",\n  },\n  streets: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"SuburbStreet\",\n    },\n  ],\n});\n\nSuburbSchema.statics = {\n  SaveSuburb: function (suburbObj) {\n    let suburb = new this(suburbObj);\n    return suburb.save();\n  },\n  UpdateStatus: function (id, status) {\n    if (!Array.isArray(status)) status = [status];\n    return this.updateOne(\n      { _id: id },\n      {\n        $addToSet: {\n          status: {\n            $each: status,\n          },\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  UpdateStatusByName: function (name, postalCode) {\n    if (!Array.isArray(status)) status = [status];\n    return this.updateOne(\n      { name: name, postalCode: postalCode },\n      {\n        $addToSet: {\n          status: {\n            $each: status,\n          },\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  AddSuburbInvite: function (id, userInviteId) {\n    if (!Array.isArray(userInviteId)) userInviteId = [userInviteId];\n    return this.updateOne(\n      { _id: id },\n      {\n        $addToSet: {\n          suburbInvites: {\n            $each: userInviteId,\n          },\n        },\n      },\n      { multi: true }\n    );\n  },\n  GetSuburb: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"userAdmins\", \"User\")\n        .populate(\"suburbInvites\", \"SuburbInvite\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          let {\n            name,\n            location,\n            postalCode,\n            active,\n            transtime,\n            status,\n            suburbInvites,\n            config,\n          } = result;\n          resolve({\n            name,\n            location,\n            postalCode,\n            active,\n            transtime,\n            status,\n            suburbInvites,\n            config,\n          });\n        });\n    });\n  },\n  GetSuburbBasicInfo: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      }).exec((err, result) => {\n        if (err || !result) reject(err);\n        if (result) {\n          let { name, location, postalCode, active, transtime } = result;\n          resolve({\n            name,\n            location,\n            postalCode,\n            active,\n            transtime,\n          });\n        }\n      });\n    });\n  },\n  GetSuburbByName: function (postalCode, name) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        postalCode: postalCode,\n        name: name,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result);\n      });\n    });\n  },\n  GetSuburbByUserId: function (userId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ userAdmins: mongoose.Types.ObjectId(userId) }).exec(\n        (err, result) => {\n          if (err) reject(err);\n          resolve(result);\n        }\n      );\n    });\n  },\n  SaveSuburbConfig: function (id, configId) {\n    return this.updateOne(\n      {\n        _id: id,\n      },\n      {\n        $set: { config: configId },\n      }\n    );\n  },\n  GetSuburbConfig: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"config\")\n        .exec((err, result) => {\n          if (err || !result) reject(err || \"No se encontro la configuracion\");\n          else {\n            let { config } = result;\n            if (config) resolve({ ...config._doc });\n            else resolve({});\n          }\n        });\n    });\n  },\n  SaveSuburbStreet: function (id, streetId) {\n    if (!Array.isArray(streetId)) streetId = [streetId];\n    return this.updateOne(\n      { _id: id },\n      { $addToSet: { streets: { $each: streetId } } },\n      { multi: true }\n    );\n  },\n  GetSuburbStreets: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"streets\")\n        .lean()\n        .exec((err, result) => {\n          if (err) reject(err);\n          if (result) {\n            let { streets } = result;\n            if (streets) resolve({ streets: [...streets] });\n            else resolve({ streets: [] });\n          } else resolve({ streets: [] });\n        });\n    });\n  },\n};\n\nconst Suburb = mongoose.model(\"Suburb\", SuburbSchema);\n\nmodule.exports = Suburb;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst ScreenSchema = require(\"./schemas/config/screenSchema\");\nconst MenuSchema = require(\"./schemas/config/menuSchema\");\n\nconst SuburbConfigSchema = new mongoose.Schema({\n  imageUrl: { type: String },\n  screens: [ScreenSchema],\n  menus: [MenuSchema],\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nSuburbConfigSchema.statics = {\n  SaveConfig: function (suburbConfig) {\n    let config = new this(suburbConfig);\n    return config.save();\n  },\n  UpdateConfig: function (id, config) {\n    return this.updateOne({ _id: id }, { ...config });\n  },\n};\n\nconst SuburbConfig = mongoose.model(\"SuburbConfig\", SuburbConfigSchema);\n\nmodule.exports = SuburbConfig;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst SuburbInviteSchema = new mongoose.Schema({\n  code: {\n    type: String,\n  },\n  name: {\n    type: String,\n  },\n  street: {\n    type: String,\n  },\n  streetNumber: {\n    type: String,\n  },\n  suburbId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"Suburb\",\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  usedBy: {\n    type: String,\n  },\n  updatedTranstime: {\n    type: Date,\n  },\n  userType: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nSuburbInviteSchema.statics = {\n  SaveSuburbInvite: function (userInviteObj) {\n    let userInvite = new this(userInviteObj);\n    return userInvite.save();\n  },\n  UpdateSuburbInviteUsed: function (code, usedBy) {\n    return this.updateOne(\n      { $and: [{ code: code }, { active: true }] },\n      {\n        $set: {\n          usedBy: usedBy,\n          active: false,\n          updatedTranstime: moment.utc(),\n        },\n      }\n    );\n  },\n  GetInviteByCode: function (code) {\n    return new Promise((resolve, reject) => {\n      return this.findOne({ code: code, active: true }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result)\n          reject({ success: false, message: \"Cannot find the invite code.\" });\n        resolve(result);\n      });\n    });\n  },\n};\n\nconst SuburbInvite = mongoose.model(\"SuburbInvite\", SuburbInviteSchema);\n\nmodule.exports = SuburbInvite;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst { getUsersBySuburbStreet } = require(\"../logic/userService\");\n\nconst suburbStreetSchema = new mongoose.Schema({\n  street: {\n    type: String,\n  },\n  numbers: [{ type: String }],\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nsuburbStreetSchema.statics = {\n  SaveStreet: function (suburbStreet) {\n    let config = new this(suburbStreet);\n    return config.save();\n  },\n  UpdateStreet: function (id, street) {\n    return this.updateOne({ _id: id }, { ...street });\n  },\n};\n\nconst SuburbStreet = mongoose.model(\"SuburbStreet\", suburbStreetSchema);\n\nmodule.exports = SuburbStreet;\n","const moment = require(\"moment\");\nconst bcrypt = require(\"bcryptjs\");\nconst jwt = require(\"jsonwebtoken\");\nconst mongoose = require(\"mongoose\");\nconst base64 = require(\"base-64\");\nconst GuestSchema = require(\"./schemas/guestSchema\");\nconst PushTokenSchema = require(\"./schemas/pushTokenSchema\");\nconst RFIdSchema = require(\"./schemas/RFIdSchema\");\n\nconst UserSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: \"Ingresa el nombre\",\n  },\n  lastName: {\n    type: String,\n  },\n  password: {\n    type: String,\n  },\n  tempPassword: {\n    type: String,\n    default: null,\n  },\n  loginName: {\n    type: String,\n    unique: true,\n  },\n  email: {\n    type: String,\n  },\n  cellphone: {\n    type: String,\n  },\n  photoUrl: {\n    type: String,\n  },\n  street: {\n    type: String,\n  },\n  streetNumber: {\n    type: String,\n  },\n  loginAttempts: {\n    type: Number,\n    default: 0,\n  },\n  temporaryDisabled: {\n    type: Boolean,\n    default: false,\n  },\n  disabledSince: {\n    type: Date,\n  },\n  lastAccess: {\n    type: Date,\n    default: moment.utc(),\n  },\n  /**\n   * valid user types:\n   *  guest -> a guest user\n   *  guard -> a guard of the suburb\n   *  admin -> an administrator of the suburb\n   *  sudo  -> an administrator of the app\n   */\n  userType: {\n    type: String,\n    default: \"guest\",\n  },\n  userConfirmed: {\n    type: Boolean,\n  },\n  facebookId: {\n    type: String,\n  },\n  googleId: {\n    type: String,\n  },\n  appleId: {\n    type: String,\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n  roles: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Role\",\n    },\n  ],\n  suburb: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"Suburb\",\n  },\n  favorites: [GuestSchema],\n  pushTokens: [PushTokenSchema],\n  signedTerms: [Number],\n  addressId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"Address\",\n  },\n  limited: {\n    type: Boolean,\n    default: false,\n  },\n  limitedSince: {\n    type: Date,\n  },\n  limitedReason: {\n    type: String,\n  },\n  rfids: [RFIdSchema],\n});\n\n/**\n * Private attributes\n */\nconst _secretKey = process.env.JWT_SECRET;\n\nlet _getExpDate = () => {\n  var expTimeByMin =\n    process.env.EXP_TOKEN != null ? process.env.EXP_TOKEN : \"10080\";\n  return moment().add(expTimeByMin, \"minutes\").unix();\n};\n\nlet _getValidApis = (id) => {\n  //return an array with the valid apis\n  return [];\n};\n\nlet _getValidMenus = (id) => {\n  //return an array with the valid menus for the user\n  return [];\n};\n\n/**\n * Method to validate exp from the user token.\n * @param {*} expDate\n */\nlet _validateExpDate = function (expDate) {\n  let currentTime = moment().unix();\n  return expDate > currentTime;\n};\n\nUserSchema.methods = {\n  validatePassword: function (_password, isTemporary = false) {\n    var _this = this;\n    let pass = base64.decode(_password);\n\n    let compareValue = isTemporary ? _this.tempPassword : _this.password;\n\n    return new Promise(\n      (resolve, reject) => {\n        if (_this.temporaryDisabled) {\n          let wait = 10 - this.getDisabledSince();\n          if (wait > 0)\n            reject({\n              success: false,\n              message: `El usuario esta temporalmente desabilitado, por favor espere ${wait} minutos para volver a intentar.`,\n            });\n          else\n            this.increaseLoginAttempts(true).then((res) => {\n              this.validatePassword(_password).then(\n                (result) => resolve(result),\n                (err) => reject(err)\n              );\n            });\n        } else\n          bcrypt.compare(pass, compareValue).then((valid) => {\n            if (valid) {\n              //reset logint attempts\n              this.increaseLoginAttempts(true).then(\n                (res) => {\n                  resolve({\n                    success: true,\n                    message: \"La contraseña coincide.\",\n                  });\n                },\n                (err) =>\n                  reject({ success: false, message: \"Un error occurio.\" })\n              );\n            } else {\n              //increase login attempts\n              this.increaseLoginAttempts().then(\n                (res) => {\n                  reject({\n                    success: false,\n                    message: \"La contraseña no es valida.\",\n                  });\n                },\n                (err) =>\n                  reject({\n                    success: false,\n                    message: \"Un error occurio, la contraseña no es valida.\",\n                  })\n              );\n            }\n          });\n      },\n      (err) =>\n        reject({\n          success: false,\n          message: \"Ocurrio un error al comparar la contraseña.\",\n        })\n    );\n  },\n  getDisabledSince: function () {\n    let disabledSince = this.disabledSince ? this.disabledSince : moment.utc();\n    let start = moment(disabledSince);\n    let end = moment(moment.utc());\n    return end.diff(start, \"minutes\");\n  },\n  increaseLoginAttempts: function (reset) {\n    if (reset) {\n      this.loginAttempts = 0;\n      this.temporaryDisabled = false;\n      this.disabledSince = null;\n    } else {\n      let loginAttempts = this.loginAttempts + 1;\n      this.loginAttempts = loginAttempts;\n      this.temporaryDisabled = loginAttempts > 10;\n      this.disabledSince = loginAttempts > 10 ? moment.utc() : null;\n    }\n    return new Promise((resolve, reject) => {\n      return this.save().then(\n        (res) => {\n          resolve(res);\n        },\n        (err) => {\n          reject(err);\n        }\n      );\n    });\n  },\n  generateUserToken: function (_suburb) {\n    let payload = {\n      userId: this._id != undefined ? JSON.parse(JSON.stringify(this._id)) : \"\",\n      userName: `${this.name} ${this.lastName}`,\n      loginName: this.loginName,\n      suburb: this.suburb || _suburb,\n      userType: this.userType,\n      exp: _getExpDate(),\n      validApis: _getValidApis(this._id),\n      pushTokens: this.pushTokens,\n      street: this.street,\n      streetNumber: this.streetNumber,\n      addressId: this.addressId,\n      limited: typeof this.limited === \"undefined\" ? false : this.limited,\n      //validMenus: _getValidMenus(this._id) //verify if is better put this in another schema i.e. suburb\n    };\n    let token = jwt.sign(payload, _secretKey);\n    return token;\n  },\n  setUserRole: function (userId, roles) {\n    if (!Array.isArray(roles)) roles = [roles];\n    return this.update(\n      {\n        _id: userId,\n      },\n      {\n        $addToSet: {\n          roles: {\n            $each: roles,\n          },\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  deleteUserRole: function (users, roles) {\n    if (!Array.isArray(users)) users = [users];\n    if (!Array.isArray(roles)) roles = [roles];\n\n    return this.update(\n      {\n        _id: {\n          $in: users,\n        },\n      },\n      {\n        $pullAll: {\n          roles: roles,\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  getUserRoles: function (userId) {\n    return new Promise((resolve, reject) => {\n      this.find({\n        _id: userId,\n      })\n        .populate(\"roles\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          resolve(getCleanResult(result, \"roles\"));\n        });\n    });\n  },\n};\n\nconst mergeArrayObjects = (currentFavs, newFavs) => {\n  let firstMerge = currentFavs.map((item, i) => {\n    let assign = {\n      name: item.name,\n      vehicle: item.vehicle,\n      subject: item.subject,\n      isService: item.isService,\n      count: item.count || 0,\n    };\n    newFavs.forEach((a2) => {\n      if (item.name === a2.name) {\n        assign = Object.assign(\n          {},\n          {\n            name: item.name,\n            vehicle: item.vehicle,\n            subject: item.subject,\n            isService: item.isService,\n            count: item.count || 0 + 1, //add 1 to calculate more used favs\n          },\n          a2\n        );\n      }\n    });\n    return { ...assign };\n  });\n\n  let all = [];\n  newFavs.forEach((item) => {\n    let add = true;\n    firstMerge.forEach((fm) => {\n      if (item.name.trim() === fm.name.trim()) add = false;\n    });\n    if (add) all.push(item);\n  });\n\n  let items = [...firstMerge, ...all].sort((a, b) => b.count - a.count);\n  return items.slice(0, items.length <= 30 ? items.length : 30); // solo mantendremos 30 favoritos para no sobrecargar la bd\n};\n\nconst mergePushTokens = (currentPushTokens, newPushToken) => {\n  let tokens = currentPushTokens.map((t) =>\n    t.token === newPushToken.token ? { ...newPushToken } : { ...t._doc }\n  );\n\n  let exists = tokens.filter((t) => t.token === newPushToken.token);\n  return exists.length > 0 ? [...tokens] : [...tokens, newPushToken];\n};\n\nconst extractUsersFromDoc = (mUsers) => {\n  let users = mUsers.map((u) => {\n    let { _id, name, lastName, street, streetNumber, active, pushTokens } =\n      u._doc;\n    return { _id, name, lastName, street, streetNumber, active, pushTokens };\n  });\n  return users;\n};\n\nUserSchema.statics = {\n  /**\n   * Method to get a user by login name\n   */\n  getLogin: function (_loginName) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        $and: [\n          {\n            loginName: _loginName,\n          },\n          { active: true },\n        ],\n      }) /*.populate({\n                path: 'roles',\n                populate: {\n                    path: 'menus',\n                    model: 'Menu'\n                }\n            })*/\n        .exec((err, result) => {\n          if (err) reject(err);\n          else {\n            resolve(result);\n          }\n        });\n    });\n  },\n  getUserByFacebookId: function (_facebookId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        facebookId: _facebookId,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        else {\n          resolve(result);\n        }\n      });\n    });\n  },\n  getUserByGoogleId: function (_googleId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        googleId: _googleId,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        else {\n          resolve(result);\n        }\n      });\n    });\n  },\n  getUserByAppleId: function (_appleId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        appleId: _appleId,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        else {\n          resolve(result);\n        }\n      });\n    });\n  },\n  getUserFavs: function (userId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        else {\n          resolve(result.favorites);\n        }\n      });\n    });\n  },\n  addUserFavs: function (userId, favs) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result) reject({ message: \"user not found\" });\n        let mergedFavs = mergeArrayObjects(result.favorites || [], favs);\n        this.findOneAndUpdate(\n          { _id: userId },\n          { $set: { favorites: mergedFavs } },\n          { new: true },\n          function (err, user) {\n            if (err) reject(err);\n            else {\n              resolve(mergedFavs);\n            }\n          }\n        );\n        resolve(result);\n      });\n    });\n  },\n  removeUserFavs: function (userId, favs) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result) reject({ message: \"user not found\" });\n        let filterFavs = (result.favorites || []).filter((item) => {\n          let exists = favs.filter((f) => f.name.trim() === item.name.trim());\n          return exists.length === 0;\n        });\n\n        this.findOneAndUpdate(\n          { _id: userId },\n          { $set: { favorites: filterFavs } },\n          { new: true },\n          function (err, user) {\n            if (err) reject(err);\n            else {\n              resolve(filterFavs);\n            }\n          }\n        );\n        resolve(result);\n      });\n    });\n  },\n  addUserPushToken: function (userId, pushToken) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result) reject({ message: \"user not found\" });\n        let mergedPushTokens = mergePushTokens(result.pushTokens, {\n          token: pushToken,\n        });\n        this.findOneAndUpdate(\n          { _id: userId },\n          { $set: { pushTokens: mergedPushTokens } },\n          { new: true },\n          function (err, user) {\n            if (err) reject(err);\n            else {\n              resolve(mergedPushTokens);\n            }\n          }\n        );\n      });\n    });\n  },\n  updateUser: function (objUser) {\n    return this.updateOne(\n      {\n        _id: objUser._id,\n      },\n      {\n        $set: {\n          name: objUser.name,\n          lastName: objUser.lastName,\n          password: objUser.password,\n          email: objUser.email,\n          cellphone: objUser.cellphone,\n          active: objUser.active,\n          userType: objUser.userType,\n          transtime: moment.utc(),\n          addressId: objUser.addressId,\n        },\n      }\n    );\n  },\n  deleteUserInfo: function (userId) {\n    return this.deleteOne({ _id: userId });\n  },\n  saveUser: function (objUser) {\n    let user = new this(objUser);\n    return user.save();\n  },\n  updateUserPicture: function (userId, photoUrl) {\n    return this.updateOne({ _id: userId }, { $set: { photoUrl: photoUrl } });\n  },\n  updateUserType: function (userId, userType) {\n    return this.updateOne({ _id: userId }, { $set: { userType: userType } });\n  },\n  enableDisableUser: function (userId, enabled) {\n    return this.updateOne({ _id: userId }, { $set: { active: enabled } });\n  },\n  changeLimited: function (userId, limited) {\n    return this.updateOne({ _id: userId }, { $set: { limited: limited } });\n  },\n  addUserRfid: function (userId, rfId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        else if (!result) reject({ message: \"user not found\" });\n        else {\n          let currentRfids = result.rfids || [];\n          let mergedRfids = currentRfids.some((item) => item.rfid === rfId)\n            ? currentRfids\n            : [...currentRfids, { rfid: rfId }];\n\n          this.findOneAndUpdate(\n            { _id: userId },\n            { $set: { rfids: [...mergedRfids] } },\n            { new: true },\n            function (err, user) {\n              if (err) reject(err);\n              else {\n                resolve({ userId: user._id, rfids: user.rfids });\n              }\n            }\n          );\n        }\n      });\n    });\n  },\n  removeUserRfid: function (userId, rfId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        else if (!result) reject({ message: \"user not found\" });\n        else {\n          let currentRfids = result.rfids || [];\n          let filteredRfids = currentRfids.filter((item) => item.rfid !== rfId);\n\n          this.findOneAndUpdate(\n            { _id: userId },\n            { $set: { rfids: [...filteredRfids] } },\n            { new: true },\n            function (err, user) {\n              if (err) reject(err);\n              else {\n                resolve({ userId: user._id, rfids: user.rfids });\n              }\n            }\n          );\n        }\n      });\n    });\n  },\n  /**\n   * Validate if the user token is active\n   */\n  isValidToken: function (_token) {\n    return new Promise(function (resolve, reject) {\n      var isValid = false;\n      try {\n        jwt.verify(_token, _secretKey, function (err, decoded) {\n          if (decoded) {\n            if (_validateExpDate(decoded.exp)) {\n              isValid = true;\n            }\n          }\n          resolve(isValid);\n        });\n      } catch (err) {\n        console.log(err);\n        reject(false);\n      }\n    });\n  },\n  /**\n   * Get the payload of the jwt token\n   * @param {String} _token\n   */\n  getTokenPayload: function (_token) {\n    return new Promise(function (resolve, reject) {\n      try {\n        jwt.verify(_token, _secretKey, function (err, decoded) {\n          resolve(decoded);\n        });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  },\n  encryptPassword: function (_password) {\n    return new Promise((resolve, reject) => {\n      let pass = base64.decode(_password);\n      let saltRounds = 10;\n      bcrypt.genSalt(saltRounds, (err, salt) => {\n        bcrypt.hash(pass, salt, (err, hash) => {\n          if (!err) resolve({ hash });\n          else reject(err);\n        });\n      });\n    });\n  },\n  getUserById: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"suburb\", \"name\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          else {\n            resolve(result);\n          }\n        });\n    });\n  },\n  getUserLeanById: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"suburb\", \"name\")\n        .lean()\n        .exec((err, result) => {\n          if (err) reject(err);\n          else {\n            resolve(result);\n          }\n        });\n    });\n  },\n  getUsersBySuburb: function (suburbId) {\n    return new Promise((resolve, reject) => {\n      this.find({ suburb: suburbId })\n        .lean()\n        .select({\n          _id: 1,\n          name: 1,\n          lastName: 2,\n          street: 3,\n          streetNumber: 4,\n          limited: 5,\n          active: 6,\n          userType: 7,\n          facebookId: 8,\n          appleId: 9,\n          googleId: 10,\n          email: 11,\n          loginName: 12,\n          addressId: 13,\n          rfids: 14,\n        })\n        .exec((err, result) => {\n          if (err) reject(err);\n          else {\n            resolve(result);\n          }\n        });\n    });\n  },\n  getUsersBySuburbStreet: function (suburbId, street) {\n    return new Promise((resolve, reject) => {\n      this.find({ $and: [{ suburb: suburbId }, { street: street }] }).exec(\n        (err, result) => {\n          if (err) reject(err);\n          else {\n            resolve(extractUsersFromDoc(result));\n          }\n        }\n      );\n    });\n  },\n  getUsersByAddress: function (suburbId, addressId) {\n    return new Promise((resolve, reject) => {\n      this.find({\n        $and: [{ suburb: suburbId }, { addressId: addressId }],\n      }).exec((err, result) => {\n        if (err) reject(err);\n        else {\n          resolve(extractUsersFromDoc(result));\n        }\n      });\n    });\n  },\n  updateUserTerms: function (userId, termsVersion) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId })\n        .lean()\n        .exec((err, result) => {\n          if (err) reject(err);\n          let terms = result.signedTerms || [];\n          terms = [...terms, termsVersion];\n          this.findOneAndUpdate(\n            { _id: userId },\n            { $set: { signedTerms: terms } },\n            { new: true },\n            function (err, _user) {\n              if (err) reject(err);\n              else {\n                resolve({ signed: true, termsVersion: terms });\n              }\n            }\n          );\n        });\n    });\n  },\n  isPasswordTemp: function (user, password) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        loginName: user,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        else if (\n          !result ||\n          result.tempPassword == \"\" ||\n          result.tempPassword == null\n        ) {\n          resolve(false);\n        } else {\n          bcrypt.compare(password, result.tempPassword).then((valid) => {\n            if (valid) {\n              resolve(true);\n            } else {\n              resolve(false);\n            }\n          });\n        }\n      });\n    });\n  },\n  updatePassword: function (userId, password, tempPassword) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: userId,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        else if (result.tempPassword == \"\") {\n          resolve(false);\n        } else {\n          bcrypt.compare(tempPassword, result.tempPassword).then((valid) => {\n            if (valid) {\n              let HashPassword = \"\";\n\n              this.encryptPassword(base64.encode(password)).then(\n                (resEncrypt) => {\n                  HashPassword = resEncrypt.hash;\n\n                  this.findOneAndUpdate(\n                    { _id: userId },\n                    { $set: { tempPassword: null, password: HashPassword } },\n                    { new: true },\n                    function (err, user) {\n                      if (err) reject(err);\n                      else {\n                        resolve({\n                          success: true,\n                          message:\n                            \"La contrasena fue actualizada exitosamente.\",\n                        });\n                      }\n                    }\n                  );\n                }\n              );\n            } else {\n              reject({\n                success: false,\n                message: \"Hubo un problema al actualizar la contrasena.\",\n              });\n            }\n          });\n        }\n      });\n    });\n  },\n  updateTempPassword: function (email) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        email: email,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        else if (!result) {\n          reject({\n            message: \"Email does not exist.\",\n          });\n        } else {\n          let tempPassword =\n            Math.random().toString(36).substring(2, 8).toUpperCase() +\n            Math.random().toString(36).substring(2, 4).toUpperCase();\n\n          let tempHashPassword = \"\";\n\n          this.encryptPassword(base64.encode(tempPassword)).then(\n            (resEncrypt) => {\n              tempHashPassword = resEncrypt.hash;\n\n              this.findOneAndUpdate(\n                {\n                  email: email,\n                },\n                {\n                  $set: {\n                    tempPassword: tempHashPassword,\n                  },\n                },\n                {\n                  new: true,\n                },\n                function (err) {\n                  if (err) reject(err);\n                  else {\n                    resolve(tempPassword);\n                  }\n                }\n              );\n              resolve(tempPassword);\n            }\n          );\n        }\n      });\n    });\n  },\n  getAdminUsers: function (suburbId) {\n    return this.find({ suburb: suburbId, userType: \"suburbAdmin\" }).lean();\n  },\n  getIfUserIsLimited(userId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId })\n        .lean()\n        .exec((err, result) => {\n          if (err || !result) reject(err || \"User not found\");\n          else {\n            resolve({\n              isLimited:\n                typeof result.limited === \"undefined\" ? false : result.limited,\n            });\n          }\n        });\n    });\n  },\n  updateCurrentPassword: function (userId, password, newPassword) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId })\n        .lean()\n        .exec((err, result) => {\n          if (err) reject(err);\n          else {\n            bcrypt.compare(password, result.password).then((valid) => {\n              if (valid) {\n                this.encryptPassword(base64.encode(newPassword))\n                  .then((resEncrypt) => {\n                    this.findOneAndUpdate(\n                      { _id: userId },\n                      {\n                        $set: { tempPassword: null, password: resEncrypt.hash },\n                      },\n                      { new: true },\n                      function (err, user) {\n                        if (err) reject(err);\n                        else {\n                          resolve({\n                            success: true,\n                            message:\n                              \"La contrasena fue actualizada exitosamente.\",\n                          });\n                        }\n                      }\n                    );\n                  })\n                  .catch((err) => {\n                    reject({\n                      success: false,\n                      message: \"La contraseña actual no es correcta.\",\n                    });\n                  });\n              } else {\n                reject({\n                  success: false,\n                  message: \"La contraseña actual no es correcta.\",\n                });\n              }\n            });\n          }\n        });\n    });\n  },\n};\n\nconst User = mongoose.model(\"User\", UserSchema);\n\nmodule.exports = User;\n","const router = require(\"express\").Router();\n\nconst siteAuth = require(\"../controllers/siteAuth\");\n\nconst menus = require(\"../controllers/menus\");\n\nconst postalCodes = require(\"../controllers/postalCodes\");\n\nconst signup = require(\"../controllers/signup\");\n\nconst handleFiles = require(\"../controllers/handleFile\");\n\nconst multer = require(\"multer\");\n\nconst suburb = require(\"../controllers/suburb\");\n\nconst pushNotification = require(\"../controllers/pushNotification\");\n\nconst analytics = require(\"../controllers/analytics\");\n\nconst vision = require(\"../controllers/vision\");\n\nlet upload = multer({ dest: \"./uploads/\" });\n\nrouter.post(\"/api/checkAuth\", siteAuth.checkAuth);\n\nrouter.post(\"/api/isValidToken\", siteAuth.isValidToken);\n\nrouter.post(\"/api/validateTokenPath\", siteAuth.validateTokenPath);\n\nrouter.post(\"/api/logOff\", siteAuth.logOff);\n\nrouter.get(\"/api/auth/fbtoken\", siteAuth.getTokenByFacebookId);\n\nrouter.get(\"/api/auth/googletoken\", siteAuth.getTokenByGoogleId);\n\nrouter.get(\"/api/auth/appletoken\", siteAuth.getTokenByAppleId);\n\nrouter.post(\"/api/signUp\", signup.signUp);\n\nrouter.post(\"/api/auth/internal/auth\", siteAuth.internalAuth);\n\n//user apis\nconst userAdmin = require(\"../controllers/userAdmin\");\n\nrouter.post(\"/api/user/:userType\", userAdmin.createUserByType);\nrouter.get(\"/api/user/:userType\", userAdmin.getUserByType);\nrouter.get(\"/api/user\", userAdmin.getUserInfo);\nrouter.get(\"/api/userId\", userAdmin.getUserById);\nrouter.get(\"/api/userInfo/favorites\", userAdmin.getUserFavs);\nrouter.post(\"/api/userInfo/addFavorites\", userAdmin.addUserFavs);\nrouter.post(\"/api/userInfo/removeFavorites\", userAdmin.removeUserFavs);\nrouter.post(\"/api/userInfo/addUserPushToken\", userAdmin.addUserPushToken);\nrouter.get(\"/api/userInfo/getUsersByAddress\", userAdmin.getUsersByAddress);\nrouter.post(\"/api/userInfo/updatePicture\", userAdmin.updateUserPicture);\nrouter.get(\"/api/userInfo/getSignedUserTerms\", userAdmin.getSignedUserTerms);\nrouter.get(\"/api/userInfo/isPasswordTemp\", userAdmin.isPasswordTemp);\nrouter.post(\"/api/userInfo/updateType\", userAdmin.updateUserType);\nrouter.post(\"/api/userInfo/enableDisable\", userAdmin.enableDisableUser);\nrouter.get(\"/api/userInfo/getIfUserIsLimited\", userAdmin.getIfUserIsLimited);\nrouter.post(\"/api/userInfo/changeLimited\", userAdmin.changeLimited);\n\nrouter.post(\"/api/userInfo/updatePassword\", userAdmin.updatePassword);\nrouter.post(\n  \"/api/userInfo/updateCurrentPassword\",\n  userAdmin.updateCurrentPassword\n);\nrouter.post(\"/api/userInfo/signUserTerms\", userAdmin.signUserTerms);\nrouter.post(\"/api/userInfo/addUserRfid\", userAdmin.addUserRfid);\nrouter.post(\"/api/userInfo/removeUserRfid\", userAdmin.removeUserRfid);\nrouter.post(\"/api/saveGoogleUser\", userAdmin.saveGoogleUser);\nrouter.post(\"/api/saveFacebookUser\", userAdmin.saveFacebookUser);\nrouter.post(\"/api/saveAppleUser\", userAdmin.saveAppleUser);\nrouter.post(\"/api/saveEmailUser\", userAdmin.saveEmailUser);\nrouter.post(\"/api/saveUserBySuburb\", userAdmin.saveUserBySuburbId);\nrouter.post(\"/api/deleteUserInfo\", userAdmin.deleteUserInfo);\nrouter.post(\"/api/generateTempPassword\", userAdmin.generateTempPassword);\n//logged user APIs\nrouter.get(\"/api/me/menu\", menus.getMenusByUser);\n\n//postal codes\nrouter.get(\"/api/cp/getCPInfo\", postalCodes.getPostalCodeInfo);\n\n//handle files\nrouter.post(\"/api/file/upload\", upload.any(), handleFiles.uploadFile);\n\n//suburb apis\nrouter.post(\"/api/suburb/approveReject\", suburb.approveReject);\n\nrouter.get(\"/api/suburb/info\", suburb.getSuburbByAdminId);\n\nrouter.get(\"/api/suburb/get\", suburb.getSuburbById);\n\nrouter.post(\"/api/suburb/addSuburbInvite\", suburb.addSuburbInvite);\n\nrouter.get(\"/api/suburb/getInviteByCode\", suburb.getSuburbInvite);\n\nrouter.get(\"/api/suburb/getStreets\", suburb.getStreets);\n\nrouter.get(\"/api/suburb/getStreetNumbers\", suburb.getStreetNumbers);\n\nrouter.post(\"/api/suburb/updateConfig\", suburb.saveSuburbConfig);\n\nrouter.get(\"/api/suburb/getConfig\", suburb.getSuburbConfig);\n\nrouter.post(\"/api/suburb/saveStreet\", suburb.saveSuburbStreet);\n\nrouter.get(\"/api/suburb/getAllStreets\", suburb.getSuburbStreets);\n\nrouter.get(\"/api/suburb/getUsers\", suburb.getUsersBySuburb);\n\nrouter.get(\"/api/suburb/migrateAddresses\", suburb.migrateAddresses);\n\nrouter.get(\"/api/suburb/getAddressesBySuburbId\", suburb.getAddressesBySuburbId);\n\nrouter.get(\n  \"/api/suburb/getAddressesWithUsersStates\",\n  suburb.getAddressesWithUsersStates\n);\n\nrouter.post(\n  \"/api/suburb/setLimitedUsersByAddress\",\n  suburb.setLimitedUsersByAddress\n);\n\nrouter.get(\n  \"/api/suburb/getSuburbAutomationInfo\",\n  suburb.getSuburbAutomationInfo\n);\n\n//push notifications\nrouter.post(\"/api/notification/test\", pushNotification.sendTestNotification);\nrouter.post(\n  \"/api/notification/arrive\",\n  pushNotification.sendArriveNotification\n);\nrouter.post(\n  \"/api/notification/newPayment\",\n  pushNotification.sendUploadPaymentNotification\n);\nrouter.post(\n  \"/api/notification/approveRejectPayment\",\n  pushNotification.sendApproveRejectedPaymentNotification\n);\nrouter.post(\n  \"/api/notification/newReservation\",\n  pushNotification.sendNewSpaceReservationNotification\n);\nrouter.post(\n  \"/api/notification/approveRejectReservation\",\n  pushNotification.sendApproveRejectedReservationNotification\n);\n\nrouter.get(\"/api/analytics/GetVisits\", analytics.getSuburbVisits);\n\nconst upload2 = multer();\n\nrouter.post(\"/api/vision/ocr\", upload2.any(), vision.processOCR);\n\n// files apis\nconst blobFilesService = require(\"../controllers/blobFiles\");\nrouter.post(\"/api/blob/uploadFile\", blobFilesService.uploadBlobs);\n//router.post(\"/api/blob/uploadFile\", upload2.any(), blobFilesService.uploadBlobs);\n\nmodule.exports = router;\n","const map = {\n  \"/apiPayments\": {\n    target: `${process.env.API_PAYMENTS_URL}`,\n    pathRewrite: {\n      \"^.+apiPayments\": \"\",\n    },\n  },\n};\n\nconst getMap = (url) => {\n  let proxyMap = map;\n  let urlParts = url.split(\"/\");\n  let foundMap = null;\n  for (let i = 0; i <= urlParts.length; i++) {\n    if (!foundMap) {\n      let innerArray = Array.apply(null, {\n        length: i + 1,\n      }).map(Function.call, Number);\n      let uri = \"\";\n      innerArray.forEach((element) => {\n        uri += urlParts[element] !== \"\" ? `/${urlParts[element]}` : \"\";\n      });\n      foundMap = proxyMap[uri];\n    }\n  }\n  return foundMap;\n};\n\nconst getQueryParams = (queryParams) => {\n  let queryString = `?`;\n  let params = { ...queryParams, code: process.env.API_PAYMENTS_KEY };\n  Object.keys(params).forEach((p) => {\n    queryString = `${queryString}${p}=${params[p]}&`;\n  });\n  return queryString;\n};\n\nexports.rewriteURL = (protocol, host, url, queryParams) => {\n  let completeUrl = `${protocol}://${host}${url}`;\n  let path = getMap(url);\n  if (path) {\n    let regex = new RegExp(Object.keys(path.pathRewrite)[0]);\n    var replaced = completeUrl.replace(\n      regex,\n      path.pathRewrite[Object.keys(path.pathRewrite)[0]]\n    );\n    return Object.keys(queryParams).length > 0\n      ? `${path.target}${replaced}${getQueryParams(queryParams)}`\n      : `${path.target}${replaced}?code=${process.env.API_PAYMENTS_KEY}`;\n  } else return completeUrl;\n};\n","const express = require(\"express\");\nconst router = express.Router();\nconst proxy = require(\"express-http-proxy\");\nconst { rewriteURL } = require(\"./helpers\");\nconst auth = require(\"../middleware/auth\");\n\n//routes\nconst apiRoutes = require(\"./apiRoutes\");\n\nrouter.use(\"/api/*\", auth.checkApiAuth);\nrouter.all(\"/api/*\", apiRoutes);\n\nrouter.use(\"/apiPayments/*\", auth.checkApiAuth);\nrouter.use(\n  \"/apiPayments/*\",\n  proxy(process.env.API_PAYMENTS_URL, {\n    proxyReqPathResolver: function (req) {\n      let redirectTo = rewriteURL(\n        req.protocol,\n        req.get(\"Host\"),\n        req.baseUrl,\n        req.query\n      );\n      console.log(\"redirect to\", redirectTo);\n      return redirectTo;\n    },\n  })\n);\n\nmodule.exports = router;\n","/**\n * Module dependencies.\n */\n\nvar app = require('./app');\nvar debug = require('debug')('rochacoapi:server');\nvar http = require('http');\n\n/**\n * Get port from environment and store in Express.\n */\n\nvar port = normalizePort(process.env.PORT || '4010');\napp.set('port', port);\n\n/**\n * Create HTTP server.\n */\n\nvar server = http.createServer(app);\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nfunction normalizePort(val) {\n  var port = parseInt(val, 10);\n\n  if (isNaN(port)) {\n    // named pipe\n    return val;\n  }\n\n  if (port >= 0) {\n    // port number\n    return port;\n  }\n\n  return false;\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error) {\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n\n  var bind = typeof port === 'string'\n    ? 'Pipe ' + port\n    : 'Port ' + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nfunction onListening() {\n  console.log(\"running on port\", process.env.PORT);\n  var addr = server.address();\n  var bind = typeof addr === 'string'\n    ? 'pipe ' + addr\n    : 'port ' + addr.port;\n  debug('Listening on ' + bind);\n}\n","module.exports = require(\"@azure/cognitiveservices-computervision\");","module.exports = require(\"@azure/ms-rest-azure-js\");","module.exports = require(\"@sendgrid/mail\");","module.exports = require(\"axios\");","module.exports = require(\"base-64\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"crypto-js\");","module.exports = require(\"debug\");","module.exports = require(\"dotenv\");","module.exports = require(\"dropbox-v2-api\");","module.exports = require(\"expo-server-sdk\");","module.exports = require(\"express\");","module.exports = require(\"express-http-proxy\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"moment\");","module.exports = require(\"mongoose\");","module.exports = require(\"morgan\");","module.exports = require(\"multer\");","module.exports = require(\"request\");"],"sourceRoot":""}