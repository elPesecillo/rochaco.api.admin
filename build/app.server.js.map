{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app.js","webpack:///./src/constants/menusConfig.js","webpack:///./src/constants/types.js","webpack:///./src/controllers/handleFile.js","webpack:///./src/controllers/menus.js","webpack:///./src/controllers/postalCodes.js","webpack:///./src/controllers/pushNotification.js","webpack:///./src/controllers/signup.js","webpack:///./src/controllers/siteAuth.js","webpack:///./src/controllers/suburb.js","webpack:///./src/controllers/userAdmin.js","webpack:///./src/logic/auth.js","webpack:///./src/logic/menuService.js","webpack:///./src/logic/postalCodeService.js","webpack:///./src/logic/pushNotificationService.js","webpack:///./src/logic/suburbService.js","webpack:///./src/logic/userService.js","webpack:///./src/logic/viewPermissions.js","webpack:///./src/middleware/auth.js","webpack:///./src/models/index.js","webpack:///./src/models/menu.js","webpack:///./src/models/postalCode.js","webpack:///./src/models/role.js","webpack:///./src/models/schemas/config/dropdownSchema.js","webpack:///./src/models/schemas/config/fieldSchema.js","webpack:///./src/models/schemas/config/screenSchema.js","webpack:///./src/models/schemas/guestSchema.js","webpack:///./src/models/schemas/pushTokenSchema.js","webpack:///./src/models/schemas/suburbFileSchema.js","webpack:///./src/models/schemas/suburbStatusSchema.js","webpack:///./src/models/suburb.js","webpack:///./src/models/suburbConfig.js","webpack:///./src/models/suburbInvite.js","webpack:///./src/models/suburbStreet.js","webpack:///./src/models/user.js","webpack:///./src/routes/apiRoutes.js","webpack:///./src/routes/router.js","webpack:///./src/server.js","webpack:///external \"@sendgrid/mail\"","webpack:///external \"axios\"","webpack:///external \"base-64\"","webpack:///external \"bcryptjs\"","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"crypto-js\"","webpack:///external \"debug\"","webpack:///external \"dotenv\"","webpack:///external \"dropbox-v2-api\"","webpack:///external \"expo-server-sdk\"","webpack:///external \"express\"","webpack:///external \"fs\"","webpack:///external \"http\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"moment\"","webpack:///external \"mongoose\"","webpack:///external \"morgan\"","webpack:///external \"multer\"","webpack:///external \"request\""],"names":["dotenv","require","express","logger","bodyParser","cors","config","connectDb","router","app","use","urlencoded","extended","json","module","exports","userType","userTypes","menus","name","path","icon","visible","validUserTypes","guard","suburbAdmin","admin","guest","neighbor","order","suburbStatus","status","description","userServices","suburbService","fs","dropboxV2Api","sgMail","getFileName","nodeFileName","originalName","idx","lastIndexOf","substring","uploadFileDropbox","file","dropbox","authenticate","token","process","env","DROPBOX_TOKEN","Promise","resolve","reject","resource","parameters","filename","originalname","readStream","createReadStream","destination","err","result","response","base64_encode","file_path","bitmap","readFileSync","Buffer","from","toString","getEmailAttachments","files","attachments","forEach","push","content","sendEmail","user","suburb","suburbId","setApiKey","SENDGRID_API_KEY","msg","to","OWNER_EMAILS","split","subject","text","html","send","ex","deleteTemporaryFiles","unlink","console","log","processFileUpload","data","userId","lastName","cellphone","email","postalCode","section","suburbName","recaptchaToken","validCaptcha","validateRecaptcha","proms","uploadedFiles","all","saveSuburb","location","active","userAdmins","getSuburbStatus","map","fil","fileName","actionType","mimetype","updateUser","_id","id","uploadFile","req","res","next","body","processFiles","message","menuService","getMenusByUser","headers","postalCodeService","getPostalCodeInfo","getCPInfo","query","pushNotificationService","getUserById","sendTestNotification","sendPushNotification","sound","withSome","title","subtitle","sendArriveNotification","pushTokens","t","_doc","isService","redirect","signUp","undefined","success","facebookId","googleId","appleId","password","loginName","saveFacebookUser","saveGoogleUser","saveAppleUser","saveEmailUser","User","viewPermissions","axios","default","validateUser","userLogin","getLogin","then","login","validPass","validatePassword","generateUserToken","succes","checkAuth","captchaToken","usr","getTokenByFacebookId","getUserByFacebookId","getTokenByGoogleId","getUserByGoogleId","getTokenByAppleId","getUserByAppleId","isValidToken","isValid","valid","validateTokenPath","permissionValid","logOff","session","destroy","userService","moment","ObjectId","Types","approveReject","newStatus","details","getSuburbById","addStatus","suburbAddStatus","transtime","utc","getSuburbByAdminId","getSuburbByAdminUser","addSuburbInvite","street","streetNumber","getSuburbInvite","code","invite","getStreets","getUsersBySuburb","users","streets","distinctStreets","Set","filter","u","s","getStreetNumbers","getUsersBySuburbStreet","streetNumbers","distinctStreetNumbers","saveSuburbConfig","sub","catch","getSuburbConfig","saveSuburbStreet","getSuburbStreets","SuburbInvite","resV","saveUser","userConfirmed","resSave","updateUserPicture","photoUrl","updated","saveUserWithPassword","createUserByType","params","saveUserBySuburbId","getcode","GetInviteByCode","save","trim","updateCode","UpdateSuburbInviteUsed","userData","getUserByType","getUserInfo","getUserByToken","getUserFavs","userFavs","getUserFavorites","addUserFavs","favs","saveUserFavorites","removeUserFavs","removeUserFavorites","addUserPushToken","pushToken","getUsersByAddress","deleteUserInfo","removeUserInfo","openApi","protectedApi","Auth","validateToken","def","validateAdminUser","getPayload","getTokenPayload","payload","isOpenApi","apiPath","indexOf","isProtectedApi","validateApiRequest","secretKey","RECAPTCHA_SECRET","verificationURL","post","captchaResult","userToken","userMenus","menu","types","g","toLowerCase","length","item","errP","PostalCode","getInfo","cp","Expo","expo","getMessagesBatches","messages","isExpoPushToken","error","chunkPushNotifications","sendExpoNotification","chunks","tickets","chunk","ticketChunk","sendPushNotificationsAsync","checkTickets","receiptIds","ticket","receiptIdChunks","chunkPushNotificationReceiptIds","receipts","getPushNotificationReceiptsAsync","receiptId","Suburb","SuburbConfig","SuburbStreet","CryptoJS","pjson","Mongoose","statusName","st","encryption","AES","encrypt","cryptoKey","decryption","bytes","decrypt","enc","Utf8","suburbObj","SaveSuburb","UpdateStatus","suburbAddStatusByName","UpdateStatusByName","GetSuburbByUserId","GetSuburb","_code","Math","random","toUpperCase","SaveSuburbInvite","subInv","AddSuburbInvite","subInvite","GetSuburbBasicInfo","props","sucess","suburbData","saveConfig","SaveConfig","SaveSuburbConfig","updateConfig","UpdateConfig","GetSuburbConfig","GetSuburbStreets","selectedStreet","saveStreet","SaveStreet","SaveSuburbStreet","updateStreet","UpdateStreet","request","userObj","resG","JSON","parse","score","encryptPassword","resEncrypt","encryptedPassword","hash","find","findById","permissions","validateWithPayload","validPath","p","toLocaleLowerCase","jwt","validApiRequest","auth","stringify","checkApiAuth","baseUrl","mongoose","Menu","Role","models","mConn","connect","DB_CONNECTION","useNewUrlParser","connection","on","bind","MenuSchema","Schema","type","String","required","link","parentId","ref","position","Number","Boolean","Date","statics","getMenuById","menuId","findOne","updateMenu","objMenu","update","$set","deleteMenu","deleteMany","getChildMenus","getChildMenusRecursively","parents","_this","getThisLevelChilds","elements","childs","child","getInnerChilds","concat","getParentMenusRecursively","getThisLevel","getMoreParents","getMenus","model","PostalCodeSchema","d_codigo","d_asenta","d_tipo_asenta","D_mnpio","d_estado","d_ciudad","d_CP","c_estado","c_oficina","c_CP","c_tipo_asenta","c_mnpio","id_asenta_cpcons","d_zona","c_cve_ciudad","regCp","RegExp","limit","RoleSchema","siteAdministration","sysAdministrator","deleteRole","roleId","setRoleMenu","Array","isArray","$addToSet","$each","multi","deleteRoleMenu","roles","$in","$pullAll","getRoleMenus","populate","exec","DropdownSchema","value","FieldSchema","field","label","mandatory","mandatoryMessage","ScreenSchema","fields","GuestSchema","vehicle","plates","additionalInformation","arriveOn","leaveOn","count","PushTokenSchema","SuburbFileSchema","SuburbStatusSchema","suburbConfig","suburbStreet","SuburbSchema","suburbInvites","updateOne","userInviteId","GetSuburbByName","configId","streetId","lean","SuburbConfigSchema","imageUrl","screens","SuburbInviteSchema","usedBy","updatedTranstime","userInviteObj","userInvite","$and","suburbStreetSchema","numbers","bcrypt","base64","UserSchema","unique","loginAttempts","temporaryDisabled","disabledSince","lastAccess","favorites","_secretKey","JWT_SECRET","_getExpDate","expTimeByMin","exptoken","add","unix","_getValidApis","_getValidMenus","_validateExpDate","expDate","currentTime","methods","_password","pass","decode","wait","getDisabledSince","increaseLoginAttempts","compare","start","end","diff","reset","_suburb","userName","exp","validApis","sign","setUserRole","deleteUserRole","getUserRoles","getCleanResult","mergeArrayObjects","currentFavs","newFavs","firstMerge","i","assign","a2","Object","fm","items","sort","a","b","slice","mergePushTokens","currentPushTokens","newPushToken","tokens","exists","extractUsersFromDoc","mUsers","_loginName","_facebookId","_googleId","_appleId","mergedFavs","findOneAndUpdate","new","filterFavs","f","mergedPushTokens","objUser","deleteOne","_token","verify","decoded","saltRounds","genSalt","salt","Router","siteAuth","postalCodes","signup","handleFiles","multer","pushNotification","upload","dest","get","userAdmin","any","apiRoutes","debug","http","port","normalizePort","PORT","set","server","createServer","listen","onError","onListening","val","parseInt","isNaN","syscall","exit","addr","address"],"mappings":"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","file":"app.server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server.js\");\n","const dotenv = require(\"dotenv\");\nconst express = require('express');\nconst logger = require('morgan');\nconst bodyParser = require('body-parser');\nconst cors = require(\"cors\");\n\ndotenv.config();\n\nconst connectDb = require(\"./models\").connectDb;\nvar router = require(\"./routes/router\");\n\n\nvar app = express();\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(express.json());\napp.use(cors());\napp.use(logger('dev'));\napp.use('/', router);\n\nconnectDb();\n\nmodule.exports = app;\n\n","const userType = require(\"./types\").userTypes;\n\n/**\n * Get menus list\n */\nexports.menus = [\n  {\n    name: \"Mi Cuenta\",\n    path: \"/admin/cuenta\",\n    icon: \"icon icon-account_circle\",\n    visible: true,\n    validUserTypes: [\n      userType.guard,\n      userType.suburbAdmin,\n      userType.admin,\n      userType.guest,\n      userType.neighbor,\n    ],\n    order: 5,\n  },\n  {\n    name: \"Guardias\",\n    path: \"/admin/guardias\",\n    icon: \"icon icon-shield\",\n    visible: true,\n    validUserTypes: [userType.guest, userType.guard, userType.admin],\n    order: 2,\n  },\n  {\n    name: \"GuardiasForm\",\n    icon: \"icon icon-shield\",\n    path: \"/admin/guardias-form\",\n    visible: false,\n    validUserTypes: [userType.suburbAdmin, userType.admin],\n    order: 6,\n  },\n  {\n    name: \"Vecinos\",\n    path: \"/admin/vecinos\",\n    icon: \"icon icon-users\",\n    visible: true,\n    validUserTypes: [userType.guard, userType.suburbAdmin, userType.admin],\n    order: 3,\n  },\n  {\n    name: \"Colonia\",\n    path: \"/admin/colonias\",\n    icon: \"icon icon-building\",\n    visible: true,\n    validUserTypes: [userType.admin, userType.suburbAdmin, userType.guest],\n    order: 4,\n  },\n  {\n    name: \"Colonia Status\",\n    path: \"/admin/coloniaStatus\",\n    icon: \"icon icon-building\",\n    visible: false,\n    validUserTypes: [userType.admin, userType.suburbAdmin, userType.guest],\n    order: 4,\n  },\n  {\n    name: \"Colonia Status\",\n    path: \"/admin/coloniaMain\",\n    icon: \"icon icon-building\",\n    visible: false,\n    validUserTypes: [\n      userType.admin,\n      userType.suburbAdmin,\n      userType.suburbAdmin,\n    ],\n    order: 4,\n  },\n];\n","exports.userTypes = {\n  guest: \"guest\",\n  admin: \"admin\",\n  suburbAdmin: \"suburbAdmin\",\n  guard: \"guard\",\n  neighbor: \"neighbor\",\n};\n\nexports.suburbStatus = [\n  {\n    status: \"pending\",\n    description:\n      \"Tu solicitud para registrar la colonia ha sido enviada, por favor espera de 2 a 3 dias habiles o contactanos por medio de nuestras redes sociales para mayor informacion.\",\n  },\n  {\n    status: \"rejected\",\n    description: \"Lo sentimos tu solicitud fue rechazada.\",\n  },\n  {\n    status: \"approved\",\n    description: \"Tu solicitud a sido aprobada.\",\n  },\n  {\n    status: \"feedback\",\n    description: \"Tu solicitud a sido revisada, se requiere mas información.\",\n  },\n];\n","const userServices = require(\"../logic/userService\");\nconst suburbService = require(\"../logic/suburbService\");\n//const fetchDbx = require('isomorphic-fetch');\nconst fs = require(\"fs\");\n// const Dropbox = require(\"dropbox\").Dropbox;\nconst dropboxV2Api = require(\"dropbox-v2-api\");\nconst sgMail = require(\"@sendgrid/mail\");\n\nconst getFileName = (nodeFileName, originalName) => {\n  let idx = originalName.lastIndexOf(\".\");\n  return `${nodeFileName}.${originalName.substring(idx + 1)}`;\n};\n\nconst uploadFileDropbox = (file) => {\n  const dropbox = dropboxV2Api.authenticate({\n    token: process.env.DROPBOX_TOKEN,\n  });\n\n  return new Promise((resolve, reject) => {\n    dropbox(\n      {\n        resource: \"files/upload\",\n        parameters: {\n          path: `/neighby/${getFileName(file.filename, file.originalname)}`,\n        },\n        readStream: fs.createReadStream(`${file.destination}/${file.filename}`),\n      },\n      (err, result, response) => {\n        if (!err) resolve(result);\n        else reject(err);\n      }\n    );\n  });\n};\n\nconst base64_encode = (file_path) => {\n  // read binary data\n  var bitmap = fs.readFileSync(file_path);\n  // convert binary data to base64 encoded string\n  return new Buffer.from(bitmap, \"base64\").toString(\"base64\"); //.toString('base64');\n};\n\nconst getEmailAttachments = (files) => {\n  let attachments = [];\n  files.forEach((file) => {\n    attachments.push({\n      filename: `${file.originalname}`,\n      content: base64_encode(`${file.destination}/${file.filename}`),\n    });\n  });\n  return attachments;\n};\n\nconst sendEmail = async (files, user, suburb, suburbId) => {\n  try {\n    sgMail.setApiKey(process.env.SENDGRID_API_KEY);\n\n    const msg = {\n      to: process.env.OWNER_EMAILS.split(\",\"),\n      from: \"support@neighby.com\",\n      subject: \"Nuevo requerimiento de registro de colonia.\",\n      text: `solicitud de registro.`,\n      html: `<strong>El usuario ${user} desea registrar la colonia ${suburb} y envia los documentos para revisión adjuntos en este email para revision, id de referencia:[${suburbId}].</strong>`,\n      attachments: getEmailAttachments(files),\n    };\n    await sgMail.send(msg);\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst deleteTemporaryFiles = (files) => {\n  files.forEach((file) => {\n    fs.unlink(`${file.destination}/${file.filename}`, (err) => {\n      if (err) throw err;\n      console.log(\n        `path file ${file.destination}/${file.filename} has been deleted.`\n      );\n    });\n  });\n};\n\nconst processFileUpload = async (files, data) => {\n  try {\n    let {\n      userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      postalCode,\n      section,\n      suburbName,\n      recaptchaToken,\n    } = data;\n    let validCaptcha = await userServices.validateRecaptcha(recaptchaToken);\n    let proms = [];\n    files.forEach((file) => {\n      proms.push(uploadFileDropbox(file));\n    });\n    let uploadedFiles = await Promise.all(proms);\n\n    let saveSuburb = await suburbService.saveSuburb({\n      name: suburbName,\n      location: section,\n      postalCode: postalCode,\n      active: true,\n      userAdmins: [userId],\n      status: [suburbService.getSuburbStatus(\"pending\")],\n      files: files.map((fil) => ({\n        fileName: fil.filename,\n        originalName: fil.originalname,\n        actionType: \"solicitudRegistro\",\n        mimetype: fil.mimetype,\n      })),\n    });\n\n    let updateUser = await userServices.updateUser({\n      _id: userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      active: true,\n    });\n\n    await sendEmail(files, `${name} ${lastName}`, suburbName, saveSuburb.id);\n\n    deleteTemporaryFiles(files);\n    return saveSuburb;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nexports.uploadFile = async (req, res, next) => {\n  try {\n    let {\n      userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      postalCode,\n      section,\n      suburbName,\n      recaptchaToken,\n    } = req.body;\n    let processFiles = await processFileUpload(req.files, {\n      userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      postalCode,\n      section,\n      suburbName,\n      recaptchaToken,\n    });\n    res.status(202).json({ message: \"ok\" });\n  } catch (ex) {\n    res\n      .status(400)\n      .json({ message: ex.message || \"No se pudo completar el registro.\" });\n  }\n};\n","const menuService = require(\"../logic/menuService\");\n\n\n\n/**\n * [GET] method to get the menus by user types\n */\nexports.getMenusByUser = async (req, res, next) => {\n    let token = req.headers[\"authorization\"];\n    try {\n        const result = await menuService.getMenusByUser(token);\n        res.status('200').json(result);\n    } catch (err) {\n        res.status('401').json(err);\n    }\n}","const postalCodeService = require(\"../logic/postalCodeService\");\n\nexports.getPostalCodeInfo = async (req, res, next) => {\n    try {\n        let result = await postalCodeService.getCPInfo(req.query.postalCode);\n        res.status(200).json(result);\n    }\n    catch (err) {\n        res.status(400).json(err);\n    }\n}","const pushNotificationService = require(\"../logic/pushNotificationService\");\nconst { getUserById } = require(\"../logic/userService\");\n\nexports.sendTestNotification = async (req, res, next) => {\n  try {\n    let result = await pushNotificationService.sendPushNotification(\n      [\"ExponentPushToken[TRMrLcG4VUxVUwmsCXPIyw]\"],\n      {\n        sound: \"default\",\n        body: \"This is a test notification ;)\",\n        data: { withSome: \"data\" },\n        title: \"Notificacion Nueva\",\n        subtitle: \"soy un subtitulo\",\n      }\n    );\n    res.status(200).json(result);\n  } catch (err) {\n    res.status(400).json(err);\n  }\n};\n\nexports.sendArriveNotification = async (req, res) => {\n  try {\n    let { userId, guest } = req.body;\n    let user = await getUserById(userId);\n    let pushTokens = user.pushTokens.map((t) => t._doc.token);\n    let result = await pushNotificationService.sendPushNotification(\n      pushTokens,\n      {\n        sound: \"default\",\n        body: guest.isService\n          ? `Tu servicio ${guest.name} ha llegado.`\n          : `Tu invitado ${guest.name} ha llegado.`,\n        data: { redirect: \"myVisits\" },\n        title: `Hola ${user.name}`,\n      }\n    );\n    return result;\n  } catch (err) {\n    res.status(400).json(err);\n  }\n};\n","const user = require(\"./userAdmin\");\n\nexports.signUp = (req, res, next) => {\n  if (\n    req.body.token === undefined ||\n    req.body.token === \"\" ||\n    req.body.token === null\n  ) {\n    res.send({\n      success: false,\n      message: \"Por favor intenta de nuevo (codigo recaptcha no encontrado).\",\n    });\n    return;\n  }\n  let {\n    email,\n    name,\n    lastName,\n    cellphone,\n    facebookId,\n    googleId,\n    appleId,\n    password,\n    token,\n  } = req.body;\n  if (facebookId) {\n    req.body = {\n      email,\n      name,\n      lastName,\n      loginName: facebookId,\n      cellphone,\n      facebookId,\n      googleId,\n      appleId,\n      password,\n      token,\n    };\n    user.saveFacebookUser(req, res, next);\n  } else if (googleId) {\n    req.body = {\n      email,\n      name,\n      lastName,\n      loginName: googleId,\n      cellphone,\n      facebookId,\n      googleId,\n      appleId,\n      password,\n      token,\n    };\n    user.saveGoogleUser(req, res, next);\n  } else if (appleId) {\n    req.body = {\n      email,\n      name,\n      lastName,\n      loginName: appleId,\n      cellphone,\n      facebookId,\n      googleId,\n      appleId,\n      password,\n      token,\n    };\n    user.saveAppleUser(req, res, next);\n  } else {\n    req.body = {\n      email,\n      name,\n      lastName,\n      loginName: email,\n      cellphone,\n      facebookId,\n      googleId,\n      appleId,\n      password,\n      token,\n    };\n    user.saveEmailUser(req, res, next);\n  }\n  //mandar llamar registro aqui\n  // if (googleId || facebookId)\n  //     axios({\n  //         method: 'post',\n  //         url: googleId ? `${process.env.ADMIN_API_HOST}/api/saveGoogleUser` : `${process.env.ADMIN_API_HOST}/api/saveFacebookUser`,\n  //         data: {\n  //             name,\n  //             lastName,\n  //             loginName: googleId ? googleId : facebookId,\n  //             email,\n  //             cellphone,\n  //             googleId,\n  //             facebookId,\n  //             token\n  //         }\n  //     }).then(resS => {\n  //         res.send({ success: true, message: resS.data.message || \"Ok\" });\n  //     })\n  //         .catch(err => {\n  //             let errMsg = err && err.response && err.response.data && err.response.data.message ? err.response.data.message : err.message || \"No se pudo guardar el usuario.\";\n  //             res.send({ success: false, message: errMsg });\n  //         });\n  // else {\n  //     axios({\n  //         method: 'post',\n  //         url: `${process.env.ADMIN_API_HOST}/api/saveEmailUser`,\n  //         data: {\n  //             name,\n  //             lastName,\n  //             loginName: email,\n  //             email,\n  //             cellphone,\n  //             password,\n  //             token\n  //         }\n  //     }).then(resS => {\n  //         res.send({ success: true, message: resS.data.message || \"Ok\" });\n  //     })\n  //         .catch(err => {\n  //             let errMsg = err && err.response && err.response.data && err.response.data.message ? err.response.data.message : err.message || \"No se pudo guardar el usuario.\";\n  //             res.send({ success: false, message: errMsg });\n  //         });\n  // }\n};\n","const User = require(\"../models/user\");\nconst viewPermissions = require(\"../logic/viewPermissions\");\nconst axios = require(\"axios\").default;\nconst validateRecaptcha = require(\"../logic/auth\").validateRecaptcha;\n\nconst validateUser = (userLogin, password) => {\n  return new Promise((resolve, reject) => {\n    User.getLogin(userLogin).then((login, err) => {\n      if (login) {\n        let validPass = login.validatePassword(password);\n        validPass.then(\n          (result) => {\n            //generate jwt token\n            let token = login.generateUserToken();\n            resolve({ success: true, message: token });\n          },\n          (err) => {\n            reject({\n              success: false,\n              message: err.message || \"La contraseña no es valida.\",\n            });\n          }\n        );\n      } else reject({ succes: false, message: \"El usuario no existe.\" });\n    });\n  });\n};\n\nexports.checkAuth = async (req, res, next) => {\n  try {\n    //over here check the db to know if the auth is valid\n    let { user, password, captchaToken } = req.body;\n\n    let validCaptcha = await validateRecaptcha(captchaToken);\n    if (validCaptcha) {\n      let usr = await validateUser(user, password); //.then(\n\n      if (usr) {\n        if (usr.success) {\n          // var session = req.session;\n          // session.token = result.message;\n          // session.user = user;\n          res.status(\"200\").json(usr);\n        } else\n          res.status(\"401\").json({ success: false, message: \"Unauthorized\" });\n      } else {\n        res\n          .status(\"401\")\n          .json({ success: false, message: err.message || \"Unauthorized\" });\n      }\n    } else\n      res\n        .status(\"401\")\n        .json({ success: false, message: err.message || \"Unauthorized\" });\n  } catch (err) {\n    console.log(\"error\", err);\n    res.status(\"404\").json({ token: null });\n  }\n};\n\nexports.getTokenByFacebookId = async (req, res) => {\n  try {\n    let { id, captchaToken } = req.query;\n    let validCaptcha = await validateRecaptcha(captchaToken);\n    if (validCaptcha) {\n      let usr = await User.getUserByFacebookId(id); //.then((usr) => {\n      if (usr) {\n        let token = usr.generateUserToken();\n        res.status(\"200\").json({ token });\n      } else {\n        res.status(\"404\").json({ token: null });\n      }\n    } else res.status(\"401\").json({ token: null });\n  } catch (err) {\n    console.log(\"error\", err);\n    res.status(\"404\").json({ token: null });\n  }\n};\n\nexports.getTokenByGoogleId = async (req, res) => {\n  try {\n    let { id, captchaToken } = req.query;\n    let validCaptcha = await validateRecaptcha(captchaToken);\n    if (validCaptcha) {\n      let usr = await User.getUserByGoogleId(id);\n      if (usr) {\n        let token = usr.generateUserToken();\n        res.status(\"200\").json({ token });\n      } else {\n        res.status(\"404\").json({ token: null });\n      }\n    } else res.status(\"401\").json({ token: null });\n  } catch (err) {\n    console.log(\"error\", err);\n    res.status(\"404\").json({ token: null });\n  }\n};\n\nexports.getTokenByAppleId = async (req, res) => {\n  try {\n    let { id, captchaToken } = req.query;\n    let validCaptcha = await validateRecaptcha(captchaToken);\n    if (validCaptcha) {\n      let usr = await User.getUserByAppleId(id);\n      if (usr) {\n        let token = usr.generateUserToken();\n        res.status(\"200\").json({ token });\n      } else {\n        res.status(\"404\").json({ token: null });\n      }\n    } else res.status(\"401\").json({ token: null });\n  } catch (err) {\n    console.log(\"error\", err);\n    res.status(\"404\").json({ token: null });\n  }\n};\n\nexports.isValidToken = (req, res, next) => {\n  let token = req.headers[\"authorization\"];\n  return new Promise((resolve, reject) => {\n    User.isValidToken(token).then(\n      (isValid) => {\n        if (isValid)\n          res\n            .status(\"200\")\n            .json({ valid: true, message: \"the token is valid\" });\n        else\n          res.status(\"401\")({\n            valid: false,\n            message: \"the token is not valid\",\n          });\n      },\n      (err) => res.status(\"500\")(err)\n    );\n  });\n};\n\nexports.validateTokenPath = (req, res, next) => {\n  let { token, user, path } = req.body;\n  //over here add logic to check if a path is valid for the given context (user-> userType and jwt token)\n  viewPermissions.permissionValid(path, token, user).then(\n    (result) => {\n      res.status(\"200\").json({ valid: true, message: \"ok :)\" });\n    },\n    (err) => {\n      res.status(\"401\").json(err);\n    }\n  );\n};\n\nexports.logOff = (req, res, next) => {\n  if (req.session)\n    req.session.destroy((err) => {\n      if (err)\n        res.status(\"500\").json({\n          success: false,\n          message:\n            err.message || \"An unknow error occurs while trying to log off.\",\n        });\n      res.status(\"200\").json({ success: true, message: \"session destroyed.\" });\n    });\n};\n","const suburbService = require(\"../logic/suburbService\");\nconst userService = require(\"../logic/userService\");\nconst userTypes = require(\"../constants/types\").userTypes;\nconst moment = require(\"moment\");\nconst ObjectId = require(\"mongoose\").Types.ObjectId;\nconst validateRecaptcha = require(\"../logic/auth\").validateRecaptcha;\n\nexports.approveReject = async (req, res, next) => {\n  try {\n    let { suburbId, newStatus, details } = req.body;\n    let suburb = await suburbService.getSuburbById(suburbId);\n    let status = suburbService.getSuburbStatus(newStatus);\n    if (suburb && status) {\n      let addStatus = await suburbService.suburbAddStatus(suburbId, {\n        ...status,\n        details,\n        transtime: moment.utc(),\n      });\n      if (addStatus) {\n        if (status.status === \"approved\")\n          await userService.updateUser({\n            _id: suburb.userAdmins[0].id,\n            userType: userTypes.suburbAdmin,\n            transtime: moment.utc(),\n          });\n        res.status(200).json({\n          success: true,\n          message: `El estatus ha sido actualizado correctamente, el nuevo estatus es: \"${status.status}\"`,\n        });\n      }\n    } else\n      res.status(400).json({\n        success: false,\n        message: \"El estatus no es valido o la colonia no existe\",\n      });\n  } catch (ex) {\n    res.status(400).json({\n      success: false,\n      message: ex.message || \"No se pudo procesar aprobar/rechazar la colonia.\",\n    });\n  }\n};\n\nexports.getSuburbByAdminId = (req, res, next) => {\n  let userId = req.query.id;\n  suburbService.getSuburbByAdminUser(userId).then(\n    (result) => {\n      res.status(\"200\").json(result);\n    },\n    (err) => {\n      res.status(400).json({\n        success: false,\n        message:\n          err.message || \"No se pudo obtener la informacion de la colonia.\",\n      });\n    }\n  );\n};\n\nexports.getSuburbById = (req, res, next) => {\n  let suburbId = req.query.suburbId;\n  suburbService.getSuburbById(suburbId).then(\n    (result) => {\n      res.status(200).json(result);\n    },\n    (err) => {\n      res.status(400).json({\n        success: false,\n        message: err.message || \"no se encontro la colonia\",\n      });\n    }\n  );\n};\n\nexports.addSuburbInvite = (req, res, next) => {\n  let { suburbId, name, street, streetNumber, userType } = req.body;\n  suburbService\n    .addSuburbInvite(suburbId, name, street, streetNumber, userType)\n    .then(\n      (result) => {\n        res.status(200).json(result);\n      },\n      (err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message || \"No se pudo generar la invitacion para el usuario.\",\n        });\n      }\n    );\n};\n\nexports.getSuburbInvite = async (req, res, next) => {\n  try {\n    let { code, captchaToken } = req.query;\n    let invite = await suburbService.getSuburbInvite(code);\n    let validCaptcha = await validateRecaptcha(captchaToken);\n    if (validCaptcha) {\n      res.status(200).json(invite);\n    } else res.status(401).json({ success: false, message: \"token invalido\" });\n  } catch (err) {\n    res.status(500).json({\n      success: false,\n      message: err.message || \"No se pudo obtener la invitacion.\",\n    });\n  }\n};\n\nexports.getStreets = (req, res) => {\n  let suburbId = req.query.suburbId;\n  if (suburbId) {\n    userService.getUsersBySuburb(suburbId).then(\n      (users) => {\n        let streets = users.map((usr) => usr.street);\n        const distinctStreets = [...new Set(streets)];\n        res\n          .status(200)\n          .json(\n            distinctStreets\n              .filter((u) => typeof u !== \"undefined\")\n              .map((s) => ({ street: s }))\n          );\n      },\n      (err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message ||\n            \"No se pudieron obtener las calles del fraccionamiento\",\n        });\n      }\n    );\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.getStreetNumbers = (req, res) => {\n  let { suburbId, street } = req.query;\n  if (suburbId) {\n    userService.getUsersBySuburbStreet(suburbId, street).then(\n      (users) => {\n        let streetNumbers = users.map((usr) => usr.streetNumber);\n        const distinctStreetNumbers = [...new Set(streetNumbers)];\n        res\n          .status(200)\n          .json(\n            distinctStreetNumbers\n              .filter((u) => typeof u !== \"undefined\")\n              .map((s) => ({ streetNumber: s }))\n          );\n      },\n      (err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message || \"No se pudieron obtener los numeros de la calle\",\n        });\n      }\n    );\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.saveSuburbConfig = (req, res) => {\n  let { suburbId, config } = req.body;\n  if (ObjectId.isValid(suburbId)) {\n    suburbService\n      .saveSuburbConfig(suburbId, config)\n      .then((sub) => {\n        res.status(200).json({\n          success: true,\n          message:\n            \"La configuración del fraccionamiento fue actualizada correctamente.\",\n        });\n      })\n      .catch((err) => {\n        res.status(500).json({\n          success: false,\n          message: err.message || \"No se pudo actualizar la configuracion\",\n        });\n      });\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.getSuburbConfig = (req, res) => {\n  let { suburbId } = req.query;\n  if (ObjectId.isValid(suburbId)) {\n    suburbService\n      .getSuburbConfig(suburbId)\n      .then((config) => {\n        res.status(200).json({ ...config });\n      })\n      .catch((err) => {\n        res.status(500).json({\n          success: false,\n          message: err.message || \"No se pudo obtener la configuracion\",\n        });\n      });\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.saveSuburbStreet = (req, res) => {\n  let { suburbId, street } = req.body;\n  if (ObjectId.isValid(suburbId)) {\n    suburbService\n      .saveSuburbStreet(suburbId, street)\n      .then((sub) => {\n        res.status(200).json({\n          success: true,\n          message: \"La calle fue guardada correctamente.\",\n        });\n      })\n      .catch((err) => {\n        res.status(500).json({\n          success: false,\n          message: err.message || \"No se pudo guardar la calle\",\n        });\n      });\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.getSuburbStreets = (req, res) => {\n  let { suburbId } = req.query;\n  if (ObjectId.isValid(suburbId)) {\n    suburbService\n      .getSuburbStreets(suburbId)\n      .then((streets) => {\n        res.status(200).json({ ...streets });\n      })\n      .catch((err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message ||\n            \"No se pudieron obtener las calles del fraccionamiento\",\n        });\n      });\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n","const userService = require(\"../logic/userService\");\nconst userTypes = require(\"../constants/types\").userTypes;\nconst SuburbInvite = require(\"../models/suburbInvite\");\nconst validateRecaptcha = require(\"../logic/auth\").validateRecaptcha;\n\nexports.saveGoogleUser = (req, res, next) => {\n  //get user data here\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    appleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //save the user here\n      userService\n        .saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          facebookId,\n          googleId,\n          appleId,\n          userConfirmed: true,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.saveFacebookUser = (req, res, next) => {\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    appleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //save the user here\n      userService\n        .saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          facebookId,\n          appleId,\n          googleId,\n          userConfirmed: true,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.saveAppleUser = (req, res, next) => {\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    appleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //save the user here\n      userService\n        .saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          facebookId,\n          googleId,\n          appleId,\n          userConfirmed: true,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.updateUserPicture = (req, res) => {\n  let { userId, photoUrl } = req.body;\n  userService\n    .updateUserPicture(userId, photoUrl)\n    .then((updated) => {\n      res\n        .status(\"200\")\n        .json({ success: true, message: \"profile picture updated.\" });\n    })\n    .catch((err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    });\n};\n\nexports.saveEmailUser = (req, res, next) => {\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    appleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //if the user is registered through email credentials the user needs to be confirmed through an email\n      userService\n        .saveUserWithPassword({\n          name,\n          lastName,\n          loginName,\n          email,\n          password: password,\n          cellphone,\n          facebookId,\n          googleId,\n          appleId,\n          userConfirmed: false,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.createUserByType = async (req, res, next) => {\n  try {\n    const { name, lastName, loginName, email, cellphone } = req.body;\n    const userType = userTypes[req.params.userType];\n    if (!userType) {\n      res.status(\"400\").json({ success: false, message: \"Bad request.\" });\n      return;\n    }\n    const result = await userService.saveUser({\n      name,\n      lastName,\n      loginName,\n      email,\n      cellphone,\n      userConfirmed: false,\n      userType,\n    });\n    res.status(\"200\").json({\n      success: true,\n      message: result.message || \"Has sido registrado correctamente.\",\n    });\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.saveUserBySuburbId = async (req, res) => {\n  try {\n    let {\n      name,\n      lastName,\n      loginName,\n      email,\n      password,\n      cellphone,\n      facebookId,\n      googleId,\n      appleId,\n      photoUrl,\n      suburbId,\n      street,\n      streetNumber,\n      code,\n      userType,\n      captchaToken, // add captcha here\n    } = req.body;\n    let validCaptcha = await validateRecaptcha(captchaToken);\n    if (validCaptcha) {\n      let getcode = await SuburbInvite.GetInviteByCode(code);\n      let save = null;\n      if (password && password.trim() !== \"\") {\n        save = await userService.saveUserWithPassword({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          photoUrl,\n          facebookId,\n          googleId,\n          appleId,\n          suburb: suburbId,\n          street,\n          streetNumber,\n          userType,\n          userConfirmed: false, // if the user is an email user the user needs to confirm\n        });\n      } else {\n        save = await userService.saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          photoUrl,\n          facebookId,\n          googleId,\n          appleId,\n          suburb: suburbId,\n          street,\n          streetNumber,\n          userType,\n          userConfirmed: true,\n        });\n      }\n      let updateCode = await SuburbInvite.UpdateSuburbInviteUsed(\n        code,\n        save.userData._doc._id.toString()\n      );\n\n      res.status(\"200\").json({\n        success: true,\n        message: updateCode.message || \"Has sido registrado correctamente.\",\n      });\n    } else res.status(\"401\").json({ success: false, message: \"invalid token\" });\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserByType = async (req, res, next) => {\n  try {\n    const userType = userTypes[req.params.userType];\n    if (!userType) {\n      res.status(\"400\").json({ success: false, message: \"Bad request.\" });\n      return;\n    }\n    const result = await userService.getUserByType(userType);\n    res.status(\"200\").json({ success: true, data: result });\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserInfo = async (req, res, next) => {\n  try {\n    userService.getUserByToken(req.query.token).then(\n      (result) => {\n        res.status(\"200\").json(result);\n      },\n      (err) => {\n        res\n          .status(\"400\")\n          .json({ success: false, message: err.message || \"Bad request.\" });\n      }\n    );\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserById = async (req, res, next) => {\n  try {\n    let result = await userService.getUserById(req.query.id);\n    res.status(\"200\").json(result);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserFavs = async (req, res, next) => {\n  try {\n    let userFavs = await userService.getUserFavorites(req.query.userId);\n    res.status(\"200\").json(userFavs);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.addUserFavs = async (req, res, next) => {\n  try {\n    let { favs, userId } = req.body;\n    let userFavs = await userService.saveUserFavorites(userId, favs);\n    res.status(\"200\").json(userFavs);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.removeUserFavs = async (req, res, next) => {\n  try {\n    let { favs, userId } = req.body;\n    let userFavs = await userService.removeUserFavorites(userId, favs);\n    res.status(\"200\").json(userFavs);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.addUserPushToken = async (req, res, next) => {\n  try {\n    let { pushToken, userId } = req.body;\n    let pushTokens = await userService.addUserPushToken(userId, pushToken);\n    res.status(\"200\").json(pushTokens);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUsersByAddress = async (req, res) => {\n  try {\n    let { suburbId, street, streetNumber } = req.query;\n    let users = await userService.getUsersByAddress(\n      suburbId,\n      street,\n      streetNumber\n    );\n    res.status(\"200\").json(users);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.deleteUserInfo = async (req, res, next) => {\n  try {\n    let { userId } = req.body;\n    let removeUserInfo = await userService.deleteUserInfo(userId);\n    res.status(\"200\").json(removeUserInfo);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n","const User = require(\"../models/user\");\nconst userTypes = require(\"../constants/types\").userTypes;\nconst axios = require(\"axios\").default;\n\nconst openApi = [\n  \"/api/checkAuth\",\n  \"/api/auth/fbtoken\",\n  \"/api/auth/googletoken\",\n  \"/api/auth/appletoken\",\n  \"/api/saveGoogleUser\",\n  \"/api/saveFacebookUser\",\n  \"/api/saveAppleUser\",\n  \"/api/saveEmailUser\",\n  \"/api/saveUserBySuburb\",\n  \"/api/signUp\",\n  \"/api/validateTokenPath\",\n  \"/api/cp/getCPInfo\",\n  \"/api/file/upload\",\n  \"/api/suburb/getInviteByCode\",\n  \"/api/notification/test\",\n  \"/api/suburb/updateConfig\", // remover esta api de esta lista\n  \"/api/suburb/getConfig\", //remover esta api de esta lista\n  \"/api/suburb/saveStreet\", //remover esta api de la lista\n  \"/api/suburb/getAllStreets\", //remover este endpoint de la lista\n  \"/api/deleteUserInfo\", //remover este endpoint de la lista\n];\n\nconst protectedApi = [\"/api/suburb/approveReject\"];\n\nexports.Auth = class Auth {\n  validateToken(token) {\n    let user = User;\n\n    let def = user.isValidToken(token);\n    return new Promise(\n      (resolve, reject) => {\n        def.then(function (isValid) {\n          if (isValid) resolve({ valid: true, message: \"the token is valid\" });\n          else\n            resolve({\n              valid: false,\n              message: \"the token is not valid\",\n            });\n        });\n      },\n      (err) => reject({ valid: false, message: \"The token cannot be checked.\" })\n    );\n  }\n\n  validateAdminUser(token) {\n    let user = User;\n    let getPayload = user.getTokenPayload(token);\n    return new Promise(\n      (resolve, reject) => {\n        getPayload.then((payload) => {\n          if (payload.userType !== userTypes.admin)\n            reject({\n              valid: false,\n              message:\n                \"The user does not have permissions to execute this api.\",\n            });\n          else resolve({ valid: true, message: \"Ok\" });\n        });\n      },\n      (err) => {\n        console.log(err);\n        reject({\n          valid: false,\n          message: \"The user does not have permissions to execute this api.\",\n        });\n      }\n    );\n  }\n\n  isOpenApi(apiPath) {\n    return openApi.indexOf(apiPath) !== -1 ? true : false;\n  }\n\n  isProtectedApi(apiPath) {\n    return protectedApi.indexOf(apiPath) !== -1 ? true : false;\n  }\n\n  validateApiRequest(apiPath, token) {\n    if (this.isOpenApi(apiPath))\n      return new Promise((resolve) =>\n        resolve({ valid: true, message: \"the api is open.\" })\n      );\n    else if (this.isProtectedApi(apiPath)) {\n      return new Promise((resolve, reject) => {\n        this.validateAdminUser(token)\n          .then((res) => {\n            let validateToken = this.validateToken(token);\n            validateToken\n              .then((res) => resolve(res))\n              .catch((err) => reject(err));\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    } else {\n      return this.validateToken(token);\n    }\n  }\n};\n\nexports.validateRecaptcha = async (token) => {\n  try {\n    const secretKey = process.env.RECAPTCHA_SECRET;\n    const verificationURL = `https://www.google.com/recaptcha/api/siteverify?secret=${secretKey}&response=${token}`;\n    let response = await axios.post(\n      verificationURL,\n      {},\n      {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n        },\n      }\n    );\n\n    let captchaResult = response.data;\n    return captchaResult.success;\n  } catch (err) {\n    throw err;\n  }\n};\n","const User = require(\"../models/user\");\nconst menus = require(\"../constants/menusConfig\").menus;\n\n/**\n * Get menus by logged user\n */\nexports.getMenusByUser = async (userToken) => {\n  return new Promise((resolve, reject) => {\n    let getPayload = User.getTokenPayload(userToken);\n    getPayload.then(payload => {\n      const { userType, loginName } = payload;\n\n      let userMenus = menus.filter(menu => {\n        let types = menu.validUserTypes.filter(g => g.toLowerCase() === userType.toLowerCase());\n        return types.length > 0;\n      }).map(item => ({ name: item.name, path: item.path, visible: item.visible, icon: item.icon, order: item.order }));\n\n\n      resolve(userMenus);\n    }, errP => {\n      reject({ valid: false, message: 'The token is not allowed' });\n    });\n  });\n};","const PostalCode = require(\"../models/postalCode\");\n\n\nexports.getCPInfo = async (postalCode) => {\n    return new Promise((resolve, reject) => {\n        if (postalCode.length > 2) {\n            getInfo = PostalCode.getCPInfo(postalCode);\n            getInfo.then(cp => {\n                resolve(cp);\n            }, err => {\n                reject({ valid: false, message: 'No se pudo obtener la informaion del codigo postal.' });\n            });\n        }\n        else {\n            reject({ valid: false, message: 'La longitud del codigo postal no es valida.' });\n        }\n    });\n}","const Expo = require(\"expo-server-sdk\").Expo;\n\nlet expo = new Expo();\n\nconst getMessagesBatches = (pushTokens, message) => {\n  let messages = [];\n  pushTokens.forEach((token) => {\n    if (!Expo.isExpoPushToken(token)) {\n      console.error(`Push token ${token} is not a valid push token`);\n      //continue;\n    }\n\n    messages = [...messages, { ...message, to: token }];\n  });\n  return expo.chunkPushNotifications(messages);\n};\n\nconst sendExpoNotification = async (chunks) => {\n  //(async () => {\n  // Send the chunks to the Expo push notification service. There are\n  // different strategies you could use. A simple one is to send one chunk at a\n  // time, which nicely spreads the load out over time:\n  let tickets = [];\n  for (let chunk of chunks) {\n    try {\n      let ticketChunk = await expo.sendPushNotificationsAsync(chunk);\n      console.log(ticketChunk);\n      tickets.push(...ticketChunk);\n      // NOTE: If a ticket contains an error code in ticket.details.error, you\n      // must handle it appropriately. The error codes are listed in the Expo\n      // documentation:\n      // https://docs.expo.io/push-notifications/sending-notifications/#individual-errors\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  return tickets;\n  //})();\n};\n\nconst checkTickets = async (tickets) => {\n  // Later, after the Expo push notification service has delivered the\n  // notifications to Apple or Google (usually quickly, but allow the the service\n  // up to 30 minutes when under load), a \"receipt\" for each notification is\n  // created. The receipts will be available for at least a day; stale receipts\n  // are deleted.\n  //\n  // The ID of each receipt is sent back in the response \"ticket\" for each\n  // notification. In summary, sending a notification produces a ticket, which\n  // contains a receipt ID you later use to get the receipt.\n  //\n  // The receipts may contain error codes to which you must respond. In\n  // particular, Apple or Google may block apps that continue to send\n  // notifications to devices that have blocked notifications or have uninstalled\n  // your app. Expo does not control this policy and sends back the feedback from\n  // Apple and Google so you can handle it appropriately.\n  let receiptIds = [];\n  for (let ticket of tickets) {\n    // NOTE: Not all tickets have IDs; for example, tickets for notifications\n    // that could not be enqueued will have error information and no receipt ID.\n    if (ticket.id) {\n      receiptIds.push(ticket.id);\n    }\n  }\n\n  let receiptIdChunks = expo.chunkPushNotificationReceiptIds(receiptIds);\n  //(async () => {\n  // Like sending notifications, there are different strategies you could use\n  // to retrieve batches of receipts from the Expo service.\n  for (let chunk of receiptIdChunks) {\n    try {\n      let receipts = await expo.getPushNotificationReceiptsAsync(chunk);\n      console.log(receipts);\n\n      // The receipts specify whether Apple or Google successfully received the\n      // notification and information about an error, if one occurred.\n      for (let receiptId in receipts) {\n        let { status, message, details } = receipts[receiptId];\n        if (status === \"ok\") {\n          //continue;\n        } else if (status === \"error\") {\n          console.error(\n            `There was an error sending a notification: ${message}`\n          );\n          if (details && details.error) {\n            // The error codes are listed in the Expo documentation:\n            // https://docs.expo.io/push-notifications/sending-notifications/#individual-errors\n            // You must handle the errors appropriately.\n            console.error(`The error code is ${details.error}`);\n          }\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  //})();\n};\n\nconst sendPushNotification = async (pushTokens, message) => {\n  try {\n    let chunks = getMessagesBatches(pushTokens, message);\n    let tickets = await sendExpoNotification(chunks);\n    await checkTickets(tickets);\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nmodule.exports = {\n  sendPushNotification,\n};\n","const Suburb = require(\"../models/suburb\");\nconst suburbStatus = require(\"../constants/types\").suburbStatus;\nconst SuburbInvite = require(\"../models/suburbInvite\");\nconst User = require(\"../models/user\");\nconst SuburbConfig = require(\"../models/suburbConfig\");\nconst SuburbStreet = require(\"../models/suburbStreet\");\nconst ObjectId = require(\"mongoose\").Types.ObjectId;\n\nconst CryptoJS = require(\"crypto-js\");\n\nvar pjson = require(\"../../package.json\");\nconst { Mongoose } = require(\"mongoose\");\n\nconst getSuburbStatus = (statusName) => {\n  let status = suburbStatus.filter((st) => st.status === statusName);\n  return status[0];\n};\n\nconst encryption = (data) => {\n  if (!data) return \"\";\n  return CryptoJS.AES.encrypt(data, pjson.cryptoKey).toString();\n};\n\nconst decryption = (data) => {\n  if (!data) return \"\";\n  var bytes = CryptoJS.AES.decrypt(data, pjson.cryptoKey);\n  return bytes.toString(CryptoJS.enc.Utf8);\n};\n\nconst saveSuburb = (suburbObj) => {\n  return new Promise((resolve, reject) => {\n    Suburb.SaveSuburb(suburbObj).then((sub, err) => {\n      if (!err)\n        resolve({\n          success: true,\n          message: \"La colonia fue guardada correctamente.\",\n          id: sub.id,\n        });\n      else\n        reject({\n          success: false,\n          message:\n            err.message || \"Ocurrio un error al intentar guardar la colonia.\",\n        });\n    });\n  });\n};\n\nconst suburbAddStatus = (id, status) => {\n  return new Promise((resolve, reject) => {\n    Suburb.UpdateStatus(id, status).then((sub, err) => {\n      if (!err)\n        resolve({\n          success: true,\n          message: \"El status de la colonia fue actualizado correctamente.\",\n        });\n      else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar actualizar el estatus de la colonia.\",\n        });\n    });\n  });\n};\n\nconst suburbAddStatusByName = (name, postalCode, status) => {\n  return new Promise((resolve, reject) => {\n    Suburb.UpdateStatusByName(name, postalCode, status).then((sub, err) => {\n      if (!err)\n        resolve({\n          success: true,\n          message: \"El status de la colonia fue actualizado correctamente.\",\n        });\n      else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar actualizar el estatus de la colonia.\",\n        });\n    });\n  });\n};\n\nconst getSuburbByAdminUser = (userId) => {\n  return new Promise((resolve, reject) => {\n    Suburb.GetSuburbByUserId(userId).then((sub, err) => {\n      if (!err) resolve(sub);\n      else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar obtener la colonia por usuario administrador.\",\n        });\n    });\n  });\n};\n\nconst getSuburbById = (suburbId) => {\n  return new Promise((resolve, reject) => {\n    Suburb.GetSuburb(suburbId)\n      .then((sub, err) => {\n        if (!err) resolve(sub);\n        else\n          reject({\n            success: false,\n            message:\n              err.message || \"Ocurrio un error al intentar obtener la colonia.\",\n          });\n      })\n      .catch((err) => reject(err));\n  });\n};\n\nconst addSuburbInvite = (suburbId, name, street, streetNumber, userType) => {\n  return new Promise((resolve, reject) => {\n    let _code =\n      Math.random().toString(36).substring(2, 4).toUpperCase() +\n      Math.random().toString(36).substring(2, 4).toUpperCase();\n    console.log(encryption(street));\n    SuburbInvite.SaveSuburbInvite({\n      code: _code,\n      suburbId,\n      name,\n      street: encryption(street),\n      streetNumber: encryption(streetNumber),\n      userType,\n    }).then((subInv, err) => {\n      if (!err) {\n        Suburb.AddSuburbInvite(suburbId, subInv._id.toString()).then(\n          (sub, err) => {\n            if (!err) resolve(subInv);\n            else\n              reject({\n                success: false,\n                message:\n                  err.message ||\n                  \"Ocurrio un error al intentar agregar una invitacion a usuario\",\n              });\n          }\n        );\n      } else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar agregar una invitacion a usuario\",\n        });\n    });\n  });\n};\n\nconst getSuburbInvite = (code) => {\n  return new Promise((resolve, reject) => {\n    SuburbInvite.GetInviteByCode(code)\n      .then((subInvite, err) => {\n        if (!err) {\n          Suburb.GetSuburbBasicInfo(subInvite.suburbId.toString()).then(\n            (suburb, err) => {\n              if (!err) {\n                const { street, streetNumber, ...props } = subInvite._doc;\n                const result = {\n                  suburb: {\n                    ...suburb,\n                  },\n                  invite: {\n                    street: decryption(street),\n                    streetNumber: decryption(streetNumber),\n                    ...props,\n                  },\n                };\n                resolve(result);\n              } else {\n                reject({\n                  success: false,\n                  message:\n                    err.message ||\n                    \"Ocurrio un error al intentar obtener la invitación\",\n                });\n              }\n            }\n          );\n        } else\n          reject({\n            success: false,\n            message:\n              err.message ||\n              \"Ocurrio un error al intentar obtener la invitación\",\n          });\n      })\n      .catch((err) => {\n        reject({\n          sucess: false,\n          message:\n            err.message ||\n            \"Ocurrion un error al intentar obtener la invitación\",\n        });\n      });\n  });\n};\n\nconst saveSuburbConfig = async (suburbId, config) => {\n  try {\n    let suburbData = await Suburb.GetSuburb(suburbId);\n    if (!ObjectId.isValid(suburbData.config)) {\n      let saveConfig = await SuburbConfig.SaveConfig(config);\n      await Suburb.SaveSuburbConfig(suburbId, saveConfig._id);\n      return {\n        success: true,\n        message: \"la configuracion fue agregada con exito.\",\n        id: saveConfig.id,\n      };\n    } else {\n      let updateConfig = await SuburbConfig.UpdateConfig(\n        suburbData.config.toString(),\n        config\n      );\n      return {\n        success: true,\n        message: \"la configuracion fue actualizada con exito.\",\n      };\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getSuburbConfig = async (suburbId) => {\n  try {\n    return await Suburb.GetSuburbConfig(suburbId);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst saveSuburbStreet = async (suburbId, street) => {\n  try {\n    let suburbData = await Suburb.GetSuburbStreets(suburbId);\n    let selectedStreet = suburbData.streets\n      ? suburbData.streets.filter(\n          (st) => st.street.toLowerCase() === street.street.toLowerCase()\n        )\n      : [];\n    if (selectedStreet.length === 0) {\n      let saveStreet = await SuburbStreet.SaveStreet(street);\n      await Suburb.SaveSuburbStreet(suburbId, saveStreet._id);\n      return {\n        success: true,\n        message: \"la calle fue agregada con exito.\",\n        id: saveStreet.id,\n      };\n    } else {\n      let updateStreet = await SuburbStreet.UpdateStreet(\n        selectedStreet[0]._id,\n        street\n      );\n      return { success: true, message: \"la calle fue actualizada con exito.\" };\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getSuburbStreets = async (suburbId) => {\n  try {\n    return await Suburb.GetSuburbStreets(suburbId);\n  } catch (err) {\n    throw err;\n  }\n};\n\nmodule.exports = {\n  saveSuburb,\n  suburbAddStatus,\n  suburbAddStatusByName,\n  getSuburbByAdminUser,\n  getSuburbById,\n  getSuburbStatus,\n  addSuburbInvite,\n  getSuburbInvite,\n  saveSuburbConfig,\n  getSuburbConfig,\n  saveSuburbStreet,\n  getSuburbStreets,\n};\n","const User = require(\"../models/user\");\nconst request = require(\"request\");\nconst userTypes = require(\"../constants/types\").userTypes;\n\nconst saveUser = (userObj) => {\n  return new Promise((resolve, reject) => {\n    User.getLogin(userObj.loginName).then(\n      (login) => {\n        if (login) {\n          reject({\n            success: false,\n            message: \"El usuario existe actualmente en la base de datos.\",\n          });\n        } else {\n          //create the user\n          User.saveUser(\n            userObj.userType\n              ? userObj\n              : { ...userObj, userType: userTypes.guest }\n          ).then(\n            (usr, err) => {\n              //check if there is an error\n              if (!err)\n                resolve({\n                  success: true,\n                  message: \"Has sido registrado correctamente.\",\n                  userData: { ...usr },\n                });\n              else\n                reject({\n                  success: false,\n                  message: err.message || \"No se pudo registrar el usuario.\",\n                });\n            },\n            (err) => {\n              reject({ success: false, message: err.message });\n            }\n          );\n        }\n      },\n      (err) => {\n        reject({\n          success: false,\n          message:\n            err.message || \"Ocurrio un error al tratar de guardar el usuario.\",\n        });\n      }\n    );\n  });\n};\n\nconst updateUser = async (userObj) => {\n  return new Promise((resolve, reject) => {\n    User.updateUser(userObj).then(\n      (usr, err) => {\n        if (!err)\n          resolve({\n            success: true,\n            message: \"Ha sido actualizado correctamente.\",\n          });\n        else\n          reject({\n            success: false,\n            message: err.message || \"No se pudo actualizar el usuario.\",\n          });\n      },\n      (err) => {\n        reject({ success: false, message: err.message });\n      }\n    );\n  });\n};\n\nconst updateUserPicture = async (userId, photoUrl) => {\n  try {\n    return await User.updateUserPicture(userId, photoUrl);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst validateRecaptcha = async (token) => {\n  const secretKey = process.env.RECAPTCHA_SECRET;\n  const verificationURL = `https://www.google.com/recaptcha/api/siteverify?secret=${secretKey}&response=${token}`;\n\n  return new Promise((resolve, reject) => {\n    request.post(verificationURL, (error, resG, body) => {\n      if (error)\n        reject({\n          success: false,\n          message:\n            \"Por favor intenta de nuevo (no es posible validar recaptcha).\",\n        });\n      let status = JSON.parse(body);\n      if (!status.success)\n        reject({ success: false, message: \"Por favor intenta de nuevo.\" });\n      else if (status.score <= 0.5)\n        reject({\n          success: false,\n          message: \"Por favor intenta de nuevo (score demasiado bajo).\",\n        });\n      else resolve({ success: true, message: \"recaptcha valido.\" });\n    });\n  });\n};\n\nconst saveUserWithPassword = async (userObj) => {\n  const { password } = userObj;\n  return new Promise((resolve, reject) => {\n    User.encryptPassword(password).then(\n      (resEncrypt) => {\n        let encryptedPassword = resEncrypt.hash;\n        userObj.password = encryptedPassword;\n        saveUser(userObj).then(\n          (result) => {\n            resolve(result);\n          },\n          (err) => {\n            reject(err);\n          }\n        );\n      },\n      (err) => {\n        reject({ success: false, message: err.message || \"Bad request.\" });\n      }\n    );\n  });\n};\n\nconst getUserByType = async (userType) => {\n  try {\n    return await User.find({\n      userType: userType,\n    });\n  } catch (ex) {\n    return ex;\n  }\n};\n\nconst getUserByToken = async (token) => {\n  try {\n    let payload = await User.getTokenPayload(token);\n    return await User.findById(payload.userId);\n  } catch (ex) {\n    return ex;\n  }\n};\n\nconst getUserById = async (id) => {\n  try {\n    return await User.getUserById(id);\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst getUserFavorites = async (userId) => {\n  try {\n    let payload = await User.getUserFavs(userId);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst saveUserFavorites = async (userId, favs) => {\n  try {\n    let payload = await User.addUserFavs(userId, favs);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst removeUserFavorites = async (userId, favs) => {\n  try {\n    let payload = await User.removeUserFavs(userId, favs);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst addUserPushToken = async (userId, pushToken) => {\n  try {\n    let payload = await User.addUserPushToken(userId, pushToken);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst getUsersBySuburb = async (suburbId) => {\n  try {\n    let users = await User.getUsersBySuburb(suburbId);\n    return users;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getUsersBySuburbStreet = async (suburbId, street) => {\n  try {\n    let users = await User.getUsersBySuburbStreet(suburbId, street);\n    return users;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getUsersByAddress = async (suburbId, street, streetNumber) => {\n  try {\n    let users = await User.getUsersByAddress(suburbId, street, streetNumber);\n    return users;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst deleteUserInfo = async (userId) => {\n  try {\n    let payload = await User.deleteUserInfo(userId);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nmodule.exports = {\n  saveUser,\n  validateRecaptcha,\n  saveUserWithPassword,\n  getUserByType,\n  getUserByToken,\n  updateUser,\n  getUserFavorites,\n  saveUserFavorites,\n  removeUserFavorites,\n  getUserById,\n  addUserPushToken,\n  getUsersBySuburb,\n  getUsersBySuburbStreet,\n  getUsersByAddress,\n  updateUserPicture,\n  deleteUserInfo,\n};\n","const User = require(\"../models/user\");\nconst permissions = require(\"../constants/menusConfig\").menus;\n\n\n\nconst validateWithPayload = (path, payload) => {\n    let valid =  { valid: false, message: 'la pantalla no es valida para tu usuario.' };\n    if(!payload || !payload.userType)\n        return valid;\n\n    const { userType } = payload;\n    let validPath = permissions.filter(p => {\n        let types = p.validUserTypes.filter(g => g.toLowerCase() === userType.toLowerCase());\n        return types.length > 0 && p.path.toLowerCase() === path.toLocaleLowerCase();\n\n    });\n\n    if (validPath.length > 0)\n        valid = { valid: true, message: 'ok' };\n    return valid;\n};\n\n\nexports.permissionValid = (path, jwt) => {\n    return new Promise((resolve, reject) => {\n        let user = User;\n        let isValid = user.isValidToken(jwt);\n        isValid.then(res => {\n            let getPayload = user.getTokenPayload(jwt);\n            getPayload.then(payload => {\n                let valid = validateWithPayload(path, payload);\n                if (valid.valid)\n                    resolve(valid);\n                else\n                    reject(valid);\n            }, errP => {\n                reject({ valid: false, message: 'los datos de la sesión no son validos.' });\n            });\n        }, err => {\n            reject({ valid: false, message: 'el token de la sesión no es valido.' });\n        });\n    });\n}","const Auth = require(\"../logic/auth\").Auth;\n\nconst validApiRequest = (apiPath, token) => {\n  return new Promise((resolve, reject) => {\n    let auth = new Auth();\n    auth.validateApiRequest(apiPath, token).then(\n      (res) => {\n        resolve(res);\n      },\n      (err) =>\n        reject({\n          valid: false,\n          message: err.message ? err.message : `Error: ${JSON.stringify(err)}`,\n        })\n    );\n  });\n};\n\nexports.checkApiAuth = (req, res, next) => {\n  console.log(`validando si el request esta autenticado...`);\n  //check request headers over here to know if the request is authenticated\n  let apiPath = req.baseUrl,\n    token = req.headers[\"authorization\"];\n\n  validApiRequest(apiPath, token).then(\n    (result) => {\n      if (result.valid) next();\n      else\n        res\n          .status(\"401\")\n          .json({ success: false, error: \"Unauthorized request.\" });\n    },\n    (err) =>\n      res.status(\"401\").json({\n        success: false,\n        error: err.message || \"An error occurs while validating the request.\",\n      })\n  );\n};\n","const mongoose = require(\"mongoose\");\nconst Menu = require(\"./menu\");\nconst Role = require(\"./role\");\nconst User = require(\"./user\");\nconst SuburbInvite = require(\"./suburbInvite\");\nconst SuburbConfig = require(\"./suburbConfig\");\nconst SuburbStreet = require(\"./suburbStreet\");\nconst PostalCode = require(\"./postalCode\");\n\nconst models = {\n  Menu,\n  Role,\n  User,\n  PostalCode,\n  SuburbInvite,\n  SuburbConfig,\n  SuburbStreet,\n};\n\nconst connectDb = () => {\n  //setup the mongo connection\n  let mConn = mongoose.connect(process.env.DB_CONNECTION, {\n    useNewUrlParser: true,\n  });\n\n  mongoose.connection.on(\n    \"error\",\n    console.error.bind(console, \"Mongo db connection error: \")\n  );\n  return mConn;\n};\n\nmodule.exports = { connectDb, models };\n","const moment = require('moment');\nconst mongoose = require('mongoose');\n//const Base = require('./baseModel');\n\nconst MenuSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        required: 'Enter the menu name'\n    },\n    link: {\n        type: String,\n        required: 'Enter the menu link'\n    },\n    parentId: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'Menu'\n    },\n    position: {\n        type: Number,\n        default: 1\n    },\n    icon: {\n        type: String\n    },\n    visible: {\n        type: Boolean,\n        default: true\n    },\n    active: {\n        type: Boolean,\n        default: true\n    },\n    type: {\n        type: String\n    },\n    transtime: {\n        type: Date,\n        default: moment.utc()\n    }\n});\n\n\nMenuSchema.statics = {\n    getMenuById: function (menuId) { //, projectId){\n        return this.findOne({\n            _id: menuId //, \n            //project: projectId\n        });\n    },\n    updateMenu: function (objMenu) {\n        return this.update({\n            _id: objMenu._id\n        }, {\n                $set: {\n                    'name': objMenu.name,\n                    'link': objMenu.link,\n                    'parentId': objMenu.parentId,\n                    'position': objMenu.position,\n                    'icon': objMenu.position,\n                    'visible': objMenu.visible,\n                    'active': objMenu.active,\n                    'type': objMenu.active,\n                    'transtime': moment.utc()\n                }\n            });\n    },\n    deleteMenu: function (menuId) {\n        return this.deleteMany({\n            _id: menuId\n        });\n    },\n    getChildMenus: function (menuId) {\n        return this.find({\n            parentId: menuId\n        });\n    },\n    getChildMenusRecursively: function (parents) {\n        let _this = this;\n        let getThisLevelChilds = this.getChildMenus(parents);\n        let elements = [];\n        return new Promise((resolve, reject) => {\n            getThisLevelChilds.then((childs) => {\n                if (childs.length > 0) {\n                    elements = JSON.parse(JSON.stringify(childs)).map((child) => {\n                        return child._id;\n                    });\n                    let getInnerChilds = _this.getChildMenusRecursively(elements);\n                    getInnerChilds.then((result) => {\n                        resolve(elements.concat(result));\n                    });\n                } else\n                    resolve(elements);\n            }, (err) => {\n                reject(err);\n            })\n        });\n    },\n    getParentMenusRecursively: function (menuId) {\n        let _this = this;\n        let getThisLevel = this.getMenuById(menuId);\n        let elements = [];\n        return new Promise((resolve, reject) => {\n            getThisLevel.then((menu) => {\n                menu = JSON.parse(JSON.stringify(menu))\n                if (menu && menu.parentId) {\n                    elements.push(menu.parentId);\n                    let getMoreParents = _this.getParentMenusRecursively(menu.parentId);\n                    getMoreParents.then((result) =>\n                        resolve(elements.concat(result)));\n                } else\n                    resolve(elements);\n            }, err => reject(err));\n        });\n    },\n    getMenus: function (menus) {\n        return this.find({ _id: menus });\n    }\n}\n\n\n\n\nconst Menu = mongoose.model(\"Menu\", MenuSchema);\n\nmodule.exports = Menu;","const mongoose = require('mongoose');\n\nconst PostalCodeSchema = new mongoose.Schema({\n    d_codigo: {\n        type: String\n    },\n    d_asenta: {\n        type: String\n    },\n    d_tipo_asenta: {\n        type: String\n    },\n    D_mnpio: {\n        type: String\n    },\n    d_estado: {\n        type: String\n    },\n    d_ciudad: {\n        type: String\n    },\n    d_CP: {\n        type: String\n    },\n    c_estado: {\n        type: String\n    },\n    c_oficina: {\n        type: String\n    },\n    c_CP: {\n        type: String\n    },\n    c_tipo_asenta: {\n        type: String\n    },\n    c_mnpio: {\n        type: String\n    },\n    id_asenta_cpcons: {\n        type: String\n    },\n    d_zona: {\n        type: String\n    },\n    c_cve_ciudad: {\n        type: String\n    }\n});\n\nPostalCodeSchema.statics = {\n    getCPInfo: function (cp) {\n        let regCp = new RegExp(cp)\n        return this.find({ d_codigo: regCp }).limit(100);\n    }\n};\n\nconst PostalCode = mongoose.model(\"PostalCode\", PostalCodeSchema);\n\nmodule.exports = PostalCode;","const moment = require('moment');\nconst mongoose = require(\"mongoose\");\n\nconst RoleSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        required: 'Enter the name of the role'\n    },\n    description: {\n        type: String,\n        required: 'Enter the description of the role'\n    },\n    siteAdministration: {\n        type: Boolean,\n        default: false\n    },\n    sysAdministrator: {\n        type: Boolean,\n        default: false\n    },\n    active: {\n        type: Boolean,\n        default: true\n    },\n    menus: [{\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'Menu'\n    }],\n    transtime: {\n        type: Date,\n        default: moment.utc()\n    }\n});\n\nRoleSchema.statics = {\n    deleteRole: function (roleId) {\n        return this.deleteMany({\n            _id: roleId\n        });\n    },\n    setRoleMenu: function (roleId, menus) {\n        if (!Array.isArray(menus)) menus = [menus];\n        return this.update({\n            _id: roleId\n        }, {\n                $addToSet: {\n                    menus: {\n                        $each: menus\n                    }\n                }\n            }, {\n                multi: true\n            });\n    },\n    deleteRoleMenu: function (roles, menus) {\n        if (!Array.isArray(menus)) menus = [menus];\n        if (!Array.isArray(roles)) roles = [roles];\n\n        return this.update({\n            _id: {\n                $in: roles\n            }\n        }, {\n                $pullAll: {\n                    menus: menus\n                }\n            }, {\n                multi: true\n            });\n    },\n    getRoleMenus: function (roleId) {\n        return new Promise((resolve, reject) => {\n            this.find({\n                _id: roleId\n            }).populate('menus').exec((err, result) => {\n                if (err) reject(err);\n                resolve(result);\n            });\n        });\n    }\n};\n\nconst Role = mongoose.model(\"Role\", RoleSchema);\n\nmodule.exports = Role;","const mongoose = require(\"mongoose\");\n\nconst DropdownSchema = new mongoose.Schema({\n  value: {\n    type: String,\n  },\n  text: {\n    type: String,\n  },\n});\n\nmodule.exports = DropdownSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst DropdownSchema = require(\"./dropdownSchema\");\nconst FieldSchema = new mongoose.Schema({\n  field: {\n    type: String,\n  },\n  type: {\n    type: String,\n  },\n  data: [DropdownSchema],\n  label: {\n    type: String,\n  },\n  mandatory: {\n    type: Boolean,\n    default: false,\n  },\n  mandatoryMessage: {\n    type: String,\n  },\n});\n\nmodule.exports = FieldSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst FieldSchema = require(\"./fieldSchema\");\n\nconst ScreenSchema = new mongoose.Schema({\n  name: { type: String },\n  title: { type: String },\n  fields: [FieldSchema],\n});\n\nmodule.exports = ScreenSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst GuestSchema = new mongoose.Schema({\n  name: {\n    type: String,\n  },\n  vehicle: {\n    type: String,\n  },\n  subject: {\n    type: String,\n  },\n  isService: {\n    type: Boolean,\n    default: false,\n  },\n  plates: {\n    type: String,\n  },\n  additionalInformation: {\n    type: String,\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  arriveOn: {\n    type: Date,\n  },\n  leaveOn: {\n    type: Date,\n  },\n  count: {\n    type: Number,\n    default: 0,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nmodule.exports = GuestSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst PushTokenSchema = new mongoose.Schema({\n  token: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nmodule.exports = PushTokenSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst SuburbFileSchema = new mongoose.Schema({\n  fileName: {\n    type: String,\n  },\n  originalName: {\n    type: String,\n  },\n  actionType: {\n    type: String,\n  },\n  mimetype: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nmodule.exports = SuburbFileSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst SuburbStatusSchema = new mongoose.Schema({\n  status: {\n    type: String,\n  },\n  description: {\n    type: String,\n  },\n  details: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\n//const SuburbStatus = mongoose.model(\"SuburbStatus\", SuburbStatusSchema);\n\nmodule.exports = SuburbStatusSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst SuburbStatusSchema = require(\"./schemas/suburbStatusSchema\");\nconst SuburbFileSchema = require(\"./schemas/suburbFileSchema\");\nconst suburbConfig = require(\"./suburbConfig\");\nconst suburbStreet = require(\"./suburbStreet\");\n\nconst SuburbSchema = new mongoose.Schema({\n  name: {\n    type: String,\n  },\n  location: {\n    type: String,\n  },\n  postalCode: {\n    type: Number,\n  },\n  active: {\n    type: Boolean,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n  userAdmins: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n  ],\n  /*\n        estatus validos:\n        activacionPendiente,\n        activacionRechazada\n        activadoBasico,\n        activadoPlus\n    */\n  status: [SuburbStatusSchema],\n  files: [SuburbFileSchema],\n  suburbInvites: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"SuburbInvite\",\n    },\n  ],\n  config: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"SuburbConfig\",\n  },\n  streets: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"SuburbStreet\",\n    },\n  ],\n});\n\nSuburbSchema.statics = {\n  SaveSuburb: function (suburbObj) {\n    let suburb = new this(suburbObj);\n    return suburb.save();\n  },\n  UpdateStatus: function (id, status) {\n    if (!Array.isArray(status)) status = [status];\n    return this.updateOne(\n      { _id: id },\n      {\n        $addToSet: {\n          status: {\n            $each: status,\n          },\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  UpdateStatusByName: function (name, postalCode) {\n    if (!Array.isArray(status)) status = [status];\n    return this.updateOne(\n      { name: name, postalCode: postalCode },\n      {\n        $addToSet: {\n          status: {\n            $each: status,\n          },\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  AddSuburbInvite: function (id, userInviteId) {\n    if (!Array.isArray(userInviteId)) userInviteId = [userInviteId];\n    return this.updateOne(\n      { _id: id },\n      {\n        $addToSet: {\n          suburbInvites: {\n            $each: userInviteId,\n          },\n        },\n      },\n      { multi: true }\n    );\n  },\n  GetSuburb: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"userAdmins\", \"User\")\n        .populate(\"suburbInvites\", \"SuburbInvite\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          let {\n            name,\n            location,\n            postalCode,\n            active,\n            transtime,\n            status,\n            suburbInvites,\n            config,\n          } = result;\n          resolve({\n            name,\n            location,\n            postalCode,\n            active,\n            transtime,\n            status,\n            suburbInvites,\n            config,\n          });\n        });\n    });\n  },\n  GetSuburbBasicInfo: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        let { name, location, postalCode, active, transtime } = result;\n        resolve({\n          name,\n          location,\n          postalCode,\n          active,\n          transtime,\n        });\n      });\n    });\n  },\n  GetSuburbByName: function (postalCode, name) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        postalCode: postalCode,\n        name: name,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result);\n      });\n    });\n  },\n  GetSuburbByUserId: function (userId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ userAdmins: mongoose.Types.ObjectId(userId) }).exec(\n        (err, result) => {\n          if (err) reject(err);\n          resolve(result);\n        }\n      );\n    });\n  },\n  SaveSuburbConfig: function (id, configId) {\n    return this.updateOne(\n      {\n        _id: id,\n      },\n      {\n        $set: { config: configId },\n      }\n    );\n  },\n  GetSuburbConfig: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"config\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          let { config } = result;\n          if (config) resolve({ ...config._doc });\n          else resolve({});\n        });\n    });\n  },\n  SaveSuburbStreet: function (id, streetId) {\n    if (!Array.isArray(streetId)) streetId = [streetId];\n    return this.updateOne(\n      { _id: id },\n      { $addToSet: { streets: { $each: streetId } } },\n      { multi: true }\n    );\n  },\n  GetSuburbStreets: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"streets\")\n        .lean()\n        .exec((err, result) => {\n          if (err) reject(err);\n          if (result) {\n            let { streets } = result;\n            if (streets) resolve({ streets: [...streets] });\n            else resolve({ streets: [] });\n          } else resolve({ streets: [] });\n        });\n    });\n  },\n};\n\nconst Suburb = mongoose.model(\"Suburb\", SuburbSchema);\n\nmodule.exports = Suburb;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst ScreenSchema = require(\"./schemas/config/screenSchema\");\n\nconst SuburbConfigSchema = new mongoose.Schema({\n  imageUrl: { type: String },\n  screens: [ScreenSchema],\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nSuburbConfigSchema.statics = {\n  SaveConfig: function (suburbConfig) {\n    let config = new this(suburbConfig);\n    return config.save();\n  },\n  UpdateConfig: function (id, config) {\n    return this.updateOne({ _id: id }, { ...config });\n  },\n};\n\nconst SuburbConfig = mongoose.model(\"SuburbConfig\", SuburbConfigSchema);\n\nmodule.exports = SuburbConfig;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst SuburbInviteSchema = new mongoose.Schema({\n  code: {\n    type: String,\n  },\n  name: {\n    type: String,\n  },\n  street: {\n    type: String,\n  },\n  streetNumber: {\n    type: String,\n  },\n  suburbId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"Suburb\",\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  usedBy: {\n    type: String,\n  },\n  updatedTranstime: {\n    type: Date,\n  },\n  userType: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nSuburbInviteSchema.statics = {\n  SaveSuburbInvite: function (userInviteObj) {\n    let userInvite = new this(userInviteObj);\n    return userInvite.save();\n  },\n  UpdateSuburbInviteUsed: function (code, usedBy) {\n    return this.updateOne(\n      { $and: [{ code: code }, { active: true }] },\n      {\n        $set: {\n          usedBy: usedBy,\n          active: false,\n          updatedTranstime: moment.utc(),\n        },\n      }\n    );\n  },\n  GetInviteByCode: function (code) {\n    return new Promise((resolve, reject) => {\n      return this.findOne({ code: code, active: true }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result)\n          reject({ success: false, message: \"Cannot find the invite code.\" });\n        resolve(result);\n      });\n    });\n  },\n};\n\nconst SuburbInvite = mongoose.model(\"SuburbInvite\", SuburbInviteSchema);\n\nmodule.exports = SuburbInvite;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst { getUsersBySuburbStreet } = require(\"../logic/userService\");\n\nconst suburbStreetSchema = new mongoose.Schema({\n  street: {\n    type: String,\n  },\n  numbers: [{ type: String }],\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nsuburbStreetSchema.statics = {\n  SaveStreet: function (suburbStreet) {\n    let config = new this(suburbStreet);\n    return config.save();\n  },\n  UpdateStreet: function (id, street) {\n    return this.updateOne({ _id: id }, { ...street });\n  },\n};\n\nconst SuburbStreet = mongoose.model(\"SuburbStreet\", suburbStreetSchema);\n\nmodule.exports = SuburbStreet;\n","const moment = require(\"moment\");\nconst bcrypt = require(\"bcryptjs\");\nconst jwt = require(\"jsonwebtoken\");\nconst mongoose = require(\"mongoose\");\nconst base64 = require(\"base-64\");\nconst GuestSchema = require(\"./schemas/guestSchema\");\nconst PushTokenSchema = require(\"./schemas/pushTokenSchema\");\n\nconst UserSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: \"Ingresa el nombre\",\n  },\n  lastName: {\n    type: String,\n  },\n  password: {\n    type: String,\n  },\n  loginName: {\n    type: String,\n    unique: true,\n  },\n  email: {\n    type: String,\n  },\n  cellphone: {\n    type: String,\n  },\n  photoUrl: {\n    type: String,\n  },\n  street: {\n    type: String,\n  },\n  streetNumber: {\n    type: String,\n  },\n  loginAttempts: {\n    type: Number,\n    default: 0,\n  },\n  temporaryDisabled: {\n    type: Boolean,\n    default: false,\n  },\n  disabledSince: {\n    type: Date,\n  },\n  lastAccess: {\n    type: Date,\n    default: moment.utc(),\n  },\n  /**\n   * valid user types:\n   *  guest -> a guest user\n   *  guard -> a guard of the suburb\n   *  admin -> an administrator of the suburb\n   *  sudo  -> an administrator of the app\n   */\n  userType: {\n    type: String,\n    default: \"guest\",\n  },\n  userConfirmed: {\n    type: Boolean,\n  },\n  facebookId: {\n    type: String,\n  },\n  googleId: {\n    type: String,\n  },\n  appleId: {\n    type: String,\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n  roles: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Role\",\n    },\n  ],\n  suburb: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"Suburb\",\n  },\n  favorites: [GuestSchema],\n  pushTokens: [PushTokenSchema],\n});\n\n/**\n * Private attributes\n */\nconst _secretKey = process.env.JWT_SECRET;\n\nlet _getExpDate = () => {\n  var expTimeByMin =\n    process.env.exptoken != null ? process.env.exptoken : \"1440\";\n  return moment().add(expTimeByMin, \"minutes\").unix();\n};\n\nlet _getValidApis = (id) => {\n  //return an array with the valid apis\n  return [];\n};\n\nlet _getValidMenus = (id) => {\n  //return an array with the valid menus for the user\n  return [];\n};\n\n/**\n * Method to validate exp from the user token.\n * @param {*} expDate\n */\nlet _validateExpDate = function (expDate) {\n  let currentTime = moment().unix();\n  return expDate > currentTime;\n};\n\nUserSchema.methods = {\n  validatePassword: function (_password) {\n    var _this = this;\n    let pass = base64.decode(_password);\n    return new Promise(\n      (resolve, reject) => {\n        if (_this.temporaryDisabled) {\n          let wait = 10 - this.getDisabledSince();\n          if (wait > 0)\n            reject({\n              success: false,\n              message: `El usuario esta temporalmente desabilitado, por favor espere ${wait} minutos para volver a intentar.`,\n            });\n          else\n            this.increaseLoginAttempts(true).then((res) => {\n              this.validatePassword(_password).then(\n                (result) => resolve(result),\n                (err) => reject(err)\n              );\n            });\n        } else\n          bcrypt.compare(pass, _this.password).then((valid) => {\n            if (valid) {\n              //reset logint attempts\n              this.increaseLoginAttempts(true).then(\n                (res) => {\n                  resolve({\n                    success: true,\n                    message: \"La contraseña coincide.\",\n                  });\n                },\n                (err) =>\n                  reject({ success: false, message: \"Un error occurio.\" })\n              );\n            } else {\n              //increase login attempts\n              this.increaseLoginAttempts().then(\n                (res) => {\n                  reject({\n                    success: false,\n                    message: \"La contraseña no es valida.\",\n                  });\n                },\n                (err) =>\n                  reject({\n                    success: false,\n                    message: \"Un error occurio, la contraseña no es valida.\",\n                  })\n              );\n            }\n          });\n      },\n      (err) =>\n        reject({\n          success: false,\n          message: \"Ocurrio un error al comparar la contraseña.\",\n        })\n    );\n  },\n  getDisabledSince: function () {\n    let disabledSince = this.disabledSince ? this.disabledSince : moment.utc();\n    let start = moment(disabledSince);\n    let end = moment(moment.utc());\n    return end.diff(start, \"minutes\");\n  },\n  increaseLoginAttempts: function (reset) {\n    if (reset) {\n      this.loginAttempts = 0;\n      this.temporaryDisabled = false;\n      this.disabledSince = null;\n    } else {\n      let loginAttempts = this.loginAttempts + 1;\n      this.loginAttempts = loginAttempts;\n      this.temporaryDisabled = loginAttempts > 10;\n      this.disabledSince = loginAttempts > 10 ? moment.utc() : null;\n    }\n    return new Promise((resolve, reject) => {\n      return this.save().then(\n        (res) => {\n          resolve(res);\n        },\n        (err) => {\n          reject(err);\n        }\n      );\n    });\n  },\n  generateUserToken: function (_suburb) {\n    let payload = {\n      userId: this._id != undefined ? JSON.parse(JSON.stringify(this._id)) : \"\",\n      userName: `${this.name} ${this.lastName}`,\n      loginName: this.loginName,\n      suburb: this.suburb || _suburb,\n      userType: this.userType,\n      exp: _getExpDate(),\n      validApis: _getValidApis(this._id),\n      pushTokens: this.pushTokens,\n      street: this.street,\n      streetNumber: this.streetNumber,\n      //validMenus: _getValidMenus(this._id) //verify if is better put this in another schema i.e. suburb\n    };\n    let token = jwt.sign(payload, _secretKey);\n    return token;\n  },\n  setUserRole: function (userId, roles) {\n    if (!Array.isArray(roles)) roles = [roles];\n    return this.update(\n      {\n        _id: userId,\n      },\n      {\n        $addToSet: {\n          roles: {\n            $each: roles,\n          },\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  deleteUserRole: function (users, roles) {\n    if (!Array.isArray(users)) users = [users];\n    if (!Array.isArray(roles)) roles = [roles];\n\n    return this.update(\n      {\n        _id: {\n          $in: users,\n        },\n      },\n      {\n        $pullAll: {\n          roles: roles,\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  getUserRoles: function (userId) {\n    return new Promise((resolve, reject) => {\n      this.find({\n        _id: userId,\n      })\n        .populate(\"roles\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          resolve(getCleanResult(result, \"roles\"));\n        });\n    });\n  },\n};\n\nconst mergeArrayObjects = (currentFavs, newFavs) => {\n  let firstMerge = currentFavs.map((item, i) => {\n    let assign = {\n      name: item.name,\n      vehicle: item.vehicle,\n      subject: item.subject,\n      isService: item.isService,\n      count: item.count || 0,\n    };\n    newFavs.forEach((a2) => {\n      if (item.name === a2.name) {\n        assign = Object.assign(\n          {},\n          {\n            name: item.name,\n            vehicle: item.vehicle,\n            subject: item.subject,\n            isService: item.isService,\n            count: item.count || 0 + 1, //add 1 to calculate more used favs\n          },\n          a2\n        );\n      }\n    });\n    return { ...assign };\n  });\n\n  let all = [];\n  newFavs.forEach((item) => {\n    let add = true;\n    firstMerge.forEach((fm) => {\n      if (item.name.trim() === fm.name.trim()) add = false;\n    });\n    if (add) all.push(item);\n  });\n\n  let items = [...firstMerge, ...all].sort((a, b) => b.count - a.count);\n  return items.slice(0, items.length <= 30 ? items.length : 30); // solo mantendremos 30 favoritos para no sobrecargar la bd\n};\n\nconst mergePushTokens = (currentPushTokens, newPushToken) => {\n  let tokens = currentPushTokens.map((t) =>\n    t.token === newPushToken.token ? { ...newPushToken } : { ...t._doc }\n  );\n\n  let exists = tokens.filter((t) => t.token === newPushToken.token);\n  return exists.length > 0 ? [...tokens] : [...tokens, newPushToken];\n};\n\nconst extractUsersFromDoc = (mUsers) => {\n  let users = mUsers.map((u) => {\n    let { _id, name, lastName, street, streetNumber, active } = u._doc;\n    return { _id, name, lastName, street, streetNumber, active };\n  });\n  return users;\n};\n\nUserSchema.statics = {\n  /**\n   * Method to get a user by login name\n   */\n  getLogin: function (_loginName) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        loginName: _loginName,\n      }) /*.populate({\n                path: 'roles',\n                populate: {\n                    path: 'menus',\n                    model: 'Menu'\n                }\n            })*/\n        .exec((err, result) => {\n          if (err) reject(err);\n          resolve(result);\n        });\n    });\n  },\n  getUserByFacebookId: function (_facebookId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        facebookId: _facebookId,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result);\n      });\n    });\n  },\n  getUserByGoogleId: function (_googleId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        googleId: _googleId,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result);\n      });\n    });\n  },\n  getUserByAppleId: function (_appleId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        appleId: _appleId,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result);\n      });\n    });\n  },\n  getUserFavs: function (userId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result.favorites);\n      });\n    });\n  },\n  addUserFavs: function (userId, favs) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result) reject({ message: \"user not found\" });\n        let mergedFavs = mergeArrayObjects(result.favorites || [], favs);\n        this.findOneAndUpdate(\n          { _id: userId },\n          { $set: { favorites: mergedFavs } },\n          { new: true },\n          function (err, user) {\n            if (err) reject(err);\n            resolve(mergedFavs);\n          }\n        );\n        resolve(result);\n      });\n    });\n  },\n  removeUserFavs: function (userId, favs) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result) reject({ message: \"user not found\" });\n        let filterFavs = (result.favorites || []).filter((item) => {\n          let exists = favs.filter((f) => f.name.trim() === item.name.trim());\n          return exists.length === 0;\n        });\n\n        this.findOneAndUpdate(\n          { _id: userId },\n          { $set: { favorites: filterFavs } },\n          { new: true },\n          function (err, user) {\n            if (err) reject(err);\n            resolve(filterFavs);\n          }\n        );\n        resolve(result);\n      });\n    });\n  },\n  addUserPushToken: function (userId, pushToken) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result) reject({ message: \"user not found\" });\n        let mergedPushTokens = mergePushTokens(result.pushTokens, {\n          token: pushToken,\n        });\n        this.findOneAndUpdate(\n          { _id: userId },\n          { $set: { pushTokens: mergedPushTokens } },\n          { new: true },\n          function (err, user) {\n            if (err) reject(err);\n            resolve(mergedPushTokens);\n          }\n        );\n      });\n    });\n  },\n  updateUser: function (objUser) {\n    return this.updateOne(\n      {\n        _id: objUser._id,\n      },\n      {\n        $set: {\n          name: objUser.name,\n          lastName: objUser.lastName,\n          password: objUser.password,\n          email: objUser.email,\n          cellphone: objUser.cellphone,\n          active: objUser.active,\n          userType: objUser.userType,\n          transtime: moment.utc(),\n        },\n      }\n    );\n  },\n  deleteUserInfo: function (userId) {\n    return this.deleteOne({ _id: userId });\n  },\n  saveUser: function (objUser) {\n    let user = new this(objUser);\n    return user.save();\n  },\n  updateUserPicture: function (userId, photoUrl) {\n    return this.updateOne({ _id: userId }, { $set: { photoUrl: photoUrl } });\n  },\n  /**\n   * Validate if the user token is active\n   */\n  isValidToken: function (_token) {\n    return new Promise(function (resolve, reject) {\n      var isValid = false;\n      try {\n        jwt.verify(_token, _secretKey, function (err, decoded) {\n          if (decoded) {\n            if (_validateExpDate(decoded.exp)) {\n              isValid = true;\n            }\n          }\n          resolve(isValid);\n        });\n      } catch (err) {\n        console.log(err);\n        reject(false);\n      }\n    });\n  },\n  /**\n   * Get the payload of the jwt token\n   * @param {String} _token\n   */\n  getTokenPayload: function (_token) {\n    return new Promise(function (resolve, reject) {\n      try {\n        jwt.verify(_token, _secretKey, function (err, decoded) {\n          resolve(decoded);\n        });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  },\n  encryptPassword: function (_password) {\n    return new Promise((resolve, reject) => {\n      let pass = base64.decode(_password);\n      let saltRounds = 10;\n      bcrypt.genSalt(saltRounds, (err, salt) => {\n        bcrypt.hash(pass, salt, (err, hash) => {\n          if (!err) resolve({ hash });\n          else reject(err);\n        });\n      });\n    });\n  },\n  getUserById: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"suburb\", \"name\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          resolve(result);\n        });\n    });\n  },\n  getUsersBySuburb: function (suburbId) {\n    return new Promise((resolve, reject) => {\n      this.find({ suburb: suburbId }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(extractUsersFromDoc(result));\n      });\n    });\n  },\n  getUsersBySuburbStreet: function (suburbId, street) {\n    return new Promise((resolve, reject) => {\n      this.find({ $and: [{ suburb: suburbId }, { street: street }] }).exec(\n        (err, result) => {\n          if (err) reject(err);\n          resolve(extractUsersFromDoc(result));\n        }\n      );\n    });\n  },\n  getUsersByAddress: function (suburbId, street, streetNumber) {\n    return new Promise((resolve, reject) => {\n      this.find({\n        $and: [\n          { suburb: suburbId },\n          { street: street },\n          { streetNumber: streetNumber },\n        ],\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(extractUsersFromDoc(result));\n      });\n    });\n  },\n};\n\nconst User = mongoose.model(\"User\", UserSchema);\n\nmodule.exports = User;\n","const router = require(\"express\").Router();\n\nconst siteAuth = require(\"../controllers/siteAuth\");\n\nconst menus = require(\"../controllers/menus\");\n\nconst postalCodes = require(\"../controllers/postalCodes\");\n\nconst signup = require(\"../controllers/signup\");\n\nconst handleFiles = require(\"../controllers/handleFile\");\n\nconst multer = require(\"multer\");\n\nconst suburb = require(\"../controllers/suburb\");\n\nconst pushNotification = require(\"../controllers/pushNotification\");\n\nlet upload = multer({ dest: \"./uploads/\" });\n\nrouter.post(\"/api/checkAuth\", siteAuth.checkAuth);\n\nrouter.post(\"/api/isValidToken\", siteAuth.isValidToken);\n\nrouter.post(\"/api/validateTokenPath\", siteAuth.validateTokenPath);\n\nrouter.post(\"/api/logOff\", siteAuth.logOff);\n\nrouter.get(\"/api/auth/fbtoken\", siteAuth.getTokenByFacebookId);\n\nrouter.get(\"/api/auth/googletoken\", siteAuth.getTokenByGoogleId);\n\nrouter.get(\"/api/auth/appletoken\", siteAuth.getTokenByAppleId);\n\nrouter.post(\"/api/signUp\", signup.signUp);\n\n//user apis\nconst userAdmin = require(\"../controllers/userAdmin\");\n\nrouter.post(\"/api/user/:userType\", userAdmin.createUserByType);\nrouter.get(\"/api/user/:userType\", userAdmin.getUserByType);\nrouter.get(\"/api/user\", userAdmin.getUserInfo);\nrouter.get(\"/api/userId\", userAdmin.getUserById);\nrouter.get(\"/api/userInfo/favorites\", userAdmin.getUserFavs);\nrouter.post(\"/api/userInfo/addFavorites\", userAdmin.addUserFavs);\nrouter.post(\"/api/userInfo/removeFavorites\", userAdmin.removeUserFavs);\nrouter.post(\"/api/userInfo/addUserPushToken\", userAdmin.addUserPushToken);\nrouter.get(\"/api/userInfo/getUsersByAddress\", userAdmin.getUsersByAddress);\nrouter.post(\"/api/userInfo/updatePicture\", userAdmin.updateUserPicture);\n\nrouter.post(\"/api/saveGoogleUser\", userAdmin.saveGoogleUser);\nrouter.post(\"/api/saveFacebookUser\", userAdmin.saveFacebookUser);\nrouter.post(\"/api/saveAppleUser\", userAdmin.saveAppleUser);\nrouter.post(\"/api/saveEmailUser\", userAdmin.saveEmailUser);\nrouter.post(\"/api/saveUserBySuburb\", userAdmin.saveUserBySuburbId);\nrouter.post(\"/api/deleteUserInfo\", userAdmin.deleteUserInfo);\n\n//logged user APIs\nrouter.get(\"/api/me/menu\", menus.getMenusByUser);\n\n//postal codes\nrouter.get(\"/api/cp/getCPInfo\", postalCodes.getPostalCodeInfo);\n\n//handle files\nrouter.post(\"/api/file/upload\", upload.any(), handleFiles.uploadFile);\n\n//suburb apis\nrouter.post(\"/api/suburb/approveReject\", suburb.approveReject);\n\nrouter.get(\"/api/suburb/info\", suburb.getSuburbByAdminId);\n\nrouter.get(\"/api/suburb/get\", suburb.getSuburbById);\n\nrouter.post(\"/api/suburb/addSuburbInvite\", suburb.addSuburbInvite);\n\nrouter.get(\"/api/suburb/getInviteByCode\", suburb.getSuburbInvite);\n\nrouter.get(\"/api/suburb/getStreets\", suburb.getStreets);\n\nrouter.get(\"/api/suburb/getStreetNumbers\", suburb.getStreetNumbers);\n\nrouter.post(\"/api/suburb/updateConfig\", suburb.saveSuburbConfig);\n\nrouter.get(\"/api/suburb/getConfig\", suburb.getSuburbConfig);\n\nrouter.post(\"/api/suburb/saveStreet\", suburb.saveSuburbStreet);\n\nrouter.get(\"/api/suburb/getAllStreets\", suburb.getSuburbStreets);\n\n//push notifications\nrouter.post(\"/api/notification/test\", pushNotification.sendTestNotification);\nrouter.post(\n  \"/api/notification/arrive\",\n  pushNotification.sendArriveNotification\n);\n\nmodule.exports = router;\n","const express = require(\"express\");\nconst router = express.Router();\n\nconst auth = require(\"../middleware/auth\");\n\n//routes\nconst apiRoutes = require(\"./apiRoutes\");\n\nrouter.use(\"/api/*\", auth.checkApiAuth);\nrouter.all(\"/api/*\", apiRoutes);\n\nmodule.exports = router;\n","/**\n * Module dependencies.\n */\n\nvar app = require('./app');\nvar debug = require('debug')('rochacoapi:server');\nvar http = require('http');\n\n/**\n * Get port from environment and store in Express.\n */\n\nvar port = normalizePort(process.env.PORT || '4010');\napp.set('port', port);\n\n/**\n * Create HTTP server.\n */\n\nvar server = http.createServer(app);\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nfunction normalizePort(val) {\n  var port = parseInt(val, 10);\n\n  if (isNaN(port)) {\n    // named pipe\n    return val;\n  }\n\n  if (port >= 0) {\n    // port number\n    return port;\n  }\n\n  return false;\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error) {\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n\n  var bind = typeof port === 'string'\n    ? 'Pipe ' + port\n    : 'Port ' + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nfunction onListening() {\n  console.log(\"running on port\", process.env.PORT);\n  var addr = server.address();\n  var bind = typeof addr === 'string'\n    ? 'pipe ' + addr\n    : 'port ' + addr.port;\n  debug('Listening on ' + bind);\n}\n","module.exports = require(\"@sendgrid/mail\");","module.exports = require(\"axios\");","module.exports = require(\"base-64\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"crypto-js\");","module.exports = require(\"debug\");","module.exports = require(\"dotenv\");","module.exports = require(\"dropbox-v2-api\");","module.exports = require(\"expo-server-sdk\");","module.exports = require(\"express\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"moment\");","module.exports = require(\"mongoose\");","module.exports = require(\"morgan\");","module.exports = require(\"multer\");","module.exports = require(\"request\");"],"sourceRoot":""}