{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app.js","webpack:///./src/constants/menusConfig.js","webpack:///./src/constants/types.js","webpack:///./src/controllers/handleFile.js","webpack:///./src/controllers/menus.js","webpack:///./src/controllers/postalCodes.js","webpack:///./src/controllers/pushNotification.js","webpack:///./src/controllers/signup.js","webpack:///./src/controllers/siteAuth.js","webpack:///./src/controllers/suburb.js","webpack:///./src/controllers/userAdmin.js","webpack:///./src/logic/auth.js","webpack:///./src/logic/menuService.js","webpack:///./src/logic/postalCodeService.js","webpack:///./src/logic/pushNotificationService.js","webpack:///./src/logic/suburbService.js","webpack:///./src/logic/userService.js","webpack:///./src/logic/viewPermissions.js","webpack:///./src/middleware/auth.js","webpack:///./src/models/index.js","webpack:///./src/models/menu.js","webpack:///./src/models/postalCode.js","webpack:///./src/models/role.js","webpack:///./src/models/schemas/config/dropdownSchema.js","webpack:///./src/models/schemas/config/fieldSchema.js","webpack:///./src/models/schemas/config/screenSchema.js","webpack:///./src/models/schemas/guestSchema.js","webpack:///./src/models/schemas/pushTokenSchema.js","webpack:///./src/models/schemas/suburbFileSchema.js","webpack:///./src/models/schemas/suburbStatusSchema.js","webpack:///./src/models/suburb.js","webpack:///./src/models/suburbConfig.js","webpack:///./src/models/suburbInvite.js","webpack:///./src/models/suburbStreet.js","webpack:///./src/models/user.js","webpack:///./src/routes/apiRoutes.js","webpack:///./src/routes/router.js","webpack:///./src/server.js","webpack:///external \"@sendgrid/mail\"","webpack:///external \"base-64\"","webpack:///external \"bcryptjs\"","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"crypto-js\"","webpack:///external \"debug\"","webpack:///external \"dotenv\"","webpack:///external \"dropbox-v2-api\"","webpack:///external \"expo-server-sdk\"","webpack:///external \"express\"","webpack:///external \"fs\"","webpack:///external \"http\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"moment\"","webpack:///external \"mongoose\"","webpack:///external \"morgan\"","webpack:///external \"multer\"","webpack:///external \"request\""],"names":["dotenv","require","express","logger","bodyParser","cors","config","connectDb","router","app","use","urlencoded","extended","json","module","exports","userType","userTypes","menus","name","path","icon","visible","validUserTypes","guard","suburbAdmin","admin","guest","neighbor","order","suburbStatus","status","description","userServices","suburbService","fs","dropboxV2Api","sgMail","getFileName","nodeFileName","originalName","idx","lastIndexOf","substring","uploadFileDropbox","file","dropbox","authenticate","token","process","env","DROPBOX_TOKEN","Promise","resolve","reject","resource","parameters","filename","originalname","readStream","createReadStream","destination","err","result","response","base64_encode","file_path","bitmap","readFileSync","Buffer","from","toString","getEmailAttachments","files","attachments","forEach","push","content","sendEmail","user","suburb","suburbId","setApiKey","SENDGRID_API_KEY","msg","to","OWNER_EMAILS","split","subject","text","html","send","ex","deleteTemporaryFiles","unlink","console","log","processFileUpload","data","userId","lastName","cellphone","email","postalCode","section","suburbName","recaptchaToken","validCaptcha","validateRecaptcha","proms","uploadedFiles","all","saveSuburb","location","active","userAdmins","getSuburbStatus","map","fil","fileName","actionType","mimetype","updateUser","_id","id","uploadFile","req","res","next","body","processFiles","message","menuService","getMenusByUser","headers","postalCodeService","getPostalCodeInfo","getCPInfo","query","pushNotificationService","getUserById","sendTestNotification","sendPushNotification","sound","withSome","title","subtitle","sendArriveNotification","pushTokens","t","_doc","isService","redirect","signUp","undefined","success","facebookId","googleId","password","loginName","saveFacebookUser","saveGoogleUser","saveEmailUser","User","viewPermissions","validateUser","userLogin","getLogin","then","login","validPass","validatePassword","generateUserToken","succes","checkAuth","getTokenByFacebookId","getUserByFacebookId","usr","getTokenByGoogleId","getUserByGoogleId","isValidToken","isValid","valid","validateTokenPath","permissionValid","logOff","session","destroy","userService","moment","ObjectId","Types","approveReject","newStatus","details","getSuburbById","addStatus","suburbAddStatus","transtime","utc","getSuburbByAdminId","getSuburbByAdminUser","addSuburbInvite","street","streetNumber","getSuburbInvite","code","getStreets","getUsersBySuburb","users","streets","distinctStreets","Set","filter","u","s","getStreetNumbers","getUsersBySuburbStreet","streetNumbers","distinctStreetNumbers","saveSuburbConfig","sub","catch","getSuburbConfig","saveSuburbStreet","getSuburbStreets","SuburbInvite","resV","saveUser","userConfirmed","resSave","updateUserPicture","photoUrl","updated","saveUserWithPassword","createUserByType","params","saveUserBySuburbId","GetInviteByCode","resInv","save","trim","UpdateSuburbInviteUsed","userData","resCodeUpdate","getUserByType","getUserInfo","getUserByToken","getUserFavs","userFavs","getUserFavorites","addUserFavs","favs","saveUserFavorites","removeUserFavs","removeUserFavorites","addUserPushToken","pushToken","getUsersByAddress","deleteUserInfo","removeUserInfo","openApi","protectedApi","Auth","validateToken","def","validateAdminUser","getPayload","getTokenPayload","payload","isOpenApi","apiPath","indexOf","isProtectedApi","validateApiRequest","userToken","userMenus","menu","types","g","toLowerCase","length","item","errP","PostalCode","getInfo","cp","Expo","expo","getMessagesBatches","messages","isExpoPushToken","error","chunkPushNotifications","sendExpoNotification","chunks","tickets","chunk","ticketChunk","sendPushNotificationsAsync","checkTickets","receiptIds","ticket","receiptIdChunks","chunkPushNotificationReceiptIds","receipts","getPushNotificationReceiptsAsync","receiptId","Suburb","SuburbConfig","SuburbStreet","CryptoJS","pjson","Mongoose","statusName","st","encryption","AES","encrypt","cryptoKey","decryption","bytes","decrypt","enc","Utf8","suburbObj","SaveSuburb","UpdateStatus","suburbAddStatusByName","UpdateStatusByName","GetSuburbByUserId","GetSuburb","_code","Math","random","toUpperCase","SaveSuburbInvite","subInv","AddSuburbInvite","subInvite","GetSuburbBasicInfo","props","invite","sucess","suburbData","saveConfig","SaveConfig","SaveSuburbConfig","updateConfig","UpdateConfig","GetSuburbConfig","GetSuburbStreets","selectedStreet","saveStreet","SaveStreet","SaveSuburbStreet","updateStreet","UpdateStreet","request","userObj","secretKey","RECAPTCHA_SECRET","verificationURL","post","resG","JSON","parse","score","encryptPassword","resEncrypt","encryptedPassword","hash","find","findById","permissions","validateWithPayload","validPath","p","toLocaleLowerCase","jwt","validApiRequest","auth","stringify","checkApiAuth","baseUrl","mongoose","Menu","Role","models","mConn","connect","DB_CONNECTION","useNewUrlParser","connection","on","bind","MenuSchema","Schema","type","String","required","link","parentId","ref","position","Number","default","Boolean","Date","statics","getMenuById","menuId","findOne","updateMenu","objMenu","update","$set","deleteMenu","deleteMany","getChildMenus","getChildMenusRecursively","parents","_this","getThisLevelChilds","elements","childs","child","getInnerChilds","concat","getParentMenusRecursively","getThisLevel","getMoreParents","getMenus","model","PostalCodeSchema","d_codigo","d_asenta","d_tipo_asenta","D_mnpio","d_estado","d_ciudad","d_CP","c_estado","c_oficina","c_CP","c_tipo_asenta","c_mnpio","id_asenta_cpcons","d_zona","c_cve_ciudad","regCp","RegExp","limit","RoleSchema","siteAdministration","sysAdministrator","deleteRole","roleId","setRoleMenu","Array","isArray","$addToSet","$each","multi","deleteRoleMenu","roles","$in","$pullAll","getRoleMenus","populate","exec","DropdownSchema","value","FieldSchema","field","label","mandatory","mandatoryMessage","ScreenSchema","fields","GuestSchema","vehicle","plates","additionalInformation","arriveOn","leaveOn","count","PushTokenSchema","SuburbFileSchema","SuburbStatusSchema","suburbConfig","suburbStreet","SuburbSchema","suburbInvites","updateOne","userInviteId","GetSuburbByName","configId","streetId","lean","SuburbConfigSchema","imageUrl","screens","SuburbInviteSchema","usedBy","updatedTranstime","userInviteObj","userInvite","$and","suburbStreetSchema","numbers","bcrypt","base64","UserSchema","unique","loginAttempts","temporaryDisabled","disabledSince","lastAccess","favorites","_secretKey","JWT_SECRET","_getExpDate","expTimeByMin","exptoken","add","unix","_getValidApis","_getValidMenus","_validateExpDate","expDate","currentTime","methods","_password","pass","decode","wait","getDisabledSince","increaseLoginAttempts","compare","start","end","diff","reset","_suburb","userName","exp","validApis","sign","setUserRole","deleteUserRole","getUserRoles","getCleanResult","mergeArrayObjects","currentFavs","newFavs","firstMerge","i","assign","a2","Object","fm","items","sort","a","b","slice","mergePushTokens","currentPushTokens","newPushToken","tokens","exists","extractUsersFromDoc","mUsers","_loginName","_facebookId","_googleId","mergedFavs","findOneAndUpdate","new","filterFavs","f","mergedPushTokens","objUser","deleteOne","_token","verify","decoded","saltRounds","genSalt","salt","Router","siteAuth","postalCodes","signup","handleFiles","multer","pushNotification","upload","dest","get","userAdmin","any","apiRoutes","debug","http","port","normalizePort","PORT","set","server","createServer","listen","onError","onListening","val","parseInt","isNaN","syscall","exit","addr","address"],"mappings":"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","file":"app.server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server.js\");\n","const dotenv = require(\"dotenv\");\nconst express = require('express');\nconst logger = require('morgan');\nconst bodyParser = require('body-parser');\nconst cors = require(\"cors\");\n\ndotenv.config();\n\nconst connectDb = require(\"./models\").connectDb;\nvar router = require(\"./routes/router\");\n\n\nvar app = express();\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(express.json());\napp.use(cors());\napp.use(logger('dev'));\napp.use('/', router);\n\nconnectDb();\n\nmodule.exports = app;\n\n","const userType = require(\"./types\").userTypes;\n\n/**\n * Get menus list\n */\nexports.menus = [\n  {\n    name: \"Mi Cuenta\",\n    path: \"/admin/cuenta\",\n    icon: \"icon icon-account_circle\",\n    visible: true,\n    validUserTypes: [\n      userType.guard,\n      userType.suburbAdmin,\n      userType.admin,\n      userType.guest,\n      userType.neighbor,\n    ],\n    order: 5,\n  },\n  {\n    name: \"Guardias\",\n    path: \"/admin/guardias\",\n    icon: \"icon icon-shield\",\n    visible: true,\n    validUserTypes: [userType.guest, userType.guard, userType.admin],\n    order: 2,\n  },\n  {\n    name: \"GuardiasForm\",\n    icon: \"icon icon-shield\",\n    path: \"/admin/guardias-form\",\n    visible: false,\n    validUserTypes: [userType.suburbAdmin, userType.admin],\n    order: 6,\n  },\n  {\n    name: \"Vecinos\",\n    path: \"/admin/vecinos\",\n    icon: \"icon icon-users\",\n    visible: true,\n    validUserTypes: [userType.guard, userType.suburbAdmin, userType.admin],\n    order: 3,\n  },\n  {\n    name: \"Colonia\",\n    path: \"/admin/colonias\",\n    icon: \"icon icon-building\",\n    visible: true,\n    validUserTypes: [userType.admin, userType.suburbAdmin, userType.guest],\n    order: 4,\n  },\n  {\n    name: \"Colonia Status\",\n    path: \"/admin/coloniaStatus\",\n    icon: \"icon icon-building\",\n    visible: false,\n    validUserTypes: [userType.admin, userType.suburbAdmin, userType.guest],\n    order: 4,\n  },\n  {\n    name: \"Colonia Status\",\n    path: \"/admin/coloniaMain\",\n    icon: \"icon icon-building\",\n    visible: false,\n    validUserTypes: [\n      userType.admin,\n      userType.suburbAdmin,\n      userType.suburbAdmin,\n    ],\n    order: 4,\n  },\n];\n","exports.userTypes = {\n  guest: \"guest\",\n  admin: \"admin\",\n  suburbAdmin: \"suburbAdmin\",\n  guard: \"guard\",\n  neighbor: \"neighbor\",\n};\n\nexports.suburbStatus = [\n  {\n    status: \"pending\",\n    description:\n      \"Tu solicitud para registrar la colonia ha sido enviada, por favor espera de 2 a 3 dias habiles o contactanos por medio de nuestras redes sociales para mayor informacion.\",\n  },\n  {\n    status: \"rejected\",\n    description: \"Lo sentimos tu solicitud fue rechazada.\",\n  },\n  {\n    status: \"approved\",\n    description: \"Tu solicitud a sido aprobada.\",\n  },\n  {\n    status: \"feedback\",\n    description: \"Tu solicitud a sido revisada, se requiere mas información.\",\n  },\n];\n","const userServices = require(\"../logic/userService\");\nconst suburbService = require(\"../logic/suburbService\");\n//const fetchDbx = require('isomorphic-fetch');\nconst fs = require(\"fs\");\n// const Dropbox = require(\"dropbox\").Dropbox;\nconst dropboxV2Api = require(\"dropbox-v2-api\");\nconst sgMail = require(\"@sendgrid/mail\");\n\nconst getFileName = (nodeFileName, originalName) => {\n  let idx = originalName.lastIndexOf(\".\");\n  return `${nodeFileName}.${originalName.substring(idx + 1)}`;\n};\n\nconst uploadFileDropbox = (file) => {\n  const dropbox = dropboxV2Api.authenticate({\n    token: process.env.DROPBOX_TOKEN,\n  });\n\n  return new Promise((resolve, reject) => {\n    dropbox(\n      {\n        resource: \"files/upload\",\n        parameters: {\n          path: `/neighby/${getFileName(file.filename, file.originalname)}`,\n        },\n        readStream: fs.createReadStream(`${file.destination}/${file.filename}`),\n      },\n      (err, result, response) => {\n        if (!err) resolve(result);\n        else reject(err);\n      }\n    );\n  });\n};\n\nconst base64_encode = (file_path) => {\n  // read binary data\n  var bitmap = fs.readFileSync(file_path);\n  // convert binary data to base64 encoded string\n  return new Buffer.from(bitmap, \"base64\").toString(\"base64\"); //.toString('base64');\n};\n\nconst getEmailAttachments = (files) => {\n  let attachments = [];\n  files.forEach((file) => {\n    attachments.push({\n      filename: `${file.originalname}`,\n      content: base64_encode(`${file.destination}/${file.filename}`),\n    });\n  });\n  return attachments;\n};\n\nconst sendEmail = async (files, user, suburb, suburbId) => {\n  try {\n    sgMail.setApiKey(process.env.SENDGRID_API_KEY);\n\n    const msg = {\n      to: process.env.OWNER_EMAILS.split(\",\"),\n      from: \"support@neighby.com\",\n      subject: \"Nuevo requerimiento de registro de colonia.\",\n      text: `solicitud de registro.`,\n      html: `<strong>El usuario ${user} desea registrar la colonia ${suburb} y envia los documentos para revisión adjuntos en este email para revision, id de referencia:[${suburbId}].</strong>`,\n      attachments: getEmailAttachments(files),\n    };\n    await sgMail.send(msg);\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst deleteTemporaryFiles = (files) => {\n  files.forEach((file) => {\n    fs.unlink(`${file.destination}/${file.filename}`, (err) => {\n      if (err) throw err;\n      console.log(\n        `path file ${file.destination}/${file.filename} has been deleted.`\n      );\n    });\n  });\n};\n\nconst processFileUpload = async (files, data) => {\n  try {\n    let {\n      userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      postalCode,\n      section,\n      suburbName,\n      recaptchaToken,\n    } = data;\n    let validCaptcha = await userServices.validateRecaptcha(recaptchaToken);\n    let proms = [];\n    files.forEach((file) => {\n      proms.push(uploadFileDropbox(file));\n    });\n    let uploadedFiles = await Promise.all(proms);\n\n    let saveSuburb = await suburbService.saveSuburb({\n      name: suburbName,\n      location: section,\n      postalCode: postalCode,\n      active: true,\n      userAdmins: [userId],\n      status: [suburbService.getSuburbStatus(\"pending\")],\n      files: files.map((fil) => ({\n        fileName: fil.filename,\n        originalName: fil.originalname,\n        actionType: \"solicitudRegistro\",\n        mimetype: fil.mimetype,\n      })),\n    });\n\n    let updateUser = await userServices.updateUser({\n      _id: userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      active: true,\n    });\n\n    await sendEmail(files, `${name} ${lastName}`, suburbName, saveSuburb.id);\n\n    deleteTemporaryFiles(files);\n    return saveSuburb;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nexports.uploadFile = async (req, res, next) => {\n  try {\n    let {\n      userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      postalCode,\n      section,\n      suburbName,\n      recaptchaToken,\n    } = req.body;\n    let processFiles = await processFileUpload(req.files, {\n      userId,\n      name,\n      lastName,\n      cellphone,\n      email,\n      postalCode,\n      section,\n      suburbName,\n      recaptchaToken,\n    });\n    res.status(202).json({ message: \"ok\" });\n  } catch (ex) {\n    res\n      .status(400)\n      .json({ message: ex.message || \"No se pudo completar el registro.\" });\n  }\n};\n","const menuService = require(\"../logic/menuService\");\n\n\n\n/**\n * [GET] method to get the menus by user types\n */\nexports.getMenusByUser = async (req, res, next) => {\n    let token = req.headers[\"authorization\"];\n    try {\n        const result = await menuService.getMenusByUser(token);\n        res.status('200').json(result);\n    } catch (err) {\n        res.status('401').json(err);\n    }\n}","const postalCodeService = require(\"../logic/postalCodeService\");\n\nexports.getPostalCodeInfo = async (req, res, next) => {\n    try {\n        let result = await postalCodeService.getCPInfo(req.query.postalCode);\n        res.status(200).json(result);\n    }\n    catch (err) {\n        res.status(400).json(err);\n    }\n}","const pushNotificationService = require(\"../logic/pushNotificationService\");\nconst { getUserById } = require(\"../logic/userService\");\n\nexports.sendTestNotification = async (req, res, next) => {\n  try {\n    let result = await pushNotificationService.sendPushNotification(\n      [\"ExponentPushToken[TRMrLcG4VUxVUwmsCXPIyw]\"],\n      {\n        sound: \"default\",\n        body: \"This is a test notification ;)\",\n        data: { withSome: \"data\" },\n        title: \"Notificacion Nueva\",\n        subtitle: \"soy un subtitulo\",\n      }\n    );\n    res.status(200).json(result);\n  } catch (err) {\n    res.status(400).json(err);\n  }\n};\n\nexports.sendArriveNotification = async (req, res) => {\n  try {\n    let { userId, guest } = req.body;\n    let user = await getUserById(userId);\n    let pushTokens = user.pushTokens.map((t) => t._doc.token);\n    let result = await pushNotificationService.sendPushNotification(\n      pushTokens,\n      {\n        sound: \"default\",\n        body: guest.isService\n          ? `Tu servicio ${guest.name} ha llegado.`\n          : `Tu invitado ${guest.name} ha llegado.`,\n        data: { redirect: \"myVisits\" },\n        title: `Hola ${user.name}`,\n      }\n    );\n    return result;\n  } catch (err) {\n    res.status(400).json(err);\n  }\n};\n","const user = require(\"./userAdmin\");\n\nexports.signUp = (req, res, next) => {\n    if (req.body.token === undefined || req.body.token === '' || req.body.token === null) {\n        res.send({ success: false, message: 'Por favor intenta de nuevo (codigo recaptcha no encontrado).' });\n        return;\n    }\n    let { email, name, lastName, cellphone, facebookId, googleId, password, token } = req.body;\n    if (facebookId) {\n        req.body ={ email, name, lastName, loginName: facebookId, cellphone, facebookId, googleId, password, token };\n        user.saveFacebookUser(req, res, next);\n    }\n    else if (googleId) {        \n        req.body ={ email, name, lastName, loginName: googleId, cellphone, facebookId, googleId, password, token };\n        user.saveGoogleUser(req, res, next);\n    }\n    else {        \n        req.body ={ email, name, lastName, loginName: email, cellphone, facebookId, googleId, password, token };\n        user.saveEmailUser(req, res, next);\n    }\n    //mandar llamar registro aqui\n    // if (googleId || facebookId)\n    //     axios({\n    //         method: 'post',\n    //         url: googleId ? `${process.env.ADMIN_API_HOST}/api/saveGoogleUser` : `${process.env.ADMIN_API_HOST}/api/saveFacebookUser`,\n    //         data: {\n    //             name,\n    //             lastName,\n    //             loginName: googleId ? googleId : facebookId,\n    //             email,\n    //             cellphone,\n    //             googleId,\n    //             facebookId,\n    //             token\n    //         }\n    //     }).then(resS => {\n    //         res.send({ success: true, message: resS.data.message || \"Ok\" });\n    //     })\n    //         .catch(err => {\n    //             let errMsg = err && err.response && err.response.data && err.response.data.message ? err.response.data.message : err.message || \"No se pudo guardar el usuario.\";\n    //             res.send({ success: false, message: errMsg });\n    //         });\n    // else {\n    //     axios({\n    //         method: 'post',\n    //         url: `${process.env.ADMIN_API_HOST}/api/saveEmailUser`,\n    //         data: {\n    //             name,\n    //             lastName,\n    //             loginName: email,\n    //             email,\n    //             cellphone,\n    //             password,\n    //             token\n    //         }\n    //     }).then(resS => {\n    //         res.send({ success: true, message: resS.data.message || \"Ok\" });\n    //     })\n    //         .catch(err => {\n    //             let errMsg = err && err.response && err.response.data && err.response.data.message ? err.response.data.message : err.message || \"No se pudo guardar el usuario.\";\n    //             res.send({ success: false, message: errMsg });\n    //         });\n    // }\n}","const User = require(\"../models/user\");\nconst viewPermissions = require(\"../logic/viewPermissions\");\n\n\nconst validateUser = (userLogin, password) => {\n    return new Promise((resolve, reject) => {\n        User.getLogin(userLogin).then((login, err) => {\n            if (login) {\n                let validPass = login.validatePassword(password);\n                validPass.then(result => {\n                    //generate jwt token\n                    let token = login.generateUserToken();\n                    resolve({ success: true, message: token });\n                }, err => {\n                    reject({ success: false, message: err.message || 'La contraseña no es valida.' });\n                });\n            }\n            else reject({ succes: false, message: 'El usuario no existe.' });\n        });\n    });\n}\n\nexports.checkAuth = (req, res, next) => {\n    //over here check the db to know if the auth is valid\n    let user = req.body.user;\n    let password = req.body.password;\n    validateUser(user, password).then(result => {\n        if (result.success) {\n            // var session = req.session;\n            // session.token = result.message;\n            // session.user = user;\n            res.status('200').json(result);\n        }\n        else\n            res.status('401').json({ success: false, message: 'Unauthorized' });\n    }, err => {\n        res.status('401').json({ success: false, message: err.message || 'Unauthorized' });\n    });\n}\n\nexports.getTokenByFacebookId = (req, res) => {\n    let facebookId = req.query['id'];\n    User.getUserByFacebookId(facebookId).then(usr => {\n        if (usr) {\n            let token = usr.generateUserToken();\n            res.status('200').json({ token });\n        }\n        else {\n            res.status('404').json({ token: null });\n        }\n    })\n}\n\nexports.getTokenByGoogleId = (req, res) => {\n    let googleId = req.query['id'];\n    User.getUserByGoogleId(googleId).then(usr => {\n        if (usr) {\n            let token = usr.generateUserToken();\n            res.status('200').json({ token });\n        }\n        else {\n            res.status('404').json({ token: null });\n        }\n    });\n}\n\nexports.isValidToken = (req, res, next) => {\n    let token = req.headers[\"authorization\"];\n    return new Promise((resolve, reject) => {\n        User.isValidToken(token).then((isValid) => {\n            if (isValid)\n                res.status('200').json({ valid: true, message: \"the token is valid\" })\n            else\n                res.status('401')({\n                    valid: false,\n                    message: \"the token is not valid\"\n                });\n\n        }, err => res.status('500')(err));\n    });\n\n}\n\nexports.validateTokenPath = (req, res, next) => {\n    let { token, user, path } = req.body;\n    //over here add logic to check if a path is valid for the given context (user-> userType and jwt token)\n    viewPermissions.permissionValid(path, token, user).then(result => {\n        res.status('200').json({ valid: true, message: \"ok :)\" });\n    }, err => {\n        res.status('401').json(err);\n    });\n}\n\nexports.logOff = (req, res, next) => {\n    if (req.session)\n        req.session.destroy(err => {\n            if (err)\n                res.status('500').json({ success: false, message: err.message || 'An unknow error occurs while trying to log off.' })\n            res.status('200').json({ success: true, message: 'session destroyed.' });\n        })\n}\n","const suburbService = require(\"../logic/suburbService\");\nconst userService = require(\"../logic/userService\");\nconst userTypes = require(\"../constants/types\").userTypes;\nconst moment = require(\"moment\");\nconst ObjectId = require(\"mongoose\").Types.ObjectId;\n\nexports.approveReject = async (req, res, next) => {\n  try {\n    let { suburbId, newStatus, details } = req.body;\n    let suburb = await suburbService.getSuburbById(suburbId);\n    let status = suburbService.getSuburbStatus(newStatus);\n    if (suburb && status) {\n      let addStatus = await suburbService.suburbAddStatus(suburbId, {\n        ...status,\n        details,\n        transtime: moment.utc(),\n      });\n      if (addStatus) {\n        if (status.status === \"approved\")\n          await userService.updateUser({\n            _id: suburb.userAdmins[0].id,\n            userType: userTypes.suburbAdmin,\n            transtime: moment.utc(),\n          });\n        res.status(200).json({\n          success: true,\n          message: `El estatus ha sido actualizado correctamente, el nuevo estatus es: \"${status.status}\"`,\n        });\n      }\n    } else\n      res.status(400).json({\n        success: false,\n        message: \"El estatus no es valido o la colonia no existe\",\n      });\n  } catch (ex) {\n    res.status(400).json({\n      success: false,\n      message: ex.message || \"No se pudo procesar aprobar/rechazar la colonia.\",\n    });\n  }\n};\n\nexports.getSuburbByAdminId = (req, res, next) => {\n  let userId = req.query.id;\n  suburbService.getSuburbByAdminUser(userId).then(\n    (result) => {\n      res.status(\"200\").json(result);\n    },\n    (err) => {\n      res.status(400).json({\n        success: false,\n        message:\n          err.message || \"No se pudo obtener la informacion de la colonia.\",\n      });\n    }\n  );\n};\n\nexports.getSuburbById = (req, res, next) => {\n  let suburbId = req.query.suburbId;\n  suburbService.getSuburbById(suburbId).then(\n    (result) => {\n      res.status(200).json(result);\n    },\n    (err) => {\n      res.status(400).json({\n        success: false,\n        message: err.message || \"no se encontro la colonia\",\n      });\n    }\n  );\n};\n\nexports.addSuburbInvite = (req, res, next) => {\n  let { suburbId, name, street, streetNumber, userType } = req.body;\n  suburbService\n    .addSuburbInvite(suburbId, name, street, streetNumber, userType)\n    .then(\n      (result) => {\n        res.status(200).json(result);\n      },\n      (err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message || \"No se pudo generar la invitacion para el usuario.\",\n        });\n      }\n    );\n};\n\nexports.getSuburbInvite = (req, res, next) => {\n  let code = req.query.code;\n  suburbService.getSuburbInvite(code).then(\n    (result) => {\n      res.status(200).json(result);\n    },\n    (err) => {\n      res.status(500).json({\n        success: false,\n        message: err.message || \"No se pudo obtener la invitacion.\",\n      });\n    }\n  );\n};\n\nexports.getStreets = (req, res) => {\n  let suburbId = req.query.suburbId;\n  if (suburbId) {\n    userService.getUsersBySuburb(suburbId).then(\n      (users) => {\n        let streets = users.map((usr) => usr.street);\n        const distinctStreets = [...new Set(streets)];\n        res\n          .status(200)\n          .json(\n            distinctStreets\n              .filter((u) => typeof u !== \"undefined\")\n              .map((s) => ({ street: s }))\n          );\n      },\n      (err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message ||\n            \"No se pudieron obtener las calles del fraccionamiento\",\n        });\n      }\n    );\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.getStreetNumbers = (req, res) => {\n  let { suburbId, street } = req.query;\n  if (suburbId) {\n    userService.getUsersBySuburbStreet(suburbId, street).then(\n      (users) => {\n        let streetNumbers = users.map((usr) => usr.streetNumber);\n        const distinctStreetNumbers = [...new Set(streetNumbers)];\n        res\n          .status(200)\n          .json(\n            distinctStreetNumbers\n              .filter((u) => typeof u !== \"undefined\")\n              .map((s) => ({ streetNumber: s }))\n          );\n      },\n      (err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message || \"No se pudieron obtener los numeros de la calle\",\n        });\n      }\n    );\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.saveSuburbConfig = (req, res) => {\n  let { suburbId, config } = req.body;\n  if (ObjectId.isValid(suburbId)) {\n    suburbService\n      .saveSuburbConfig(suburbId, config)\n      .then((sub) => {\n        res.status(200).json({\n          success: true,\n          message:\n            \"La configuración del fraccionamiento fue actualizada correctamente.\",\n        });\n      })\n      .catch((err) => {\n        res.status(500).json({\n          success: false,\n          message: err.message || \"No se pudo actualizar la configuracion\",\n        });\n      });\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.getSuburbConfig = (req, res) => {\n  let { suburbId } = req.query;\n  if (ObjectId.isValid(suburbId)) {\n    suburbService\n      .getSuburbConfig(suburbId)\n      .then((config) => {\n        res.status(200).json({ ...config });\n      })\n      .catch((err) => {\n        res.status(500).json({\n          success: false,\n          message: err.message || \"No se pudo obtener la configuracion\",\n        });\n      });\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.saveSuburbStreet = (req, res) => {\n  let { suburbId, street } = req.body;\n  if (ObjectId.isValid(suburbId)) {\n    suburbService\n      .saveSuburbStreet(suburbId, street)\n      .then((sub) => {\n        res.status(200).json({\n          success: true,\n          message: \"La calle fue guardada correctamente.\",\n        });\n      })\n      .catch((err) => {\n        res.status(500).json({\n          success: false,\n          message: err.message || \"No se pudo guardar la calle\",\n        });\n      });\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n\nexports.getSuburbStreets = (req, res) => {\n  let { suburbId } = req.query;\n  if (ObjectId.isValid(suburbId)) {\n    suburbService\n      .getSuburbStreets(suburbId)\n      .then((streets) => {\n        res.status(200).json({ ...streets });\n      })\n      .catch((err) => {\n        res.status(500).json({\n          success: false,\n          message:\n            err.message ||\n            \"No se pudieron obtener las calles del fraccionamiento\",\n        });\n      });\n  } else\n    res.status(400).json({\n      success: false,\n      message: \"Por favor indique el fraccionamiento.\",\n    });\n};\n","const userService = require(\"../logic/userService\");\nconst userTypes = require(\"../constants/types\").userTypes;\nconst SuburbInvite = require(\"../models/suburbInvite\");\n\nexports.saveGoogleUser = (req, res, next) => {\n  //get user data here\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //save the user here\n      userService\n        .saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          facebookId,\n          googleId,\n          userConfirmed: true,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.saveFacebookUser = (req, res, next) => {\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //save the user here\n      userService\n        .saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          facebookId,\n          googleId,\n          userConfirmed: true,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.updateUserPicture = (req, res) => {\n  let { userId, photoUrl } = req.body;\n  userService\n    .updateUserPicture(userId, photoUrl)\n    .then((updated) => {\n      res\n        .status(\"200\")\n        .json({ success: true, message: \"profile picture updated.\" });\n    })\n    .catch((err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    });\n};\n\nexports.saveEmailUser = (req, res, next) => {\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    token,\n  } = req.body;\n  //validate the captcha here\n  userService.validateRecaptcha(token).then(\n    (resV) => {\n      //if the user is registered through email credentials the user needs to be confirmed through an email\n      userService\n        .saveUserWithPassword({\n          name,\n          lastName,\n          loginName,\n          email,\n          password: password,\n          cellphone,\n          facebookId,\n          googleId,\n          userConfirmed: false,\n        })\n        .then(\n          (resSave) => {\n            res.status(\"200\").json({\n              success: true,\n              message: res.message || \"Has sido registrado correctamente.\",\n            });\n          },\n          (err) => {\n            res\n              .status(\"400\")\n              .json({ success: false, message: err.message || \"Bad request.\" });\n          }\n        );\n    },\n    (err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    }\n  );\n};\n\nexports.createUserByType = async (req, res, next) => {\n  try {\n    const { name, lastName, loginName, email, cellphone } = req.body;\n    const userType = userTypes[req.params.userType];\n    if (!userType) {\n      res.status(\"400\").json({ success: false, message: \"Bad request.\" });\n      return;\n    }\n    const result = await userService.saveUser({\n      name,\n      lastName,\n      loginName,\n      email,\n      cellphone,\n      userConfirmed: false,\n      userType,\n    });\n    res.status(\"200\").json({\n      success: true,\n      message: result.message || \"Has sido registrado correctamente.\",\n    });\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.saveUserBySuburbId = async (req, res, next) => {\n  let {\n    name,\n    lastName,\n    loginName,\n    email,\n    password,\n    cellphone,\n    facebookId,\n    googleId,\n    photoUrl,\n    suburbId,\n    street,\n    streetNumber,\n    code,\n    userType,\n    token, // add captcha here\n  } = req.body;\n\n  SuburbInvite.GetInviteByCode(code)\n    .then((resInv) => {\n      //***add validate captcha here***\n\n      let save = null;\n      if (password && password.trim() !== \"\")\n        save = userService.saveUserWithPassword({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          photoUrl,\n          facebookId,\n          googleId,\n          suburb: suburbId,\n          street,\n          streetNumber,\n          userType,\n          userConfirmed: false, // if the user is an email user the user needs to confirm\n        });\n      else\n        save = userService.saveUser({\n          name,\n          lastName,\n          loginName,\n          email,\n          password,\n          cellphone,\n          photoUrl,\n          facebookId,\n          googleId,\n          suburb: suburbId,\n          street,\n          streetNumber,\n          userType,\n          userConfirmed: true,\n        });\n      save.then(\n        (resSave) => {\n          SuburbInvite.UpdateSuburbInviteUsed(\n            code,\n            resSave.userData._doc._id.toString()\n          )\n            .then((resCodeUpdate) => {\n              res.status(\"200\").json({\n                success: true,\n                message:\n                  resCodeUpdate.message || \"Has sido registrado correctamente.\",\n              });\n            })\n            .catch((err) => {\n              res.status(\"400\").json({\n                success: false,\n                message: err.message || \"Bad request.\",\n              });\n            });\n        },\n        (err) => {\n          res\n            .status(\"400\")\n            .json({ success: false, message: err.message || \"Bad request.\" });\n        }\n      );\n    })\n    .catch((err) => {\n      res\n        .status(\"400\")\n        .json({ success: false, message: err.message || \"Bad request.\" });\n    });\n};\n\nexports.getUserByType = async (req, res, next) => {\n  try {\n    const userType = userTypes[req.params.userType];\n    if (!userType) {\n      res.status(\"400\").json({ success: false, message: \"Bad request.\" });\n      return;\n    }\n    const result = await userService.getUserByType(userType);\n    res.status(\"200\").json({ success: true, data: result });\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserInfo = async (req, res, next) => {\n  try {\n    userService.getUserByToken(req.query.token).then(\n      (result) => {\n        res.status(\"200\").json(result);\n      },\n      (err) => {\n        res\n          .status(\"400\")\n          .json({ success: false, message: err.message || \"Bad request.\" });\n      }\n    );\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserById = async (req, res, next) => {\n  try {\n    let result = await userService.getUserById(req.query.id);\n    res.status(\"200\").json(result);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUserFavs = async (req, res, next) => {\n  try {\n    let userFavs = await userService.getUserFavorites(req.query.userId);\n    res.status(\"200\").json(userFavs);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.addUserFavs = async (req, res, next) => {\n  try {\n    let { favs, userId } = req.body;\n    let userFavs = await userService.saveUserFavorites(userId, favs);\n    res.status(\"200\").json(userFavs);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.removeUserFavs = async (req, res, next) => {\n  try {\n    let { favs, userId } = req.body;\n    let userFavs = await userService.removeUserFavorites(userId, favs);\n    res.status(\"200\").json(userFavs);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.addUserPushToken = async (req, res, next) => {\n  try {\n    let { pushToken, userId } = req.body;\n    let pushTokens = await userService.addUserPushToken(userId, pushToken);\n    res.status(\"200\").json(pushTokens);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.getUsersByAddress = async (req, res) => {\n  try {\n    let { suburbId, street, streetNumber } = req.query;\n    let users = await userService.getUsersByAddress(\n      suburbId,\n      street,\n      streetNumber\n    );\n    res.status(\"200\").json(users);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n\nexports.deleteUserInfo = async (req, res, next) => {\n  try {\n    let { userId } = req.body;\n    let removeUserInfo = await userService.deleteUserInfo(userId);\n    res.status(\"200\").json(removeUserInfo);\n  } catch (err) {\n    res\n      .status(\"400\")\n      .json({ success: false, message: err.message || \"Bad request.\" });\n  }\n};\n","const User = require(\"../models/user\");\nconst userTypes = require(\"../constants/types\").userTypes;\n\nconst openApi = [\n  \"/api/checkAuth\",\n  \"/api/auth/fbtoken\",\n  \"/api/auth/googletoken\",\n  \"/api/saveGoogleUser\",\n  \"/api/saveFacebookUser\",\n  \"/api/saveEmailUser\",\n  \"/api/saveUserBySuburb\",\n  \"/api/signUp\",\n  \"/api/validateTokenPath\",\n  \"/api/cp/getCPInfo\",\n  \"/api/file/upload\",\n  \"/api/suburb/getInviteByCode\",\n  \"/api/notification/test\",\n  \"/api/suburb/updateConfig\", // remover esta api de esta lista\n  \"/api/suburb/getConfig\", //remover esta api de esta lista\n  \"/api/suburb/saveStreet\", //remover esta api de la lista\n  \"/api/suburb/getAllStreets\", //remover este endpoint de la lista\n  \"/api/deleteUserInfo\", //remover este endpoint de la lista\n];\n\nconst protectedApi = [\"/api/suburb/approveReject\"];\n\nmodule.exports = class Auth {\n  validateToken(token) {\n    let user = User;\n\n    let def = user.isValidToken(token);\n    return new Promise(\n      (resolve, reject) => {\n        def.then(function (isValid) {\n          if (isValid) resolve({ valid: true, message: \"the token is valid\" });\n          else\n            resolve({\n              valid: false,\n              message: \"the token is not valid\",\n            });\n        });\n      },\n      (err) => reject({ valid: false, message: \"The token cannot be checked.\" })\n    );\n  }\n\n  validateAdminUser(token) {\n    let user = User;\n    let getPayload = user.getTokenPayload(token);\n    return new Promise(\n      (resolve, reject) => {\n        getPayload.then((payload) => {\n          if (payload.userType !== userTypes.admin)\n            reject({\n              valid: false,\n              message:\n                \"The user does not have permissions to execute this api.\",\n            });\n          else resolve({ valid: true, message: \"Ok\" });\n        });\n      },\n      (err) => {\n        console.log(err);\n        reject({\n          valid: false,\n          message: \"The user does not have permissions to execute this api.\",\n        });\n      }\n    );\n  }\n\n  isOpenApi(apiPath) {\n    return openApi.indexOf(apiPath) !== -1 ? true : false;\n  }\n\n  isProtectedApi(apiPath) {\n    return protectedApi.indexOf(apiPath) !== -1 ? true : false;\n  }\n\n  validateApiRequest(apiPath, token) {\n    if (this.isOpenApi(apiPath))\n      return new Promise((resolve) =>\n        resolve({ valid: true, message: \"the api is open.\" })\n      );\n    else if (this.isProtectedApi(apiPath)) {\n      return new Promise((resolve, reject) => {\n        this.validateAdminUser(token)\n          .then((res) => {\n            let validateToken = this.validateToken(token);\n            validateToken\n              .then((res) => resolve(res))\n              .catch((err) => reject(err));\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    } else {\n      return this.validateToken(token);\n    }\n  }\n};\n","const User = require(\"../models/user\");\nconst menus = require(\"../constants/menusConfig\").menus;\n\n/**\n * Get menus by logged user\n */\nexports.getMenusByUser = async (userToken) => {\n  return new Promise((resolve, reject) => {\n    let getPayload = User.getTokenPayload(userToken);\n    getPayload.then(payload => {\n      const { userType, loginName } = payload;\n\n      let userMenus = menus.filter(menu => {\n        let types = menu.validUserTypes.filter(g => g.toLowerCase() === userType.toLowerCase());\n        return types.length > 0;\n      }).map(item => ({ name: item.name, path: item.path, visible: item.visible, icon: item.icon, order: item.order }));\n\n\n      resolve(userMenus);\n    }, errP => {\n      reject({ valid: false, message: 'The token is not allowed' });\n    });\n  });\n};","const PostalCode = require(\"../models/postalCode\");\n\n\nexports.getCPInfo = async (postalCode) => {\n    return new Promise((resolve, reject) => {\n        if (postalCode.length > 2) {\n            getInfo = PostalCode.getCPInfo(postalCode);\n            getInfo.then(cp => {\n                resolve(cp);\n            }, err => {\n                reject({ valid: false, message: 'No se pudo obtener la informaion del codigo postal.' });\n            });\n        }\n        else {\n            reject({ valid: false, message: 'La longitud del codigo postal no es valida.' });\n        }\n    });\n}","const Expo = require(\"expo-server-sdk\").Expo;\n\nlet expo = new Expo();\n\nconst getMessagesBatches = (pushTokens, message) => {\n  let messages = [];\n  pushTokens.forEach((token) => {\n    if (!Expo.isExpoPushToken(token)) {\n      console.error(`Push token ${token} is not a valid push token`);\n      //continue;\n    }\n\n    messages = [...messages, { ...message, to: token }];\n  });\n  return expo.chunkPushNotifications(messages);\n};\n\nconst sendExpoNotification = async (chunks) => {\n  //(async () => {\n  // Send the chunks to the Expo push notification service. There are\n  // different strategies you could use. A simple one is to send one chunk at a\n  // time, which nicely spreads the load out over time:\n  let tickets = [];\n  for (let chunk of chunks) {\n    try {\n      let ticketChunk = await expo.sendPushNotificationsAsync(chunk);\n      console.log(ticketChunk);\n      tickets.push(...ticketChunk);\n      // NOTE: If a ticket contains an error code in ticket.details.error, you\n      // must handle it appropriately. The error codes are listed in the Expo\n      // documentation:\n      // https://docs.expo.io/push-notifications/sending-notifications/#individual-errors\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  return tickets;\n  //})();\n};\n\nconst checkTickets = async (tickets) => {\n  // Later, after the Expo push notification service has delivered the\n  // notifications to Apple or Google (usually quickly, but allow the the service\n  // up to 30 minutes when under load), a \"receipt\" for each notification is\n  // created. The receipts will be available for at least a day; stale receipts\n  // are deleted.\n  //\n  // The ID of each receipt is sent back in the response \"ticket\" for each\n  // notification. In summary, sending a notification produces a ticket, which\n  // contains a receipt ID you later use to get the receipt.\n  //\n  // The receipts may contain error codes to which you must respond. In\n  // particular, Apple or Google may block apps that continue to send\n  // notifications to devices that have blocked notifications or have uninstalled\n  // your app. Expo does not control this policy and sends back the feedback from\n  // Apple and Google so you can handle it appropriately.\n  let receiptIds = [];\n  for (let ticket of tickets) {\n    // NOTE: Not all tickets have IDs; for example, tickets for notifications\n    // that could not be enqueued will have error information and no receipt ID.\n    if (ticket.id) {\n      receiptIds.push(ticket.id);\n    }\n  }\n\n  let receiptIdChunks = expo.chunkPushNotificationReceiptIds(receiptIds);\n  //(async () => {\n  // Like sending notifications, there are different strategies you could use\n  // to retrieve batches of receipts from the Expo service.\n  for (let chunk of receiptIdChunks) {\n    try {\n      let receipts = await expo.getPushNotificationReceiptsAsync(chunk);\n      console.log(receipts);\n\n      // The receipts specify whether Apple or Google successfully received the\n      // notification and information about an error, if one occurred.\n      for (let receiptId in receipts) {\n        let { status, message, details } = receipts[receiptId];\n        if (status === \"ok\") {\n          //continue;\n        } else if (status === \"error\") {\n          console.error(\n            `There was an error sending a notification: ${message}`\n          );\n          if (details && details.error) {\n            // The error codes are listed in the Expo documentation:\n            // https://docs.expo.io/push-notifications/sending-notifications/#individual-errors\n            // You must handle the errors appropriately.\n            console.error(`The error code is ${details.error}`);\n          }\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  //})();\n};\n\nconst sendPushNotification = async (pushTokens, message) => {\n  try {\n    let chunks = getMessagesBatches(pushTokens, message);\n    let tickets = await sendExpoNotification(chunks);\n    await checkTickets(tickets);\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nmodule.exports = {\n  sendPushNotification,\n};\n","const Suburb = require(\"../models/suburb\");\nconst suburbStatus = require(\"../constants/types\").suburbStatus;\nconst SuburbInvite = require(\"../models/suburbInvite\");\nconst User = require(\"../models/user\");\nconst SuburbConfig = require(\"../models/suburbConfig\");\nconst SuburbStreet = require(\"../models/suburbStreet\");\nconst ObjectId = require(\"mongoose\").Types.ObjectId;\n\nconst CryptoJS = require(\"crypto-js\");\n\nvar pjson = require(\"../../package.json\");\nconst { Mongoose } = require(\"mongoose\");\n\nconst getSuburbStatus = (statusName) => {\n  let status = suburbStatus.filter((st) => st.status === statusName);\n  return status[0];\n};\n\nconst encryption = (data) => {\n  if (!data) return \"\";\n  return CryptoJS.AES.encrypt(data, pjson.cryptoKey).toString();\n};\n\nconst decryption = (data) => {\n  if (!data) return \"\";\n  var bytes = CryptoJS.AES.decrypt(data, pjson.cryptoKey);\n  return bytes.toString(CryptoJS.enc.Utf8);\n};\n\nconst saveSuburb = (suburbObj) => {\n  return new Promise((resolve, reject) => {\n    Suburb.SaveSuburb(suburbObj).then((sub, err) => {\n      if (!err)\n        resolve({\n          success: true,\n          message: \"La colonia fue guardada correctamente.\",\n          id: sub.id,\n        });\n      else\n        reject({\n          success: false,\n          message:\n            err.message || \"Ocurrio un error al intentar guardar la colonia.\",\n        });\n    });\n  });\n};\n\nconst suburbAddStatus = (id, status) => {\n  return new Promise((resolve, reject) => {\n    Suburb.UpdateStatus(id, status).then((sub, err) => {\n      if (!err)\n        resolve({\n          success: true,\n          message: \"El status de la colonia fue actualizado correctamente.\",\n        });\n      else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar actualizar el estatus de la colonia.\",\n        });\n    });\n  });\n};\n\nconst suburbAddStatusByName = (name, postalCode, status) => {\n  return new Promise((resolve, reject) => {\n    Suburb.UpdateStatusByName(name, postalCode, status).then((sub, err) => {\n      if (!err)\n        resolve({\n          success: true,\n          message: \"El status de la colonia fue actualizado correctamente.\",\n        });\n      else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar actualizar el estatus de la colonia.\",\n        });\n    });\n  });\n};\n\nconst getSuburbByAdminUser = (userId) => {\n  return new Promise((resolve, reject) => {\n    Suburb.GetSuburbByUserId(userId).then((sub, err) => {\n      if (!err) resolve(sub);\n      else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar obtener la colonia por usuario administrador.\",\n        });\n    });\n  });\n};\n\nconst getSuburbById = (suburbId) => {\n  return new Promise((resolve, reject) => {\n    Suburb.GetSuburb(suburbId)\n      .then((sub, err) => {\n        if (!err) resolve(sub);\n        else\n          reject({\n            success: false,\n            message:\n              err.message || \"Ocurrio un error al intentar obtener la colonia.\",\n          });\n      })\n      .catch((err) => reject(err));\n  });\n};\n\nconst addSuburbInvite = (suburbId, name, street, streetNumber, userType) => {\n  return new Promise((resolve, reject) => {\n    let _code =\n      Math.random().toString(36).substring(2, 4).toUpperCase() +\n      Math.random().toString(36).substring(2, 4).toUpperCase();\n    console.log(encryption(street));\n    SuburbInvite.SaveSuburbInvite({\n      code: _code,\n      suburbId,\n      name,\n      street: encryption(street),\n      streetNumber: encryption(streetNumber),\n      userType,\n    }).then((subInv, err) => {\n      if (!err) {\n        Suburb.AddSuburbInvite(suburbId, subInv._id.toString()).then(\n          (sub, err) => {\n            if (!err) resolve(subInv);\n            else\n              reject({\n                success: false,\n                message:\n                  err.message ||\n                  \"Ocurrio un error al intentar agregar una invitacion a usuario\",\n              });\n          }\n        );\n      } else\n        reject({\n          success: false,\n          message:\n            err.message ||\n            \"Ocurrio un error al intentar agregar una invitacion a usuario\",\n        });\n    });\n  });\n};\n\nconst getSuburbInvite = (code) => {\n  return new Promise((resolve, reject) => {\n    SuburbInvite.GetInviteByCode(code)\n      .then((subInvite, err) => {\n        if (!err) {\n          Suburb.GetSuburbBasicInfo(subInvite.suburbId.toString()).then(\n            (suburb, err) => {\n              if (!err) {\n                const { street, streetNumber, ...props } = subInvite._doc;\n                const result = {\n                  suburb: {\n                    ...suburb,\n                  },\n                  invite: {\n                    street: decryption(street),\n                    streetNumber: decryption(streetNumber),\n                    ...props,\n                  },\n                };\n                resolve(result);\n              } else {\n                reject({\n                  success: false,\n                  message:\n                    err.message ||\n                    \"Ocurrio un error al intentar obtener la invitación\",\n                });\n              }\n            }\n          );\n        } else\n          reject({\n            success: false,\n            message:\n              err.message ||\n              \"Ocurrio un error al intentar obtener la invitación\",\n          });\n      })\n      .catch((err) => {\n        reject({\n          sucess: false,\n          message:\n            err.message ||\n            \"Ocurrion un error al intentar obtener la invitación\",\n        });\n      });\n  });\n};\n\nconst saveSuburbConfig = async (suburbId, config) => {\n  try {\n    let suburbData = await Suburb.GetSuburb(suburbId);\n    if (!ObjectId.isValid(suburbData.config)) {\n      let saveConfig = await SuburbConfig.SaveConfig(config);\n      await Suburb.SaveSuburbConfig(suburbId, saveConfig._id);\n      return {\n        success: true,\n        message: \"la configuracion fue agregada con exito.\",\n        id: saveConfig.id,\n      };\n    } else {\n      let updateConfig = await SuburbConfig.UpdateConfig(\n        suburbData.config.toString(),\n        config\n      );\n      return {\n        success: true,\n        message: \"la configuracion fue actualizada con exito.\",\n      };\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getSuburbConfig = async (suburbId) => {\n  try {\n    return await Suburb.GetSuburbConfig(suburbId);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst saveSuburbStreet = async (suburbId, street) => {\n  try {\n    let suburbData = await Suburb.GetSuburbStreets(suburbId);\n    let selectedStreet = suburbData.streets\n      ? suburbData.streets.filter(\n          (st) => st.street.toLowerCase() === street.street.toLowerCase()\n        )\n      : [];\n    if (selectedStreet.length === 0) {\n      let saveStreet = await SuburbStreet.SaveStreet(street);\n      await Suburb.SaveSuburbStreet(suburbId, saveStreet._id);\n      return {\n        success: true,\n        message: \"la calle fue agregada con exito.\",\n        id: saveStreet.id,\n      };\n    } else {\n      let updateStreet = await SuburbStreet.UpdateStreet(\n        selectedStreet[0]._id,\n        street\n      );\n      return { success: true, message: \"la calle fue actualizada con exito.\" };\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getSuburbStreets = async (suburbId) => {\n  try {\n    return await Suburb.GetSuburbStreets(suburbId);\n  } catch (err) {\n    throw err;\n  }\n};\n\nmodule.exports = {\n  saveSuburb,\n  suburbAddStatus,\n  suburbAddStatusByName,\n  getSuburbByAdminUser,\n  getSuburbById,\n  getSuburbStatus,\n  addSuburbInvite,\n  getSuburbInvite,\n  saveSuburbConfig,\n  getSuburbConfig,\n  saveSuburbStreet,\n  getSuburbStreets,\n};\n","const User = require(\"../models/user\");\nconst request = require(\"request\");\nconst userTypes = require(\"../constants/types\").userTypes;\n\nconst saveUser = (userObj) => {\n  return new Promise((resolve, reject) => {\n    User.getLogin(userObj.loginName).then(\n      (login) => {\n        if (login) {\n          reject({\n            success: false,\n            message: \"El usuario existe actualmente en la base de datos.\",\n          });\n        } else {\n          //create the user\n          User.saveUser(\n            userObj.userType\n              ? userObj\n              : { ...userObj, userType: userTypes.guest }\n          ).then(\n            (usr, err) => {\n              //check if there is an error\n              if (!err)\n                resolve({\n                  success: true,\n                  message: \"Has sido registrado correctamente.\",\n                  userData: { ...usr },\n                });\n              else\n                reject({\n                  success: false,\n                  message: err.message || \"No se pudo registrar el usuario.\",\n                });\n            },\n            (err) => {\n              reject({ success: false, message: err.message });\n            }\n          );\n        }\n      },\n      (err) => {\n        reject({\n          success: false,\n          message:\n            err.message || \"Ocurrio un error al tratar de guardar el usuario.\",\n        });\n      }\n    );\n  });\n};\n\nconst updateUser = async (userObj) => {\n  return new Promise((resolve, reject) => {\n    User.updateUser(userObj).then(\n      (usr, err) => {\n        if (!err)\n          resolve({\n            success: true,\n            message: \"Ha sido actualizado correctamente.\",\n          });\n        else\n          reject({\n            success: false,\n            message: err.message || \"No se pudo actualizar el usuario.\",\n          });\n      },\n      (err) => {\n        reject({ success: false, message: err.message });\n      }\n    );\n  });\n};\n\nconst updateUserPicture = async (userId, photoUrl) => {\n  try {\n    return await User.updateUserPicture(userId, photoUrl);\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst validateRecaptcha = async (token) => {\n  const secretKey = process.env.RECAPTCHA_SECRET;\n  const verificationURL = `https://www.google.com/recaptcha/api/siteverify?secret=${secretKey}&response=${token}`;\n\n  return new Promise((resolve, reject) => {\n    request.post(verificationURL, (error, resG, body) => {\n      if (error)\n        reject({\n          success: false,\n          message:\n            \"Por favor intenta de nuevo (no es posible validar recaptcha).\",\n        });\n      let status = JSON.parse(body);\n      if (!status.success)\n        reject({ success: false, message: \"Por favor intenta de nuevo.\" });\n      else if (status.score <= 0.5)\n        reject({\n          success: false,\n          message: \"Por favor intenta de nuevo (score demasiado bajo).\",\n        });\n      else resolve({ success: true, message: \"recaptcha valido.\" });\n    });\n  });\n};\n\nconst saveUserWithPassword = async (userObj) => {\n  const { password } = userObj;\n  return new Promise((resolve, reject) => {\n    User.encryptPassword(password).then(\n      (resEncrypt) => {\n        let encryptedPassword = resEncrypt.hash;\n        userObj.password = encryptedPassword;\n        saveUser(userObj).then(\n          (result) => {\n            resolve(result);\n          },\n          (err) => {\n            reject(err);\n          }\n        );\n      },\n      (err) => {\n        reject({ success: false, message: err.message || \"Bad request.\" });\n      }\n    );\n  });\n};\n\nconst getUserByType = async (userType) => {\n  try {\n    return await User.find({\n      userType: userType,\n    });\n  } catch (ex) {\n    return ex;\n  }\n};\n\nconst getUserByToken = async (token) => {\n  try {\n    let payload = await User.getTokenPayload(token);\n    return await User.findById(payload.userId);\n  } catch (ex) {\n    return ex;\n  }\n};\n\nconst getUserById = async (id) => {\n  try {\n    return await User.getUserById(id);\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst getUserFavorites = async (userId) => {\n  try {\n    let payload = await User.getUserFavs(userId);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst saveUserFavorites = async (userId, favs) => {\n  try {\n    let payload = await User.addUserFavs(userId, favs);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst removeUserFavorites = async (userId, favs) => {\n  try {\n    let payload = await User.removeUserFavs(userId, favs);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst addUserPushToken = async (userId, pushToken) => {\n  try {\n    let payload = await User.addUserPushToken(userId, pushToken);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nconst getUsersBySuburb = async (suburbId) => {\n  try {\n    let users = await User.getUsersBySuburb(suburbId);\n    return users;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getUsersBySuburbStreet = async (suburbId, street) => {\n  try {\n    let users = await User.getUsersBySuburbStreet(suburbId, street);\n    return users;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst getUsersByAddress = async (suburbId, street, streetNumber) => {\n  try {\n    let users = await User.getUsersByAddress(suburbId, street, streetNumber);\n    return users;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst deleteUserInfo = async (userId) => {\n  try {\n    let payload = await User.deleteUserInfo(userId);\n    return payload;\n  } catch (ex) {\n    throw ex;\n  }\n};\n\nmodule.exports = {\n  saveUser,\n  validateRecaptcha,\n  saveUserWithPassword,\n  getUserByType,\n  getUserByToken,\n  updateUser,\n  getUserFavorites,\n  saveUserFavorites,\n  removeUserFavorites,\n  getUserById,\n  addUserPushToken,\n  getUsersBySuburb,\n  getUsersBySuburbStreet,\n  getUsersByAddress,\n  updateUserPicture,\n  deleteUserInfo,\n};\n","const User = require(\"../models/user\");\nconst permissions = require(\"../constants/menusConfig\").menus;\n\n\n\nconst validateWithPayload = (path, payload) => {\n    let valid =  { valid: false, message: 'la pantalla no es valida para tu usuario.' };\n    if(!payload || !payload.userType)\n        return valid;\n\n    const { userType } = payload;\n    let validPath = permissions.filter(p => {\n        let types = p.validUserTypes.filter(g => g.toLowerCase() === userType.toLowerCase());\n        return types.length > 0 && p.path.toLowerCase() === path.toLocaleLowerCase();\n\n    });\n\n    if (validPath.length > 0)\n        valid = { valid: true, message: 'ok' };\n    return valid;\n};\n\n\nexports.permissionValid = (path, jwt) => {\n    return new Promise((resolve, reject) => {\n        let user = User;\n        let isValid = user.isValidToken(jwt);\n        isValid.then(res => {\n            let getPayload = user.getTokenPayload(jwt);\n            getPayload.then(payload => {\n                let valid = validateWithPayload(path, payload);\n                if (valid.valid)\n                    resolve(valid);\n                else\n                    reject(valid);\n            }, errP => {\n                reject({ valid: false, message: 'los datos de la sesión no son validos.' });\n            });\n        }, err => {\n            reject({ valid: false, message: 'el token de la sesión no es valido.' });\n        });\n    });\n}","const Auth = require(\"../logic/auth\");\n\nconst validApiRequest = (apiPath, token) => {\n  return new Promise((resolve, reject) => {\n    let auth = new Auth();\n    auth.validateApiRequest(apiPath, token).then(\n      (res) => {\n        resolve(res);\n      },\n      (err) =>\n        reject({\n          valid: false,\n          message: err.message ? err.message : `Error: ${JSON.stringify(err)}`,\n        })\n    );\n  });\n};\n\nexports.checkApiAuth = (req, res, next) => {\n  console.log(`validando si el request esta autenticado...`);\n  //check request headers over here to know if the request is authenticated\n  let apiPath = req.baseUrl,\n    token = req.headers[\"authorization\"];\n\n  validApiRequest(apiPath, token).then(\n    (result) => {\n      if (result.valid) next();\n      else\n        res\n          .status(\"401\")\n          .json({ success: false, error: \"Unauthorized request.\" });\n    },\n    (err) =>\n      res.status(\"401\").json({\n        success: false,\n        error: err.message || \"An error occurs while validating the request.\",\n      })\n  );\n};\n","const mongoose = require(\"mongoose\");\nconst Menu = require(\"./menu\");\nconst Role = require(\"./role\");\nconst User = require(\"./user\");\nconst SuburbInvite = require(\"./suburbInvite\");\nconst SuburbConfig = require(\"./suburbConfig\");\nconst SuburbStreet = require(\"./suburbStreet\");\nconst PostalCode = require(\"./postalCode\");\n\nconst models = {\n  Menu,\n  Role,\n  User,\n  PostalCode,\n  SuburbInvite,\n  SuburbConfig,\n  SuburbStreet,\n};\n\nconst connectDb = () => {\n  //setup the mongo connection\n  let mConn = mongoose.connect(process.env.DB_CONNECTION, {\n    useNewUrlParser: true,\n  });\n\n  mongoose.connection.on(\n    \"error\",\n    console.error.bind(console, \"Mongo db connection error: \")\n  );\n  return mConn;\n};\n\nmodule.exports = { connectDb, models };\n","const moment = require('moment');\nconst mongoose = require('mongoose');\n//const Base = require('./baseModel');\n\nconst MenuSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        required: 'Enter the menu name'\n    },\n    link: {\n        type: String,\n        required: 'Enter the menu link'\n    },\n    parentId: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'Menu'\n    },\n    position: {\n        type: Number,\n        default: 1\n    },\n    icon: {\n        type: String\n    },\n    visible: {\n        type: Boolean,\n        default: true\n    },\n    active: {\n        type: Boolean,\n        default: true\n    },\n    type: {\n        type: String\n    },\n    transtime: {\n        type: Date,\n        default: moment.utc()\n    }\n});\n\n\nMenuSchema.statics = {\n    getMenuById: function (menuId) { //, projectId){\n        return this.findOne({\n            _id: menuId //, \n            //project: projectId\n        });\n    },\n    updateMenu: function (objMenu) {\n        return this.update({\n            _id: objMenu._id\n        }, {\n                $set: {\n                    'name': objMenu.name,\n                    'link': objMenu.link,\n                    'parentId': objMenu.parentId,\n                    'position': objMenu.position,\n                    'icon': objMenu.position,\n                    'visible': objMenu.visible,\n                    'active': objMenu.active,\n                    'type': objMenu.active,\n                    'transtime': moment.utc()\n                }\n            });\n    },\n    deleteMenu: function (menuId) {\n        return this.deleteMany({\n            _id: menuId\n        });\n    },\n    getChildMenus: function (menuId) {\n        return this.find({\n            parentId: menuId\n        });\n    },\n    getChildMenusRecursively: function (parents) {\n        let _this = this;\n        let getThisLevelChilds = this.getChildMenus(parents);\n        let elements = [];\n        return new Promise((resolve, reject) => {\n            getThisLevelChilds.then((childs) => {\n                if (childs.length > 0) {\n                    elements = JSON.parse(JSON.stringify(childs)).map((child) => {\n                        return child._id;\n                    });\n                    let getInnerChilds = _this.getChildMenusRecursively(elements);\n                    getInnerChilds.then((result) => {\n                        resolve(elements.concat(result));\n                    });\n                } else\n                    resolve(elements);\n            }, (err) => {\n                reject(err);\n            })\n        });\n    },\n    getParentMenusRecursively: function (menuId) {\n        let _this = this;\n        let getThisLevel = this.getMenuById(menuId);\n        let elements = [];\n        return new Promise((resolve, reject) => {\n            getThisLevel.then((menu) => {\n                menu = JSON.parse(JSON.stringify(menu))\n                if (menu && menu.parentId) {\n                    elements.push(menu.parentId);\n                    let getMoreParents = _this.getParentMenusRecursively(menu.parentId);\n                    getMoreParents.then((result) =>\n                        resolve(elements.concat(result)));\n                } else\n                    resolve(elements);\n            }, err => reject(err));\n        });\n    },\n    getMenus: function (menus) {\n        return this.find({ _id: menus });\n    }\n}\n\n\n\n\nconst Menu = mongoose.model(\"Menu\", MenuSchema);\n\nmodule.exports = Menu;","const mongoose = require('mongoose');\n\nconst PostalCodeSchema = new mongoose.Schema({\n    d_codigo: {\n        type: String\n    },\n    d_asenta: {\n        type: String\n    },\n    d_tipo_asenta: {\n        type: String\n    },\n    D_mnpio: {\n        type: String\n    },\n    d_estado: {\n        type: String\n    },\n    d_ciudad: {\n        type: String\n    },\n    d_CP: {\n        type: String\n    },\n    c_estado: {\n        type: String\n    },\n    c_oficina: {\n        type: String\n    },\n    c_CP: {\n        type: String\n    },\n    c_tipo_asenta: {\n        type: String\n    },\n    c_mnpio: {\n        type: String\n    },\n    id_asenta_cpcons: {\n        type: String\n    },\n    d_zona: {\n        type: String\n    },\n    c_cve_ciudad: {\n        type: String\n    }\n});\n\nPostalCodeSchema.statics = {\n    getCPInfo: function (cp) {\n        let regCp = new RegExp(cp)\n        return this.find({ d_codigo: regCp }).limit(100);\n    }\n};\n\nconst PostalCode = mongoose.model(\"PostalCode\", PostalCodeSchema);\n\nmodule.exports = PostalCode;","const moment = require('moment');\nconst mongoose = require(\"mongoose\");\n\nconst RoleSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        required: 'Enter the name of the role'\n    },\n    description: {\n        type: String,\n        required: 'Enter the description of the role'\n    },\n    siteAdministration: {\n        type: Boolean,\n        default: false\n    },\n    sysAdministrator: {\n        type: Boolean,\n        default: false\n    },\n    active: {\n        type: Boolean,\n        default: true\n    },\n    menus: [{\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'Menu'\n    }],\n    transtime: {\n        type: Date,\n        default: moment.utc()\n    }\n});\n\nRoleSchema.statics = {\n    deleteRole: function (roleId) {\n        return this.deleteMany({\n            _id: roleId\n        });\n    },\n    setRoleMenu: function (roleId, menus) {\n        if (!Array.isArray(menus)) menus = [menus];\n        return this.update({\n            _id: roleId\n        }, {\n                $addToSet: {\n                    menus: {\n                        $each: menus\n                    }\n                }\n            }, {\n                multi: true\n            });\n    },\n    deleteRoleMenu: function (roles, menus) {\n        if (!Array.isArray(menus)) menus = [menus];\n        if (!Array.isArray(roles)) roles = [roles];\n\n        return this.update({\n            _id: {\n                $in: roles\n            }\n        }, {\n                $pullAll: {\n                    menus: menus\n                }\n            }, {\n                multi: true\n            });\n    },\n    getRoleMenus: function (roleId) {\n        return new Promise((resolve, reject) => {\n            this.find({\n                _id: roleId\n            }).populate('menus').exec((err, result) => {\n                if (err) reject(err);\n                resolve(result);\n            });\n        });\n    }\n};\n\nconst Role = mongoose.model(\"Role\", RoleSchema);\n\nmodule.exports = Role;","const mongoose = require(\"mongoose\");\n\nconst DropdownSchema = new mongoose.Schema({\n  value: {\n    type: String,\n  },\n  text: {\n    type: String,\n  },\n});\n\nmodule.exports = DropdownSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst DropdownSchema = require(\"./dropdownSchema\");\nconst FieldSchema = new mongoose.Schema({\n  field: {\n    type: String,\n  },\n  type: {\n    type: String,\n  },\n  data: [DropdownSchema],\n  label: {\n    type: String,\n  },\n  mandatory: {\n    type: Boolean,\n    default: false,\n  },\n  mandatoryMessage: {\n    type: String,\n  },\n});\n\nmodule.exports = FieldSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst FieldSchema = require(\"./fieldSchema\");\n\nconst ScreenSchema = new mongoose.Schema({\n  name: { type: String },\n  title: { type: String },\n  fields: [FieldSchema],\n});\n\nmodule.exports = ScreenSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst GuestSchema = new mongoose.Schema({\n  name: {\n    type: String,\n  },\n  vehicle: {\n    type: String,\n  },\n  subject: {\n    type: String,\n  },\n  isService: {\n    type: Boolean,\n    default: false,\n  },\n  plates: {\n    type: String,\n  },\n  additionalInformation: {\n    type: String,\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  arriveOn: {\n    type: Date,\n  },\n  leaveOn: {\n    type: Date,\n  },\n  count: {\n    type: Number,\n    default: 0,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nmodule.exports = GuestSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst PushTokenSchema = new mongoose.Schema({\n  token: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nmodule.exports = PushTokenSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst SuburbFileSchema = new mongoose.Schema({\n  fileName: {\n    type: String,\n  },\n  originalName: {\n    type: String,\n  },\n  actionType: {\n    type: String,\n  },\n  mimetype: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nmodule.exports = SuburbFileSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst SuburbStatusSchema = new mongoose.Schema({\n  status: {\n    type: String,\n  },\n  description: {\n    type: String,\n  },\n  details: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\n//const SuburbStatus = mongoose.model(\"SuburbStatus\", SuburbStatusSchema);\n\nmodule.exports = SuburbStatusSchema;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst SuburbStatusSchema = require(\"./schemas/suburbStatusSchema\");\nconst SuburbFileSchema = require(\"./schemas/suburbFileSchema\");\nconst suburbConfig = require(\"./suburbConfig\");\nconst suburbStreet = require(\"./suburbStreet\");\n\nconst SuburbSchema = new mongoose.Schema({\n  name: {\n    type: String,\n  },\n  location: {\n    type: String,\n  },\n  postalCode: {\n    type: Number,\n  },\n  active: {\n    type: Boolean,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n  userAdmins: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n  ],\n  /*\n        estatus validos:\n        activacionPendiente,\n        activacionRechazada\n        activadoBasico,\n        activadoPlus\n    */\n  status: [SuburbStatusSchema],\n  files: [SuburbFileSchema],\n  suburbInvites: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"SuburbInvite\",\n    },\n  ],\n  config: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"SuburbConfig\",\n  },\n  streets: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"SuburbStreet\",\n    },\n  ],\n});\n\nSuburbSchema.statics = {\n  SaveSuburb: function (suburbObj) {\n    let suburb = new this(suburbObj);\n    return suburb.save();\n  },\n  UpdateStatus: function (id, status) {\n    if (!Array.isArray(status)) status = [status];\n    return this.updateOne(\n      { _id: id },\n      {\n        $addToSet: {\n          status: {\n            $each: status,\n          },\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  UpdateStatusByName: function (name, postalCode) {\n    if (!Array.isArray(status)) status = [status];\n    return this.updateOne(\n      { name: name, postalCode: postalCode },\n      {\n        $addToSet: {\n          status: {\n            $each: status,\n          },\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  AddSuburbInvite: function (id, userInviteId) {\n    if (!Array.isArray(userInviteId)) userInviteId = [userInviteId];\n    return this.updateOne(\n      { _id: id },\n      {\n        $addToSet: {\n          suburbInvites: {\n            $each: userInviteId,\n          },\n        },\n      },\n      { multi: true }\n    );\n  },\n  GetSuburb: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"userAdmins\", \"User\")\n        .populate(\"suburbInvites\", \"SuburbInvite\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          let {\n            name,\n            location,\n            postalCode,\n            active,\n            transtime,\n            status,\n            suburbInvites,\n            config,\n          } = result;\n          resolve({\n            name,\n            location,\n            postalCode,\n            active,\n            transtime,\n            status,\n            suburbInvites,\n            config,\n          });\n        });\n    });\n  },\n  GetSuburbBasicInfo: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        let { name, location, postalCode, active, transtime } = result;\n        resolve({\n          name,\n          location,\n          postalCode,\n          active,\n          transtime,\n        });\n      });\n    });\n  },\n  GetSuburbByName: function (postalCode, name) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        postalCode: postalCode,\n        name: name,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result);\n      });\n    });\n  },\n  GetSuburbByUserId: function (userId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ userAdmins: mongoose.Types.ObjectId(userId) }).exec(\n        (err, result) => {\n          if (err) reject(err);\n          resolve(result);\n        }\n      );\n    });\n  },\n  SaveSuburbConfig: function (id, configId) {\n    return this.updateOne(\n      {\n        _id: id,\n      },\n      {\n        $set: { config: configId },\n      }\n    );\n  },\n  GetSuburbConfig: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"config\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          let { config } = result;\n          if (config) resolve({ ...config._doc });\n          else resolve({});\n        });\n    });\n  },\n  SaveSuburbStreet: function (id, streetId) {\n    if (!Array.isArray(streetId)) streetId = [streetId];\n    return this.updateOne(\n      { _id: id },\n      { $addToSet: { streets: { $each: streetId } } },\n      { multi: true }\n    );\n  },\n  GetSuburbStreets: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"streets\")\n        .lean()\n        .exec((err, result) => {\n          if (err) reject(err);\n          if (result) {\n            let { streets } = result;\n            if (streets) resolve({ streets: [...streets] });\n            else resolve({ streets: [] });\n          } else resolve({ streets: [] });\n        });\n    });\n  },\n};\n\nconst Suburb = mongoose.model(\"Suburb\", SuburbSchema);\n\nmodule.exports = Suburb;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst ScreenSchema = require(\"./schemas/config/screenSchema\");\n\nconst SuburbConfigSchema = new mongoose.Schema({\n  imageUrl: { type: String },\n  screens: [ScreenSchema],\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nSuburbConfigSchema.statics = {\n  SaveConfig: function (suburbConfig) {\n    let config = new this(suburbConfig);\n    return config.save();\n  },\n  UpdateConfig: function (id, config) {\n    return this.updateOne({ _id: id }, { ...config });\n  },\n};\n\nconst SuburbConfig = mongoose.model(\"SuburbConfig\", SuburbConfigSchema);\n\nmodule.exports = SuburbConfig;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\n\nconst SuburbInviteSchema = new mongoose.Schema({\n  code: {\n    type: String,\n  },\n  name: {\n    type: String,\n  },\n  street: {\n    type: String,\n  },\n  streetNumber: {\n    type: String,\n  },\n  suburbId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"Suburb\",\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  usedBy: {\n    type: String,\n  },\n  updatedTranstime: {\n    type: Date,\n  },\n  userType: {\n    type: String,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nSuburbInviteSchema.statics = {\n  SaveSuburbInvite: function (userInviteObj) {\n    let userInvite = new this(userInviteObj);\n    return userInvite.save();\n  },\n  UpdateSuburbInviteUsed: function (code, usedBy) {\n    return this.updateOne(\n      { $and: [{ code: code }, { active: true }] },\n      {\n        $set: {\n          usedBy: usedBy,\n          active: false,\n          updatedTranstime: moment.utc(),\n        },\n      }\n    );\n  },\n  GetInviteByCode: function (code) {\n    return new Promise((resolve, reject) => {\n      return this.findOne({ code: code, active: true }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result)\n          reject({ success: false, message: \"Cannot find the invite code.\" });\n        resolve(result);\n      });\n    });\n  },\n};\n\nconst SuburbInvite = mongoose.model(\"SuburbInvite\", SuburbInviteSchema);\n\nmodule.exports = SuburbInvite;\n","const mongoose = require(\"mongoose\");\nconst moment = require(\"moment\");\nconst { getUsersBySuburbStreet } = require(\"../logic/userService\");\n\nconst suburbStreetSchema = new mongoose.Schema({\n  street: {\n    type: String,\n  },\n  numbers: [{ type: String }],\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n});\n\nsuburbStreetSchema.statics = {\n  SaveStreet: function (suburbStreet) {\n    let config = new this(suburbStreet);\n    return config.save();\n  },\n  UpdateStreet: function (id, street) {\n    return this.updateOne({ _id: id }, { ...street });\n  },\n};\n\nconst SuburbStreet = mongoose.model(\"SuburbStreet\", suburbStreetSchema);\n\nmodule.exports = SuburbStreet;\n","const moment = require(\"moment\");\nconst bcrypt = require(\"bcryptjs\");\nconst jwt = require(\"jsonwebtoken\");\nconst mongoose = require(\"mongoose\");\nconst base64 = require(\"base-64\");\nconst GuestSchema = require(\"./schemas/guestSchema\");\nconst PushTokenSchema = require(\"./schemas/pushTokenSchema\");\n\nconst UserSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: \"Ingresa el nombre\",\n  },\n  lastName: {\n    type: String,\n  },\n  password: {\n    type: String,\n  },\n  loginName: {\n    type: String,\n    unique: true,\n  },\n  email: {\n    type: String,\n  },\n  cellphone: {\n    type: String,\n  },\n  photoUrl: {\n    type: String,\n  },\n  street: {\n    type: String,\n  },\n  streetNumber: {\n    type: String,\n  },\n  loginAttempts: {\n    type: Number,\n    default: 0,\n  },\n  temporaryDisabled: {\n    type: Boolean,\n    default: false,\n  },\n  disabledSince: {\n    type: Date,\n  },\n  lastAccess: {\n    type: Date,\n    default: moment.utc(),\n  },\n  /**\n   * valid user types:\n   *  guest -> a guest user\n   *  guard -> a guard of the suburb\n   *  admin -> an administrator of the suburb\n   *  sudo  -> an administrator of the app\n   */\n  userType: {\n    type: String,\n    default: \"guest\",\n  },\n  userConfirmed: {\n    type: Boolean,\n  },\n  facebookId: {\n    type: String,\n  },\n  googleId: {\n    type: String,\n  },\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  transtime: {\n    type: Date,\n    default: moment.utc(),\n  },\n  roles: [\n    {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Role\",\n    },\n  ],\n  suburb: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"Suburb\",\n  },\n  favorites: [GuestSchema],\n  pushTokens: [PushTokenSchema],\n});\n\n/**\n * Private attributes\n */\nconst _secretKey = process.env.JWT_SECRET;\n\nlet _getExpDate = () => {\n  var expTimeByMin =\n    process.env.exptoken != null ? process.env.exptoken : \"1440\";\n  return moment().add(expTimeByMin, \"minutes\").unix();\n};\n\nlet _getValidApis = (id) => {\n  //return an array with the valid apis\n  return [];\n};\n\nlet _getValidMenus = (id) => {\n  //return an array with the valid menus for the user\n  return [];\n};\n\n/**\n * Method to validate exp from the user token.\n * @param {*} expDate\n */\nlet _validateExpDate = function (expDate) {\n  let currentTime = moment().unix();\n  return expDate > currentTime;\n};\n\nUserSchema.methods = {\n  validatePassword: function (_password) {\n    var _this = this;\n    let pass = base64.decode(_password);\n    return new Promise(\n      (resolve, reject) => {\n        if (_this.temporaryDisabled) {\n          let wait = 10 - this.getDisabledSince();\n          if (wait > 0)\n            reject({\n              success: false,\n              message: `El usuario esta temporalmente desabilitado, por favor espere ${wait} minutos para volver a intentar.`,\n            });\n          else\n            this.increaseLoginAttempts(true).then((res) => {\n              this.validatePassword(_password).then(\n                (result) => resolve(result),\n                (err) => reject(err)\n              );\n            });\n        } else\n          bcrypt.compare(pass, _this.password).then((valid) => {\n            if (valid) {\n              //reset logint attempts\n              this.increaseLoginAttempts(true).then(\n                (res) => {\n                  resolve({\n                    success: true,\n                    message: \"La contraseña coincide.\",\n                  });\n                },\n                (err) =>\n                  reject({ success: false, message: \"Un error occurio.\" })\n              );\n            } else {\n              //increase login attempts\n              this.increaseLoginAttempts().then(\n                (res) => {\n                  reject({\n                    success: false,\n                    message: \"La contraseña no es valida.\",\n                  });\n                },\n                (err) =>\n                  reject({\n                    success: false,\n                    message: \"Un error occurio, la contraseña no es valida.\",\n                  })\n              );\n            }\n          });\n      },\n      (err) =>\n        reject({\n          success: false,\n          message: \"Ocurrio un error al comparar la contraseña.\",\n        })\n    );\n  },\n  getDisabledSince: function () {\n    let disabledSince = this.disabledSince ? this.disabledSince : moment.utc();\n    let start = moment(disabledSince);\n    let end = moment(moment.utc());\n    return end.diff(start, \"minutes\");\n  },\n  increaseLoginAttempts: function (reset) {\n    if (reset) {\n      this.loginAttempts = 0;\n      this.temporaryDisabled = false;\n      this.disabledSince = null;\n    } else {\n      let loginAttempts = this.loginAttempts + 1;\n      this.loginAttempts = loginAttempts;\n      this.temporaryDisabled = loginAttempts > 10;\n      this.disabledSince = loginAttempts > 10 ? moment.utc() : null;\n    }\n    return new Promise((resolve, reject) => {\n      return this.save().then(\n        (res) => {\n          resolve(res);\n        },\n        (err) => {\n          reject(err);\n        }\n      );\n    });\n  },\n  generateUserToken: function (_suburb) {\n    let payload = {\n      userId: this._id != undefined ? JSON.parse(JSON.stringify(this._id)) : \"\",\n      userName: `${this.name} ${this.lastName}`,\n      loginName: this.loginName,\n      suburb: this.suburb || _suburb,\n      userType: this.userType,\n      exp: _getExpDate(),\n      validApis: _getValidApis(this._id),\n      pushTokens: this.pushTokens,\n      street: this.street,\n      streetNumber: this.streetNumber,\n      //validMenus: _getValidMenus(this._id) //verify if is better put this in another schema i.e. suburb\n    };\n    let token = jwt.sign(payload, _secretKey);\n    return token;\n  },\n  setUserRole: function (userId, roles) {\n    if (!Array.isArray(roles)) roles = [roles];\n    return this.update(\n      {\n        _id: userId,\n      },\n      {\n        $addToSet: {\n          roles: {\n            $each: roles,\n          },\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  deleteUserRole: function (users, roles) {\n    if (!Array.isArray(users)) users = [users];\n    if (!Array.isArray(roles)) roles = [roles];\n\n    return this.update(\n      {\n        _id: {\n          $in: users,\n        },\n      },\n      {\n        $pullAll: {\n          roles: roles,\n        },\n      },\n      {\n        multi: true,\n      }\n    );\n  },\n  getUserRoles: function (userId) {\n    return new Promise((resolve, reject) => {\n      this.find({\n        _id: userId,\n      })\n        .populate(\"roles\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          resolve(getCleanResult(result, \"roles\"));\n        });\n    });\n  },\n};\n\nconst mergeArrayObjects = (currentFavs, newFavs) => {\n  let firstMerge = currentFavs.map((item, i) => {\n    let assign = {\n      name: item.name,\n      vehicle: item.vehicle,\n      subject: item.subject,\n      isService: item.isService,\n      count: item.count || 0,\n    };\n    newFavs.forEach((a2) => {\n      if (item.name === a2.name) {\n        assign = Object.assign(\n          {},\n          {\n            name: item.name,\n            vehicle: item.vehicle,\n            subject: item.subject,\n            isService: item.isService,\n            count: item.count || 0 + 1, //add 1 to calculate more used favs\n          },\n          a2\n        );\n      }\n    });\n    return { ...assign };\n  });\n\n  let all = [];\n  newFavs.forEach((item) => {\n    let add = true;\n    firstMerge.forEach((fm) => {\n      if (item.name.trim() === fm.name.trim()) add = false;\n    });\n    if (add) all.push(item);\n  });\n\n  let items = [...firstMerge, ...all].sort((a, b) => b.count - a.count);\n  return items.slice(0, items.length <= 30 ? items.length : 30); // solo mantendremos 30 favoritos para no sobrecargar la bd\n};\n\nconst mergePushTokens = (currentPushTokens, newPushToken) => {\n  let tokens = currentPushTokens.map((t) =>\n    t.token === newPushToken.token ? { ...newPushToken } : { ...t._doc }\n  );\n\n  let exists = tokens.filter((t) => t.token === newPushToken.token);\n  return exists.length > 0 ? [...tokens] : [...tokens, newPushToken];\n};\n\nconst extractUsersFromDoc = (mUsers) => {\n  let users = mUsers.map((u) => {\n    let { _id, name, lastName, street, streetNumber, active } = u._doc;\n    return { _id, name, lastName, street, streetNumber, active };\n  });\n  return users;\n};\n\nUserSchema.statics = {\n  /**\n   * Method to get a user by login name\n   */\n  getLogin: function (_loginName) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        loginName: _loginName,\n      }) /*.populate({\n                path: 'roles',\n                populate: {\n                    path: 'menus',\n                    model: 'Menu'\n                }\n            })*/\n        .exec((err, result) => {\n          if (err) reject(err);\n          resolve(result);\n        });\n    });\n  },\n  getUserByFacebookId: function (_facebookId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        facebookId: _facebookId,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result);\n      });\n    });\n  },\n  getUserByGoogleId: function (_googleId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        googleId: _googleId,\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result);\n      });\n    });\n  },\n  getUserFavs: function (userId) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(result.favorites);\n      });\n    });\n  },\n  addUserFavs: function (userId, favs) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result) reject({ message: \"user not found\" });\n        let mergedFavs = mergeArrayObjects(result.favorites || [], favs);\n        this.findOneAndUpdate(\n          { _id: userId },\n          { $set: { favorites: mergedFavs } },\n          { new: true },\n          function (err, user) {\n            if (err) reject(err);\n            resolve(mergedFavs);\n          }\n        );\n        resolve(result);\n      });\n    });\n  },\n  removeUserFavs: function (userId, favs) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result) reject({ message: \"user not found\" });\n        let filterFavs = (result.favorites || []).filter((item) => {\n          let exists = favs.filter((f) => f.name.trim() === item.name.trim());\n          return exists.length === 0;\n        });\n\n        this.findOneAndUpdate(\n          { _id: userId },\n          { $set: { favorites: filterFavs } },\n          { new: true },\n          function (err, user) {\n            if (err) reject(err);\n            resolve(filterFavs);\n          }\n        );\n        resolve(result);\n      });\n    });\n  },\n  addUserPushToken: function (userId, pushToken) {\n    return new Promise((resolve, reject) => {\n      this.findOne({ _id: userId }).exec((err, result) => {\n        if (err) reject(err);\n        if (!result) reject({ message: \"user not found\" });\n        let mergedPushTokens = mergePushTokens(result.pushTokens, {\n          token: pushToken,\n        });\n        this.findOneAndUpdate(\n          { _id: userId },\n          { $set: { pushTokens: mergedPushTokens } },\n          { new: true },\n          function (err, user) {\n            if (err) reject(err);\n            resolve(mergedPushTokens);\n          }\n        );\n      });\n    });\n  },\n  updateUser: function (objUser) {\n    return this.updateOne(\n      {\n        _id: objUser._id,\n      },\n      {\n        $set: {\n          name: objUser.name,\n          lastName: objUser.lastName,\n          password: objUser.password,\n          email: objUser.email,\n          cellphone: objUser.cellphone,\n          active: objUser.active,\n          userType: objUser.userType,\n          transtime: moment.utc(),\n        },\n      }\n    );\n  },\n  deleteUserInfo: function (userId) {\n    return this.deleteOne({ _id: userId });\n  },\n  saveUser: function (objUser) {\n    let user = new this(objUser);\n    return user.save();\n  },\n  updateUserPicture: function (userId, photoUrl) {\n    return this.updateOne({ _id: userId }, { $set: { photoUrl: photoUrl } });\n  },\n  /**\n   * Validate if the user token is active\n   */\n  isValidToken: function (_token) {\n    return new Promise(function (resolve, reject) {\n      var isValid = false;\n      try {\n        jwt.verify(_token, _secretKey, function (err, decoded) {\n          if (decoded) {\n            if (_validateExpDate(decoded.exp)) {\n              isValid = true;\n            }\n          }\n          resolve(isValid);\n        });\n      } catch (err) {\n        console.log(err);\n        reject(false);\n      }\n    });\n  },\n  /**\n   * Get the payload of the jwt token\n   * @param {String} _token\n   */\n  getTokenPayload: function (_token) {\n    return new Promise(function (resolve, reject) {\n      try {\n        jwt.verify(_token, _secretKey, function (err, decoded) {\n          resolve(decoded);\n        });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  },\n  encryptPassword: function (_password) {\n    return new Promise((resolve, reject) => {\n      let pass = base64.decode(_password);\n      let saltRounds = 10;\n      bcrypt.genSalt(saltRounds, (err, salt) => {\n        bcrypt.hash(pass, salt, (err, hash) => {\n          if (!err) resolve({ hash });\n          else reject(err);\n        });\n      });\n    });\n  },\n  getUserById: function (id) {\n    return new Promise((resolve, reject) => {\n      this.findOne({\n        _id: id,\n      })\n        .populate(\"suburb\", \"name\")\n        .exec((err, result) => {\n          if (err) reject(err);\n          resolve(result);\n        });\n    });\n  },\n  getUsersBySuburb: function (suburbId) {\n    return new Promise((resolve, reject) => {\n      this.find({ suburb: suburbId }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(extractUsersFromDoc(result));\n      });\n    });\n  },\n  getUsersBySuburbStreet: function (suburbId, street) {\n    return new Promise((resolve, reject) => {\n      this.find({ $and: [{ suburb: suburbId }, { street: street }] }).exec(\n        (err, result) => {\n          if (err) reject(err);\n          resolve(extractUsersFromDoc(result));\n        }\n      );\n    });\n  },\n  getUsersByAddress: function (suburbId, street, streetNumber) {\n    return new Promise((resolve, reject) => {\n      this.find({\n        $and: [\n          { suburb: suburbId },\n          { street: street },\n          { streetNumber: streetNumber },\n        ],\n      }).exec((err, result) => {\n        if (err) reject(err);\n        resolve(extractUsersFromDoc(result));\n      });\n    });\n  },\n};\n\nconst User = mongoose.model(\"User\", UserSchema);\n\nmodule.exports = User;\n","const router = require(\"express\").Router();\n\nconst siteAuth = require(\"../controllers/siteAuth\");\n\nconst menus = require(\"../controllers/menus\");\n\nconst postalCodes = require(\"../controllers/postalCodes\");\n\nconst signup = require(\"../controllers/signup\");\n\nconst handleFiles = require(\"../controllers/handleFile\");\n\nconst multer = require(\"multer\");\n\nconst suburb = require(\"../controllers/suburb\");\n\nconst pushNotification = require(\"../controllers/pushNotification\");\n\nlet upload = multer({ dest: \"./uploads/\" });\n\nrouter.post(\"/api/checkAuth\", siteAuth.checkAuth);\n\nrouter.post(\"/api/isValidToken\", siteAuth.isValidToken);\n\nrouter.post(\"/api/validateTokenPath\", siteAuth.validateTokenPath);\n\nrouter.post(\"/api/logOff\", siteAuth.logOff);\n\nrouter.get(\"/api/auth/fbtoken\", siteAuth.getTokenByFacebookId);\n\nrouter.get(\"/api/auth/googletoken\", siteAuth.getTokenByGoogleId);\n\nrouter.post(\"/api/signUp\", signup.signUp);\n\n//user apis\nconst userAdmin = require(\"../controllers/userAdmin\");\n\nrouter.post(\"/api/user/:userType\", userAdmin.createUserByType);\nrouter.get(\"/api/user/:userType\", userAdmin.getUserByType);\nrouter.get(\"/api/user\", userAdmin.getUserInfo);\nrouter.get(\"/api/userId\", userAdmin.getUserById);\nrouter.get(\"/api/userInfo/favorites\", userAdmin.getUserFavs);\nrouter.post(\"/api/userInfo/addFavorites\", userAdmin.addUserFavs);\nrouter.post(\"/api/userInfo/removeFavorites\", userAdmin.removeUserFavs);\nrouter.post(\"/api/userInfo/addUserPushToken\", userAdmin.addUserPushToken);\nrouter.get(\"/api/userInfo/getUsersByAddress\", userAdmin.getUsersByAddress);\nrouter.post(\"/api/userInfo/updatePicture\", userAdmin.updateUserPicture);\n\nrouter.post(\"/api/saveGoogleUser\", userAdmin.saveGoogleUser);\nrouter.post(\"/api/saveFacebookUser\", userAdmin.saveFacebookUser);\nrouter.post(\"/api/saveEmailUser\", userAdmin.saveEmailUser);\nrouter.post(\"/api/saveUserBySuburb\", userAdmin.saveUserBySuburbId);\nrouter.post(\"/api/deleteUserInfo\", userAdmin.deleteUserInfo);\n\n//logged user APIs\nrouter.get(\"/api/me/menu\", menus.getMenusByUser);\n\n//postal codes\nrouter.get(\"/api/cp/getCPInfo\", postalCodes.getPostalCodeInfo);\n\n//handle files\nrouter.post(\"/api/file/upload\", upload.any(), handleFiles.uploadFile);\n\n//suburb apis\nrouter.post(\"/api/suburb/approveReject\", suburb.approveReject);\n\nrouter.get(\"/api/suburb/info\", suburb.getSuburbByAdminId);\n\nrouter.get(\"/api/suburb/get\", suburb.getSuburbById);\n\nrouter.post(\"/api/suburb/addSuburbInvite\", suburb.addSuburbInvite);\n\nrouter.get(\"/api/suburb/getInviteByCode\", suburb.getSuburbInvite);\n\nrouter.get(\"/api/suburb/getStreets\", suburb.getStreets);\n\nrouter.get(\"/api/suburb/getStreetNumbers\", suburb.getStreetNumbers);\n\nrouter.post(\"/api/suburb/updateConfig\", suburb.saveSuburbConfig);\n\nrouter.get(\"/api/suburb/getConfig\", suburb.getSuburbConfig);\n\nrouter.post(\"/api/suburb/saveStreet\", suburb.saveSuburbStreet);\n\nrouter.get(\"/api/suburb/getAllStreets\", suburb.getSuburbStreets);\n\n//push notifications\nrouter.post(\"/api/notification/test\", pushNotification.sendTestNotification);\nrouter.post(\n  \"/api/notification/arrive\",\n  pushNotification.sendArriveNotification\n);\n\nmodule.exports = router;\n","const express = require(\"express\");\nconst router = express.Router();\n\nconst auth = require(\"../middleware/auth\");\n\n//routes\nconst apiRoutes = require(\"./apiRoutes\");\n\nrouter.use(\"/api/*\", auth.checkApiAuth);\nrouter.all(\"/api/*\", apiRoutes);\n\nmodule.exports = router;\n","/**\n * Module dependencies.\n */\n\nvar app = require('./app');\nvar debug = require('debug')('rochacoapi:server');\nvar http = require('http');\n\n/**\n * Get port from environment and store in Express.\n */\n\nvar port = normalizePort(process.env.PORT || '4010');\napp.set('port', port);\n\n/**\n * Create HTTP server.\n */\n\nvar server = http.createServer(app);\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nfunction normalizePort(val) {\n  var port = parseInt(val, 10);\n\n  if (isNaN(port)) {\n    // named pipe\n    return val;\n  }\n\n  if (port >= 0) {\n    // port number\n    return port;\n  }\n\n  return false;\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error) {\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n\n  var bind = typeof port === 'string'\n    ? 'Pipe ' + port\n    : 'Port ' + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nfunction onListening() {\n  console.log(\"running on port\", process.env.PORT);\n  var addr = server.address();\n  var bind = typeof addr === 'string'\n    ? 'pipe ' + addr\n    : 'port ' + addr.port;\n  debug('Listening on ' + bind);\n}\n","module.exports = require(\"@sendgrid/mail\");","module.exports = require(\"base-64\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"crypto-js\");","module.exports = require(\"debug\");","module.exports = require(\"dotenv\");","module.exports = require(\"dropbox-v2-api\");","module.exports = require(\"expo-server-sdk\");","module.exports = require(\"express\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"moment\");","module.exports = require(\"mongoose\");","module.exports = require(\"morgan\");","module.exports = require(\"multer\");","module.exports = require(\"request\");"],"sourceRoot":""}